/*! For license information please see 84.js.LICENSE.txt */
(self.webpackChunkoffice_addin_taskpane_react_js=self.webpackChunkoffice_addin_taskpane_react_js||[]).push([[84],{29098:function(e,t,n){"use strict";e.exports=n.p+"666d0398a1e13e9c0c1d.wasm"},64583:function(e,t,n){e.exports=function(){"use strict";function e(e){return"function"==typeof e}var t=Array.isArray?Array.isArray:function(e){return"[object Array]"===Object.prototype.toString.call(e)},r=0,s=void 0,i=void 0,a=function(e,t){h[r]=e,h[r+1]=t,2===(r+=2)&&(i?i(m):y())};var o="undefined"!=typeof window?window:void 0,l=o||{},u=l.MutationObserver||l.WebKitMutationObserver,c="undefined"==typeof self&&"undefined"!=typeof process&&"[object process]"==={}.toString.call(process),d="undefined"!=typeof Uint8ClampedArray&&"undefined"!=typeof importScripts&&"undefined"!=typeof MessageChannel;function p(){var e=setTimeout;return function(){return e(m,1)}}var h=new Array(1e3);function m(){for(var e=0;e<r;e+=2)(0,h[e])(h[e+1]),h[e]=void 0,h[e+1]=void 0;r=0}var f,_,g,w,y=void 0;function b(e,t){var n=this,r=new this.constructor(M);void 0===r[v]&&L(r);var s=n._state;if(s){var i=arguments[s-1];a(function(){return z(s,r,i,n._result)})}else I(n,r,e,t);return r}function x(e){if(e&&"object"==typeof e&&e.constructor===this)return e;var t=new this(M);return C(t,e),t}y=c?function(){return process.nextTick(m)}:u?(_=0,g=new u(m),w=document.createTextNode(""),g.observe(w,{characterData:!0}),function(){w.data=_=++_%2}):d?((f=new MessageChannel).port1.onmessage=m,function(){return f.port2.postMessage(0)}):void 0===o?function(){try{var e=Function("return this")().require("vertx");return void 0!==(s=e.runOnLoop||e.runOnContext)?function(){s(m)}:p()}catch(e){return p()}}():p();var v=Math.random().toString(36).substring(2);function M(){}var k=void 0,T=1,$=2;function S(t,n,r){n.constructor===t.constructor&&r===b&&n.constructor.resolve===x?function(e,t){t._state===T?P(e,t._result):t._state===$?A(e,t._result):I(t,void 0,function(t){return C(e,t)},function(t){return A(e,t)})}(t,n):void 0===r?P(t,n):e(r)?function(e,t,n){a(function(e){var r=!1,s=function(e,t,n,r){try{e.call(t,n,r)}catch(e){return e}}(n,t,function(n){r||(r=!0,t!==n?C(e,n):P(e,n))},function(t){r||(r=!0,A(e,t))},e._label);!r&&s&&(r=!0,A(e,s))},e)}(t,n,r):P(t,n)}function C(e,t){if(e===t)A(e,new TypeError("You cannot resolve a promise with itself"));else if(s=typeof(r=t),null===r||"object"!==s&&"function"!==s)P(e,t);else{var n=void 0;try{n=t.then}catch(t){return void A(e,t)}S(e,t,n)}var r,s}function E(e){e._onerror&&e._onerror(e._result),F(e)}function P(e,t){e._state===k&&(e._result=t,e._state=T,0!==e._subscribers.length&&a(F,e))}function A(e,t){e._state===k&&(e._state=$,e._result=t,a(E,e))}function I(e,t,n,r){var s=e._subscribers,i=s.length;e._onerror=null,s[i]=t,s[i+T]=n,s[i+$]=r,0===i&&e._state&&a(F,e)}function F(e){var t=e._subscribers,n=e._state;if(0!==t.length){for(var r=void 0,s=void 0,i=e._result,a=0;a<t.length;a+=3)r=t[a],s=t[a+n],r?z(n,r,s,i):s(i);e._subscribers.length=0}}function z(t,n,r,s){var i=e(r),a=void 0,o=void 0,l=!0;if(i){try{a=r(s)}catch(e){l=!1,o=e}if(n===a)return void A(n,new TypeError("A promises callback cannot return that same promise."))}else a=s;n._state!==k||(i&&l?C(n,a):!1===l?A(n,o):t===T?P(n,a):t===$&&A(n,a))}var O=0;function L(e){e[v]=O++,e._state=void 0,e._result=void 0,e._subscribers=[]}var B=function(){function e(e,n){this._instanceConstructor=e,this.promise=new e(M),this.promise[v]||L(this.promise),t(n)?(this.length=n.length,this._remaining=n.length,this._result=new Array(this.length),0===this.length?P(this.promise,this._result):(this.length=this.length||0,this._enumerate(n),0===this._remaining&&P(this.promise,this._result))):A(this.promise,new Error("Array Methods must be provided an Array"))}return e.prototype._enumerate=function(e){for(var t=0;this._state===k&&t<e.length;t++)this._eachEntry(e[t],t)},e.prototype._eachEntry=function(e,t){var n=this._instanceConstructor,r=n.resolve;if(r===x){var s=void 0,i=void 0,a=!1;try{s=e.then}catch(e){a=!0,i=e}if(s===b&&e._state!==k)this._settledAt(e._state,t,e._result);else if("function"!=typeof s)this._remaining--,this._result[t]=e;else if(n===D){var o=new n(M);a?A(o,i):S(o,e,s),this._willSettleAt(o,t)}else this._willSettleAt(new n(function(t){return t(e)}),t)}else this._willSettleAt(r(e),t)},e.prototype._settledAt=function(e,t,n){var r=this.promise;r._state===k&&(this._remaining--,e===$?A(r,n):this._result[t]=n),0===this._remaining&&P(r,this._result)},e.prototype._willSettleAt=function(e,t){var n=this;I(e,void 0,function(e){return n._settledAt(T,t,e)},function(e){return n._settledAt($,t,e)})},e}();var D=function(){function t(e){this[v]=O++,this._result=this._state=void 0,this._subscribers=[],M!==e&&("function"!=typeof e&&function(){throw new TypeError("You must pass a resolver function as the first argument to the promise constructor")}(),this instanceof t?function(e,t){try{t(function(t){C(e,t)},function(t){A(e,t)})}catch(t){A(e,t)}}(this,e):function(){throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.")}())}return t.prototype.catch=function(e){return this.then(null,e)},t.prototype.finally=function(t){var n=this,r=n.constructor;return e(t)?n.then(function(e){return r.resolve(t()).then(function(){return e})},function(e){return r.resolve(t()).then(function(){throw e})}):n.then(t,t)},t}();return D.prototype.then=b,D.all=function(e){return new B(this,e).promise},D.race=function(e){var n=this;return t(e)?new n(function(t,r){for(var s=e.length,i=0;i<s;i++)n.resolve(e[i]).then(t,r)}):new n(function(e,t){return t(new TypeError("You must pass an array to race."))})},D.resolve=x,D.reject=function(e){var t=new this(M);return A(t,e),t},D._setScheduler=function(e){i=e},D._setAsap=function(e){a=e},D._asap=a,D.polyfill=function(){var e=void 0;if(void 0!==n.g)e=n.g;else if("undefined"!=typeof self)e=self;else try{e=Function("return this")()}catch(e){throw new Error("polyfill failed because global object is unavailable in this environment")}var t=e.Promise;if(t){var r=null;try{r=Object.prototype.toString.call(t.resolve())}catch(e){}if("[object Promise]"===r&&!t.cast)return}e.Promise=D},D.Promise=D,D}()},78503:function(e,t,n){"use strict";e.exports=n.p+"f8be43cc10c73fcf7932.mjs"},86084:function(e,t,n){"use strict";n.d(t,{T1P:function(){return Xd},TkF:function(){return Jd}});var r={};n.r(r),n.d(r,{InferenceSession:function(){return k},TRACE:function(){return y},TRACE_FUNC_BEGIN:function(){return x},TRACE_FUNC_END:function(){return v},Tensor:function(){return w},env:function(){return d},registerBackend:function(){return o}});var s={};n.r(s),n.d(s,{InferenceSession:function(){return ne},TRACE:function(){return J},TRACE_FUNC_BEGIN:function(){return Z},TRACE_FUNC_END:function(){return ee},Tensor:function(){return X},default:function(){return Vd},env:function(){return z},registerBackend:function(){return C}});const i=new Map,a=[],o=(e,t,n)=>{if(t&&"function"==typeof t.init&&"function"==typeof t.createInferenceSessionHandler){const r=i.get(e);if(void 0===r)i.set(e,{backend:t,priority:n});else{if(r.priority>n)return;if(r.priority===n&&r.backend!==t)throw new Error(`cannot register backend "${e}" using priority ${n}`)}if(n>=0){const t=a.indexOf(e);-1!==t&&a.splice(t,1);for(let t=0;t<a.length;t++)if(i.get(a[t]).priority<=n)return void a.splice(t,0,e);a.push(e)}return}throw new TypeError("not a valid backend")},l=async e=>{const t=i.get(e);if(!t)return"backend not found.";if(t.initialized)return t.backend;if(t.aborted)return t.error;{const n=!!t.initPromise;try{return n||(t.initPromise=t.backend.init(e)),await t.initPromise,t.initialized=!0,t.backend}catch(e){return n||(t.error=`${e}`,t.aborted=!0),t.error}finally{delete t.initPromise}}};let u="warning";const c={wasm:{},webgl:{},webgpu:{},versions:{common:"1.21.0"},set logLevel(e){if(void 0!==e){if("string"!=typeof e||-1===["verbose","info","warning","error","fatal"].indexOf(e))throw new Error(`Unsupported logging level: ${e}`);u=e}},get logLevel(){return u}};Object.defineProperty(c,"logLevel",{enumerable:!0});const d=c;var p=n(64583).Promise;const h=(e,t)=>{if(void 0===e)throw new Error("Image buffer must be defined");if(void 0===t.height||void 0===t.width)throw new Error("Image height and width must be defined");if("NHWC"===t.tensorLayout)throw new Error("NHWC Tensor layout is not supported yet");const{height:n,width:r}=t,s=t.norm??{mean:255,bias:0};let i,a;i="number"==typeof s.mean?[s.mean,s.mean,s.mean,s.mean]:[s.mean[0],s.mean[1],s.mean[2],s.mean[3]??255],a="number"==typeof s.bias?[s.bias,s.bias,s.bias,s.bias]:[s.bias[0],s.bias[1],s.bias[2],s.bias[3]??0];const o=void 0!==t.format?t.format:"RGBA",l=void 0!==t.tensorFormat&&void 0!==t.tensorFormat?t.tensorFormat:"RGB",u=n*r,c="RGBA"===l?new Float32Array(4*u):new Float32Array(3*u);let d=4,p=0,h=1,m=2,f=3,_=0,w=u,y=2*u,b=-1;"RGB"===o&&(d=3,p=0,h=1,m=2,f=-1),"RGBA"===l?b=3*u:"RBG"===l?(_=0,y=u,w=2*u):"BGR"===l&&(y=0,w=u,_=2*u);for(let t=0;t<u;t++,p+=d,m+=d,h+=d,f+=d)c[_++]=(e[p]+a[0])/i[0],c[w++]=(e[h]+a[1])/i[1],c[y++]=(e[m]+a[2])/i[2],-1!==b&&-1!==f&&(c[b++]=(e[f]+a[3])/i[3]);return new g("float32",c,"RGBA"===l?[1,4,n,r]:[1,3,n,r])},m=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),f=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]);let _=!1;class g{constructor(e,t,n){let r,s;if((()=>{if(!_){_=!0;const e="undefined"!=typeof BigInt64Array&&BigInt64Array.from,t="undefined"!=typeof BigUint64Array&&BigUint64Array.from,n=globalThis.Float16Array,r=void 0!==n&&n.from;e&&(m.set("int64",BigInt64Array),f.set(BigInt64Array,"int64")),t&&(m.set("uint64",BigUint64Array),f.set(BigUint64Array,"uint64")),r?(m.set("float16",n),f.set(n,"float16")):m.set("float16",Uint16Array)}})(),"object"==typeof e&&"location"in e)switch(this.dataLocation=e.location,r=e.type,s=e.dims,e.location){case"cpu-pinned":{const t=m.get(r);if(!t)throw new TypeError(`unsupported type "${r}" to create tensor from pinned buffer`);if(!(e.data instanceof t))throw new TypeError(`buffer should be of type ${t.name}`);this.cpuData=e.data;break}case"texture":if("float32"!==r)throw new TypeError(`unsupported type "${r}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break;case"gpu-buffer":if("float32"!==r&&"float16"!==r&&"int32"!==r&&"int64"!==r&&"uint32"!==r&&"uint8"!==r&&"bool"!==r&&"uint4"!==r&&"int4"!==r)throw new TypeError(`unsupported type "${r}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break;case"ml-tensor":if("float32"!==r&&"float16"!==r&&"int32"!==r&&"int64"!==r&&"uint32"!==r&&"uint64"!==r&&"int8"!==r&&"uint8"!==r&&"bool"!==r&&"uint4"!==r&&"int4"!==r)throw new TypeError(`unsupported type "${r}" to create tensor from MLTensor`);this.mlTensorData=e.mlTensor,this.downloader=e.download,this.disposer=e.dispose;break;default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let i,a;if("string"==typeof e)if(r=e,a=n,"string"===e){if(!Array.isArray(t))throw new TypeError("A string tensor's data must be a string array.");i=t}else{const n=m.get(e);if(void 0===n)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(t)){if("float16"===e&&n===Uint16Array||"uint4"===e||"int4"===e)throw new TypeError(`Creating a ${e} tensor from number array is not supported. Please use ${n.name} as data.`);i="uint64"===e||"int64"===e?n.from(t,BigInt):n.from(t)}else if(t instanceof n)i=t;else if(t instanceof Uint8ClampedArray){if("uint8"!==e)throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");i=Uint8Array.from(t)}else{if(!("float16"===e&&t instanceof Uint16Array&&n!==Uint16Array))throw new TypeError(`A ${r} tensor's data must be type of ${n}`);i=new globalThis.Float16Array(t.buffer,t.byteOffset,t.length)}}else if(a=t,Array.isArray(e)){if(0===e.length)throw new TypeError("Tensor type cannot be inferred from an empty array.");const t=typeof e[0];if("string"===t)r="string",i=e;else{if("boolean"!==t)throw new TypeError(`Invalid element type of data array: ${t}.`);r="bool",i=Uint8Array.from(e)}}else if(e instanceof Uint8ClampedArray)r="uint8",i=Uint8Array.from(e);else{const t=f.get(e.constructor);if(void 0===t)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);r=t,i=e}if(void 0===a)a=[i.length];else if(!Array.isArray(a))throw new TypeError("A tensor's dims must be a number array");s=a,this.cpuData=i,this.dataLocation="cpu"}const i=(e=>{let t=1;for(let n=0;n<e.length;n++){const r=e[n];if("number"!=typeof r||!Number.isSafeInteger(r))throw new TypeError(`dims[${n}] must be an integer, got: ${r}`);if(r<0)throw new RangeError(`dims[${n}] must be a non-negative integer, got: ${r}`);t*=r}return t})(s);if(this.cpuData&&i!==this.cpuData.length&&("uint4"!==r&&"int4"!==r||Math.ceil(i/2)!==this.cpuData.length))throw new Error(`Tensor's size(${i}) does not match data length(${this.cpuData.length}).`);this.type=r,this.dims=s,this.size=i}static async fromImage(e,t){return(async(e,t)=>{const n="undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement,r="undefined"!=typeof ImageData&&e instanceof ImageData,s="undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap,i="string"==typeof e;let a,o=t??{};const l=()=>{if("undefined"!=typeof document)return document.createElement("canvas");if("undefined"!=typeof OffscreenCanvas)return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},u=e=>"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||e instanceof OffscreenCanvas?e.getContext("2d"):null;if(n){const n=l();n.width=e.width,n.height=e.height;const r=u(n);if(null==r)throw new Error("Can not access image data");{let n=e.height,s=e.width;if(void 0!==t&&void 0!==t.resizedHeight&&void 0!==t.resizedWidth&&(n=t.resizedHeight,s=t.resizedWidth),void 0!==t){if(o=t,void 0!==t.tensorFormat)throw new Error("Image input config format must be RGBA for HTMLImageElement");o.tensorFormat="RGBA",o.height=n,o.width=s}else o.tensorFormat="RGBA",o.height=n,o.width=s;r.drawImage(e,0,0),a=r.getImageData(0,0,s,n).data}}else{if(!r){if(s){if(void 0===t)throw new Error("Please provide image config with format for Imagebitmap");const n=l();n.width=e.width,n.height=e.height;const r=u(n);if(null!=r){const t=e.height,n=e.width;return r.drawImage(e,0,0,n,t),a=r.getImageData(0,0,n,t).data,o.height=t,o.width=n,h(a,o)}throw new Error("Can not access image data")}if(i)return new p((t,n)=>{const r=l(),s=u(r);if(!e||!s)return n();const i=new Image;i.crossOrigin="Anonymous",i.src=e,i.onload=()=>{r.width=i.width,r.height=i.height,s.drawImage(i,0,0,r.width,r.height);const e=s.getImageData(0,0,r.width,r.height);o.height=r.height,o.width=r.width,t(h(e.data,o))}});throw new Error("Input data provided is not supported - aborted tensor creation")}{let n,r;if(void 0!==t&&void 0!==t.resizedWidth&&void 0!==t.resizedHeight?(n=t.resizedHeight,r=t.resizedWidth):(n=e.height,r=e.width),void 0!==t&&(o=t),o.format="RGBA",o.height=n,o.width=r,void 0!==t){const t=l();t.width=r,t.height=n;const s=u(t);if(null==s)throw new Error("Can not access image data");s.putImageData(e,0,0),a=s.getImageData(0,0,r,n).data}else a=e.data}}if(void 0!==a)return h(a,o);throw new Error("Input data provided is not supported - aborted tensor creation")})(e,t)}static fromTexture(e,t){return((e,t)=>{const{width:n,height:r,download:s,dispose:i}=t;return new g({location:"texture",type:"float32",texture:e,dims:[1,r,n,4],download:s,dispose:i})})(e,t)}static fromGpuBuffer(e,t){return((e,t)=>{const{dataType:n,dims:r,download:s,dispose:i}=t;return new g({location:"gpu-buffer",type:n??"float32",gpuBuffer:e,dims:r,download:s,dispose:i})})(e,t)}static fromMLTensor(e,t){return((e,t)=>{const{dataType:n,dims:r,download:s,dispose:i}=t;return new g({location:"ml-tensor",type:n??"float32",mlTensor:e,dims:r,download:s,dispose:i})})(e,t)}static fromPinnedBuffer(e,t,n){return((e,t,n)=>new g({location:"cpu-pinned",type:e,data:t,dims:n??[t.length]}))(e,t,n)}toDataURL(e){return((e,t)=>{const n="undefined"!=typeof document?document.createElement("canvas"):new OffscreenCanvas(1,1);n.width=e.dims[3],n.height=e.dims[2];const r=n.getContext("2d");if(null!=r){let s,i;void 0!==t?.tensorLayout&&"NHWC"===t.tensorLayout?(s=e.dims[2],i=e.dims[3]):(s=e.dims[3],i=e.dims[2]);const a=void 0!==t?.format?t.format:"RGB",o=t?.norm;let l,u;void 0===o||void 0===o.mean?l=[255,255,255,255]:"number"==typeof o.mean?l=[o.mean,o.mean,o.mean,o.mean]:(l=[o.mean[0],o.mean[1],o.mean[2],0],void 0!==o.mean[3]&&(l[3]=o.mean[3])),void 0===o||void 0===o.bias?u=[0,0,0,0]:"number"==typeof o.bias?u=[o.bias,o.bias,o.bias,o.bias]:(u=[o.bias[0],o.bias[1],o.bias[2],0],void 0!==o.bias[3]&&(u[3]=o.bias[3]));const c=i*s;let d=0,p=c,h=2*c,m=-1;"RGBA"===a?(d=0,p=c,h=2*c,m=3*c):"RGB"===a?(d=0,p=c,h=2*c):"RBG"===a&&(d=0,h=c,p=2*c);for(let t=0;t<i;t++)for(let n=0;n<s;n++){const s=(e.data[d++]-u[0])*l[0],i=(e.data[p++]-u[1])*l[1],a=(e.data[h++]-u[2])*l[2],o=-1===m?255:(e.data[m++]-u[3])*l[3];r.fillStyle="rgba("+s+","+i+","+a+","+o+")",r.fillRect(n,t,1,1)}if("toDataURL"in n)return n.toDataURL();throw new Error("toDataURL is not supported")}throw new Error("Can not access image data")})(this,e)}toImageData(e){return((e,t)=>{const n="undefined"!=typeof document?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");let r;if(null==n)throw new Error("Can not access image data");{let s,i,a;void 0!==t?.tensorLayout&&"NHWC"===t.tensorLayout?(s=e.dims[2],i=e.dims[1],a=e.dims[3]):(s=e.dims[3],i=e.dims[2],a=e.dims[1]);const o=void 0!==t&&void 0!==t.format?t.format:"RGB",l=t?.norm;let u,c;void 0===l||void 0===l.mean?u=[255,255,255,255]:"number"==typeof l.mean?u=[l.mean,l.mean,l.mean,l.mean]:(u=[l.mean[0],l.mean[1],l.mean[2],255],void 0!==l.mean[3]&&(u[3]=l.mean[3])),void 0===l||void 0===l.bias?c=[0,0,0,0]:"number"==typeof l.bias?c=[l.bias,l.bias,l.bias,l.bias]:(c=[l.bias[0],l.bias[1],l.bias[2],0],void 0!==l.bias[3]&&(c[3]=l.bias[3]));const d=i*s;if(void 0!==t&&(void 0!==t.format&&4===a&&"RGBA"!==t.format||3===a&&"RGB"!==t.format&&"BGR"!==t.format))throw new Error("Tensor format doesn't match input tensor dims");const p=4;let h=0,m=1,f=2,_=3,g=0,w=d,y=2*d,b=-1;"RGBA"===o?(g=0,w=d,y=2*d,b=3*d):"RGB"===o?(g=0,w=d,y=2*d):"RBG"===o&&(g=0,y=d,w=2*d),r=n.createImageData(s,i);for(let t=0;t<i*s;h+=p,m+=p,f+=p,_+=p,t++)r.data[h]=(e.data[g++]-c[0])*u[0],r.data[m]=(e.data[w++]-c[1])*u[1],r.data[f]=(e.data[y++]-c[2])*u[2],r.data[_]=-1===b?255:(e.data[b++]-c[3])*u[3]}return r})(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;const t=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=t,e&&this.disposer&&(this.disposer(),this.disposer=void 0),t}finally{this.isDownloading=!1}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if("none"===this.dataLocation)throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return((e,t)=>{switch(e.location){case"cpu":return new g(e.type,e.data,t);case"cpu-pinned":return new g({location:"cpu-pinned",data:e.data,type:e.type,dims:t});case"texture":return new g({location:"texture",texture:e.texture,type:e.type,dims:t});case"gpu-buffer":return new g({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:t});case"ml-tensor":return new g({location:"ml-tensor",mlTensor:e.mlTensor,type:e.type,dims:t});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}})(this,e)}}const w=g,y=(e,t)=>{(void 0===c.trace?c.wasm.trace:c.trace)&&console.timeStamp(`${e}::ORT::${t}`)},b=(e,t)=>{const n=(new Error).stack?.split(/\r\n|\r|\n/g)||[];let r=!1;for(let s=0;s<n.length;s++){if(r&&!n[s].includes("TRACE_FUNC")){let r=`FUNC_${e}::${n[s].trim().split(" ")[1]}`;return t&&(r+=`::${t}`),void y("CPU",r)}n[s].includes("TRACE_FUNC")&&(r=!0)}},x=e=>{(void 0===c.trace?c.wasm.trace:c.trace)&&b("BEGIN",e)},v=e=>{(void 0===c.trace?c.wasm.trace:c.trace)&&b("END",e)};class M{constructor(e){this.handler=e}async run(e,t,n){x();const r={};let s={};if("object"!=typeof e||null===e||e instanceof w||Array.isArray(e))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let i=!0;if("object"==typeof t){if(null===t)throw new TypeError("Unexpected argument[1]: cannot be null.");if(t instanceof w)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(t)){if(0===t.length)throw new TypeError("'fetches' cannot be an empty array.");i=!1;for(const e of t){if("string"!=typeof e)throw new TypeError("'fetches' must be a string array or an object.");if(-1===this.outputNames.indexOf(e))throw new RangeError(`'fetches' contains invalid output name: ${e}.`);r[e]=null}if("object"==typeof n&&null!==n)s=n;else if(void 0!==n)throw new TypeError("'options' must be an object.")}else{let e=!1;const a=Object.getOwnPropertyNames(t);for(const n of this.outputNames)if(-1!==a.indexOf(n)){const s=t[n];(null===s||s instanceof w)&&(e=!0,i=!1,r[n]=s)}if(e){if("object"==typeof n&&null!==n)s=n;else if(void 0!==n)throw new TypeError("'options' must be an object.")}else s=t}}else if(void 0!==t)throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const t of this.inputNames)if(void 0===e[t])throw new Error(`input '${t}' is missing in 'feeds'.`);if(i)for(const e of this.outputNames)r[e]=null;const a=await this.handler.run(e,r,s),o={};for(const e in a)if(Object.hasOwnProperty.call(a,e)){const t=a[e];o[e]=t instanceof w?t:new w(t.type,t.data,t.dims)}return v(),o}async release(){return this.handler.dispose()}static async create(e,t,n,r){let s;x();let i={};if("string"==typeof e){if(s=e,"object"==typeof t&&null!==t)i=t;else if(void 0!==t)throw new TypeError("'options' must be an object.")}else if(e instanceof Uint8Array){if(s=e,"object"==typeof t&&null!==t)i=t;else if(void 0!==t)throw new TypeError("'options' must be an object.")}else{if(!(e instanceof ArrayBuffer||"undefined"!=typeof SharedArrayBuffer&&e instanceof SharedArrayBuffer))throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");{const a=e;let o=0,l=e.byteLength;if("object"==typeof t&&null!==t)i=t;else if("number"==typeof t){if(o=t,!Number.isSafeInteger(o))throw new RangeError("'byteOffset' must be an integer.");if(o<0||o>=a.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${a.byteLength}).`);if(l=e.byteLength-o,"number"==typeof n){if(l=n,!Number.isSafeInteger(l))throw new RangeError("'byteLength' must be an integer.");if(l<=0||o+l>a.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${a.byteLength-o}].`);if("object"==typeof r&&null!==r)i=r;else if(void 0!==r)throw new TypeError("'options' must be an object.")}else if(void 0!==n)throw new TypeError("'byteLength' must be a number.")}else if(void 0!==t)throw new TypeError("'options' must be an object.");s=new Uint8Array(a,o,l)}}const[o,u]=await(async e=>{const t=e.executionProviders||[],n=t.map(e=>"string"==typeof e?e:e.name),r=0===n.length?a:n;let s;const i=[],o=new Set;for(const e of r){const t=await l(e);"string"==typeof t?i.push({name:e,err:t}):(s||(s=t),s===t&&o.add(e))}if(!s)throw new Error(`no available backend found. ERR: ${i.map(e=>`[${e.name}] ${e.err}`).join(", ")}`);for(const{name:e,err:t}of i)n.includes(e)&&console.warn(`removing requested execution provider "${e}" from session options because it is not available: ${t}`);const u=t.filter(e=>o.has("string"==typeof e?e:e.name));return[s,new Proxy(e,{get:(e,t)=>"executionProviders"===t?u:Reflect.get(e,t)})]})(i),c=await o.createInferenceSessionHandler(s,u);return v(),new M(c)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}const k=M;var T,$,S,C,E,P,A,I,F,z,O,L,B,D,N,j,R,V,G,U,q,W,H,K,Q,X,J,Y,Z,ee,te,ne,re=n(64583).Promise,se=Object.defineProperty,ie=Object.getOwnPropertyDescriptor,ae=Object.getOwnPropertyNames,oe=Object.prototype.hasOwnProperty,le=(T=function(e){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')},typeof require<"u"?require:typeof Proxy<"u"?new Proxy(T,{get:(e,t)=>(typeof require<"u"?require:e)[t]}):T),ue=(e,t)=>()=>(e&&(t=e(e=0)),t),ce=(e,t)=>{for(var n in t)se(e,n,{get:t[n],enumerable:!0})},de=e=>((e,t,n,r)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let n of ae(t))!oe.call(e,n)&&undefined!==n&&se(e,n,{get:()=>t[n],enumerable:!(r=ie(t,n))||r.enumerable});return e})(se({},"__esModule",{value:!0}),e),pe=ue(()=>{$=new Map,S=[],C=(e,t,n)=>{if(t&&"function"==typeof t.init&&"function"==typeof t.createInferenceSessionHandler){let r=$.get(e);if(void 0===r)$.set(e,{backend:t,priority:n});else{if(r.priority>n)return;if(r.priority===n&&r.backend!==t)throw new Error(`cannot register backend "${e}" using priority ${n}`)}if(n>=0){let t=S.indexOf(e);-1!==t&&S.splice(t,1);for(let t=0;t<S.length;t++)if($.get(S[t]).priority<=n)return void S.splice(t,0,e);S.push(e)}return}throw new TypeError("not a valid backend")},E=async e=>{let t=$.get(e);if(!t)return"backend not found.";if(t.initialized)return t.backend;if(t.aborted)return t.error;{let n=!!t.initPromise;try{return n||(t.initPromise=t.backend.init(e)),await t.initPromise,t.initialized=!0,t.backend}catch(e){return n||(t.error=`${e}`,t.aborted=!0),t.error}finally{delete t.initPromise}}},P=async e=>{let t,n=e.executionProviders||[],r=n.map(e=>"string"==typeof e?e:e.name),s=0===r.length?S:r,i=[],a=new Set;for(let e of s){let n=await E(e);"string"==typeof n?i.push({name:e,err:n}):(t||(t=n),t===n&&a.add(e))}if(!t)throw new Error(`no available backend found. ERR: ${i.map(e=>`[${e.name}] ${e.err}`).join(", ")}`);for(let{name:e,err:t}of i)r.includes(e)&&console.warn(`removing requested execution provider "${e}" from session options because it is not available: ${t}`);let o=n.filter(e=>a.has("string"==typeof e?e:e.name));return[t,new Proxy(e,{get:(e,t)=>"executionProviders"===t?o:Reflect.get(e,t)})]}}),he=ue(()=>{pe()}),me=ue(()=>{A="1.22.0-dev.20250409-89f8206ba4"}),fe=ue(()=>{me(),I="warning",F={wasm:{},webgl:{},webgpu:{},versions:{common:A},set logLevel(e){if(void 0!==e){if("string"!=typeof e||-1===["verbose","info","warning","error","fatal"].indexOf(e))throw new Error(`Unsupported logging level: ${e}`);I=e}},get logLevel(){return I}},Object.defineProperty(F,"logLevel",{enumerable:!0})}),_e=ue(()=>{fe(),z=F}),ge=ue(()=>{O=(e,t)=>{let n=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);n.width=e.dims[3],n.height=e.dims[2];let r=n.getContext("2d");if(null!=r){let s,i;void 0!==t?.tensorLayout&&"NHWC"===t.tensorLayout?(s=e.dims[2],i=e.dims[3]):(s=e.dims[3],i=e.dims[2]);let a,o,l=void 0!==t?.format?t.format:"RGB",u=t?.norm;void 0===u||void 0===u.mean?a=[255,255,255,255]:"number"==typeof u.mean?a=[u.mean,u.mean,u.mean,u.mean]:(a=[u.mean[0],u.mean[1],u.mean[2],0],void 0!==u.mean[3]&&(a[3]=u.mean[3])),void 0===u||void 0===u.bias?o=[0,0,0,0]:"number"==typeof u.bias?o=[u.bias,u.bias,u.bias,u.bias]:(o=[u.bias[0],u.bias[1],u.bias[2],0],void 0!==u.bias[3]&&(o[3]=u.bias[3]));let c=i*s,d=0,p=c,h=2*c,m=-1;"RGBA"===l?(d=0,p=c,h=2*c,m=3*c):"RGB"===l?(d=0,p=c,h=2*c):"RBG"===l&&(d=0,h=c,p=2*c);for(let t=0;t<i;t++)for(let n=0;n<s;n++){let s=(e.data[d++]-o[0])*a[0],i=(e.data[p++]-o[1])*a[1],l=(e.data[h++]-o[2])*a[2],u=-1===m?255:(e.data[m++]-o[3])*a[3];r.fillStyle="rgba("+s+","+i+","+l+","+u+")",r.fillRect(n,t,1,1)}if("toDataURL"in n)return n.toDataURL();throw new Error("toDataURL is not supported")}throw new Error("Can not access image data")},L=(e,t)=>{let n,r=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");if(null==r)throw new Error("Can not access image data");{let s,i,a;void 0!==t?.tensorLayout&&"NHWC"===t.tensorLayout?(s=e.dims[2],i=e.dims[1],a=e.dims[3]):(s=e.dims[3],i=e.dims[2],a=e.dims[1]);let o,l,u=void 0!==t&&void 0!==t.format?t.format:"RGB",c=t?.norm;void 0===c||void 0===c.mean?o=[255,255,255,255]:"number"==typeof c.mean?o=[c.mean,c.mean,c.mean,c.mean]:(o=[c.mean[0],c.mean[1],c.mean[2],255],void 0!==c.mean[3]&&(o[3]=c.mean[3])),void 0===c||void 0===c.bias?l=[0,0,0,0]:"number"==typeof c.bias?l=[c.bias,c.bias,c.bias,c.bias]:(l=[c.bias[0],c.bias[1],c.bias[2],0],void 0!==c.bias[3]&&(l[3]=c.bias[3]));let d=i*s;if(void 0!==t&&(void 0!==t.format&&4===a&&"RGBA"!==t.format||3===a&&"RGB"!==t.format&&"BGR"!==t.format))throw new Error("Tensor format doesn't match input tensor dims");let p=4,h=0,m=1,f=2,_=3,g=0,w=d,y=2*d,b=-1;"RGBA"===u?(g=0,w=d,y=2*d,b=3*d):"RGB"===u?(g=0,w=d,y=2*d):"RBG"===u&&(g=0,y=d,w=2*d),n=r.createImageData(s,i);for(let t=0;t<i*s;h+=p,m+=p,f+=p,_+=p,t++)n.data[h]=(e.data[g++]-l[0])*o[0],n.data[m]=(e.data[w++]-l[1])*o[1],n.data[f]=(e.data[y++]-l[2])*o[2],n.data[_]=-1===b?255:(e.data[b++]-l[3])*o[3]}return n}}),we=ue(()=>{xe(),B=(e,t)=>{if(void 0===e)throw new Error("Image buffer must be defined");if(void 0===t.height||void 0===t.width)throw new Error("Image height and width must be defined");if("NHWC"===t.tensorLayout)throw new Error("NHWC Tensor layout is not supported yet");let n,r,{height:s,width:i}=t,a=t.norm??{mean:255,bias:0};n="number"==typeof a.mean?[a.mean,a.mean,a.mean,a.mean]:[a.mean[0],a.mean[1],a.mean[2],a.mean[3]??255],r="number"==typeof a.bias?[a.bias,a.bias,a.bias,a.bias]:[a.bias[0],a.bias[1],a.bias[2],a.bias[3]??0];let o=void 0!==t.format?t.format:"RGBA",l=void 0!==t.tensorFormat&&void 0!==t.tensorFormat?t.tensorFormat:"RGB",u=s*i,c="RGBA"===l?new Float32Array(4*u):new Float32Array(3*u),d=4,p=0,h=1,m=2,f=3,_=0,g=u,w=2*u,y=-1;"RGB"===o&&(d=3,p=0,h=1,m=2,f=-1),"RGBA"===l?y=3*u:"RBG"===l?(_=0,w=u,g=2*u):"BGR"===l&&(w=0,g=u,_=2*u);for(let t=0;t<u;t++,p+=d,m+=d,h+=d,f+=d)c[_++]=(e[p]+r[0])/n[0],c[g++]=(e[h]+r[1])/n[1],c[w++]=(e[m]+r[2])/n[2],-1!==y&&-1!==f&&(c[y++]=(e[f]+r[3])/n[3]);return new Q("float32",c,"RGBA"===l?[1,4,s,i]:[1,3,s,i])},D=async(e,t)=>{let n,r=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,s=typeof ImageData<"u"&&e instanceof ImageData,i=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,a="string"==typeof e,o=t??{},l=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},u=e=>typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||e instanceof OffscreenCanvas?e.getContext("2d"):null;if(r){let r=l();r.width=e.width,r.height=e.height;let s=u(r);if(null==s)throw new Error("Can not access image data");{let r=e.height,i=e.width;if(void 0!==t&&void 0!==t.resizedHeight&&void 0!==t.resizedWidth&&(r=t.resizedHeight,i=t.resizedWidth),void 0!==t){if(o=t,void 0!==t.tensorFormat)throw new Error("Image input config format must be RGBA for HTMLImageElement");o.tensorFormat="RGBA",o.height=r,o.width=i}else o.tensorFormat="RGBA",o.height=r,o.width=i;s.drawImage(e,0,0),n=s.getImageData(0,0,i,r).data}}else{if(!s){if(i){if(void 0===t)throw new Error("Please provide image config with format for Imagebitmap");let r=l();r.width=e.width,r.height=e.height;let s=u(r);if(null!=s){let t=e.height,r=e.width;return s.drawImage(e,0,0,r,t),n=s.getImageData(0,0,r,t).data,o.height=t,o.width=r,B(n,o)}throw new Error("Can not access image data")}if(a)return new re((t,n)=>{let r=l(),s=u(r);if(!e||!s)return n();let i=new Image;i.crossOrigin="Anonymous",i.src=e,i.onload=()=>{r.width=i.width,r.height=i.height,s.drawImage(i,0,0,r.width,r.height);let e=s.getImageData(0,0,r.width,r.height);o.height=r.height,o.width=r.width,t(B(e.data,o))}});throw new Error("Input data provided is not supported - aborted tensor creation")}{let r,s;if(void 0!==t&&void 0!==t.resizedWidth&&void 0!==t.resizedHeight?(r=t.resizedHeight,s=t.resizedWidth):(r=e.height,s=e.width),void 0!==t&&(o=t),o.format="RGBA",o.height=r,o.width=s,void 0!==t){let t=l();t.width=s,t.height=r;let i=u(t);if(null==i)throw new Error("Can not access image data");i.putImageData(e,0,0),n=i.getImageData(0,0,s,r).data}else n=e.data}}if(void 0!==n)return B(n,o);throw new Error("Input data provided is not supported - aborted tensor creation")},N=(e,t)=>{let{width:n,height:r,download:s,dispose:i}=t;return new Q({location:"texture",type:"float32",texture:e,dims:[1,r,n,4],download:s,dispose:i})},j=(e,t)=>{let{dataType:n,dims:r,download:s,dispose:i}=t;return new Q({location:"gpu-buffer",type:n??"float32",gpuBuffer:e,dims:r,download:s,dispose:i})},R=(e,t)=>{let{dataType:n,dims:r,download:s,dispose:i}=t;return new Q({location:"ml-tensor",type:n??"float32",mlTensor:e,dims:r,download:s,dispose:i})},V=(e,t,n)=>new Q({location:"cpu-pinned",type:e,data:t,dims:n??[t.length]})}),ye=ue(()=>{G=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),U=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),q=!1,W=()=>{if(!q){q=!0;let e=typeof BigInt64Array<"u"&&BigInt64Array.from,t=typeof BigUint64Array<"u"&&BigUint64Array.from,n=globalThis.Float16Array,r=typeof n<"u"&&n.from;e&&(G.set("int64",BigInt64Array),U.set(BigInt64Array,"int64")),t&&(G.set("uint64",BigUint64Array),U.set(BigUint64Array,"uint64")),r?(G.set("float16",n),U.set(n,"float16")):G.set("float16",Uint16Array)}}}),be=ue(()=>{xe(),H=e=>{let t=1;for(let n=0;n<e.length;n++){let r=e[n];if("number"!=typeof r||!Number.isSafeInteger(r))throw new TypeError(`dims[${n}] must be an integer, got: ${r}`);if(r<0)throw new RangeError(`dims[${n}] must be a non-negative integer, got: ${r}`);t*=r}return t},K=(e,t)=>{switch(e.location){case"cpu":return new Q(e.type,e.data,t);case"cpu-pinned":return new Q({location:"cpu-pinned",data:e.data,type:e.type,dims:t});case"texture":return new Q({location:"texture",texture:e.texture,type:e.type,dims:t});case"gpu-buffer":return new Q({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:t});case"ml-tensor":return new Q({location:"ml-tensor",mlTensor:e.mlTensor,type:e.type,dims:t});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}}}),xe=ue(()=>{ge(),we(),ye(),be(),Q=class{constructor(e,t,n){let r,s;if(W(),"object"==typeof e&&"location"in e)switch(this.dataLocation=e.location,r=e.type,s=e.dims,e.location){case"cpu-pinned":{let t=G.get(r);if(!t)throw new TypeError(`unsupported type "${r}" to create tensor from pinned buffer`);if(!(e.data instanceof t))throw new TypeError(`buffer should be of type ${t.name}`);this.cpuData=e.data;break}case"texture":if("float32"!==r)throw new TypeError(`unsupported type "${r}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break;case"gpu-buffer":if("float32"!==r&&"float16"!==r&&"int32"!==r&&"int64"!==r&&"uint32"!==r&&"uint8"!==r&&"bool"!==r&&"uint4"!==r&&"int4"!==r)throw new TypeError(`unsupported type "${r}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break;case"ml-tensor":if("float32"!==r&&"float16"!==r&&"int32"!==r&&"int64"!==r&&"uint32"!==r&&"uint64"!==r&&"int8"!==r&&"uint8"!==r&&"bool"!==r&&"uint4"!==r&&"int4"!==r)throw new TypeError(`unsupported type "${r}" to create tensor from MLTensor`);this.mlTensorData=e.mlTensor,this.downloader=e.download,this.disposer=e.dispose;break;default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let i,a;if("string"==typeof e)if(r=e,a=n,"string"===e){if(!Array.isArray(t))throw new TypeError("A string tensor's data must be a string array.");i=t}else{let n=G.get(e);if(void 0===n)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(t)){if("float16"===e&&n===Uint16Array||"uint4"===e||"int4"===e)throw new TypeError(`Creating a ${e} tensor from number array is not supported. Please use ${n.name} as data.`);i="uint64"===e||"int64"===e?n.from(t,BigInt):n.from(t)}else if(t instanceof n)i=t;else if(t instanceof Uint8ClampedArray){if("uint8"!==e)throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");i=Uint8Array.from(t)}else{if(!("float16"===e&&t instanceof Uint16Array&&n!==Uint16Array))throw new TypeError(`A ${r} tensor's data must be type of ${n}`);i=new globalThis.Float16Array(t.buffer,t.byteOffset,t.length)}}else if(a=t,Array.isArray(e)){if(0===e.length)throw new TypeError("Tensor type cannot be inferred from an empty array.");let t=typeof e[0];if("string"===t)r="string",i=e;else{if("boolean"!==t)throw new TypeError(`Invalid element type of data array: ${t}.`);r="bool",i=Uint8Array.from(e)}}else if(e instanceof Uint8ClampedArray)r="uint8",i=Uint8Array.from(e);else{let t=U.get(e.constructor);if(void 0===t)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);r=t,i=e}if(void 0===a)a=[i.length];else if(!Array.isArray(a))throw new TypeError("A tensor's dims must be a number array");s=a,this.cpuData=i,this.dataLocation="cpu"}let i=H(s);if(this.cpuData&&i!==this.cpuData.length&&("uint4"!==r&&"int4"!==r||Math.ceil(i/2)!==this.cpuData.length))throw new Error(`Tensor's size(${i}) does not match data length(${this.cpuData.length}).`);this.type=r,this.dims=s,this.size=i}static async fromImage(e,t){return D(e,t)}static fromTexture(e,t){return N(e,t)}static fromGpuBuffer(e,t){return j(e,t)}static fromMLTensor(e,t){return R(e,t)}static fromPinnedBuffer(e,t,n){return V(e,t,n)}toDataURL(e){return O(this,e)}toImageData(e){return L(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let t=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=t,e&&this.disposer&&(this.disposer(),this.disposer=void 0),t}finally{this.isDownloading=!1}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if("none"===this.dataLocation)throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return K(this,e)}}}),ve=ue(()=>{xe(),X=Q}),Me=ue(()=>{fe(),J=(e,t)=>{(typeof F.trace>"u"?!F.wasm.trace:!F.trace)||console.timeStamp(`${e}::ORT::${t}`)},Y=(e,t)=>{let n=(new Error).stack?.split(/\r\n|\r|\n/g)||[],r=!1;for(let s=0;s<n.length;s++){if(r&&!n[s].includes("TRACE_FUNC")){let r=`FUNC_${e}::${n[s].trim().split(" ")[1]}`;return t&&(r+=`::${t}`),void J("CPU",r)}n[s].includes("TRACE_FUNC")&&(r=!0)}},Z=e=>{(typeof F.trace>"u"?!F.wasm.trace:!F.trace)||Y("BEGIN",e)},ee=e=>{(typeof F.trace>"u"?!F.wasm.trace:!F.trace)||Y("END",e)}}),ke=ue(()=>{pe(),ve(),Me(),te=class e{constructor(e){this.handler=e}async run(e,t,n){Z();let r={},s={};if("object"!=typeof e||null===e||e instanceof X||Array.isArray(e))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let i=!0;if("object"==typeof t){if(null===t)throw new TypeError("Unexpected argument[1]: cannot be null.");if(t instanceof X)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(t)){if(0===t.length)throw new TypeError("'fetches' cannot be an empty array.");i=!1;for(let e of t){if("string"!=typeof e)throw new TypeError("'fetches' must be a string array or an object.");if(-1===this.outputNames.indexOf(e))throw new RangeError(`'fetches' contains invalid output name: ${e}.`);r[e]=null}if("object"==typeof n&&null!==n)s=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else{let e=!1,a=Object.getOwnPropertyNames(t);for(let n of this.outputNames)if(-1!==a.indexOf(n)){let s=t[n];(null===s||s instanceof X)&&(e=!0,i=!1,r[n]=s)}if(e){if("object"==typeof n&&null!==n)s=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else s=t}}else if(typeof t<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let t of this.inputNames)if(typeof e[t]>"u")throw new Error(`input '${t}' is missing in 'feeds'.`);if(i)for(let e of this.outputNames)r[e]=null;let a=await this.handler.run(e,r,s),o={};for(let e in a)if(Object.hasOwnProperty.call(a,e)){let t=a[e];o[e]=t instanceof X?t:new X(t.type,t.data,t.dims)}return ee(),o}async release(){return this.handler.dispose()}static async create(t,n,r,s){Z();let i,a={};if("string"==typeof t){if(i=t,"object"==typeof n&&null!==n)a=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else if(t instanceof Uint8Array){if(i=t,"object"==typeof n&&null!==n)a=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else{if(!(t instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&t instanceof SharedArrayBuffer))throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");{let e=t,o=0,l=t.byteLength;if("object"==typeof n&&null!==n)a=n;else if("number"==typeof n){if(o=n,!Number.isSafeInteger(o))throw new RangeError("'byteOffset' must be an integer.");if(o<0||o>=e.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${e.byteLength}).`);if(l=t.byteLength-o,"number"==typeof r){if(l=r,!Number.isSafeInteger(l))throw new RangeError("'byteLength' must be an integer.");if(l<=0||o+l>e.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${e.byteLength-o}].`);if("object"==typeof s&&null!==s)a=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else if(typeof r<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof n<"u")throw new TypeError("'options' must be an object.");i=new Uint8Array(e,o,l)}}let[o,l]=await P(a),u=await o.createInferenceSessionHandler(i,l);return ee(),new e(u)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}get inputMetadata(){return this.handler.inputMetadata}get outputMetadata(){return this.handler.outputMetadata}}}),Te=ue(()=>{ke(),ne=te}),$e=ue(()=>{}),Se=ue(()=>{}),Ce=ue(()=>{}),Ee=ue(()=>{}),Pe={};ce(Pe,{InferenceSession:()=>ne,TRACE:()=>J,TRACE_FUNC_BEGIN:()=>Z,TRACE_FUNC_END:()=>ee,Tensor:()=>X,env:()=>z,registerBackend:()=>C});var Ae=ue(()=>{he(),_e(),Te(),ve(),$e(),Se(),Me(),Ce(),Ee()}),Ie=ue(()=>{}),Fe={};ce(Fe,{default:()=>Le});var ze,Oe,Le,Be=ue(()=>{zd(),Cu(),Su(),ze="ort-wasm-proxy-worker",(Oe=globalThis.self?.name===ze)&&(self.onmessage=e=>{let{type:t,in:n}=e.data;try{switch(t){case"init-wasm":ct(n.wasm).then(()=>{ed(n).then(()=>{postMessage({type:t})},e=>{postMessage({type:t,err:e})})},e=>{postMessage({type:t,err:e})});break;case"init-ep":{let{epName:e,env:r}=n;td(r,e).then(()=>{postMessage({type:t})},e=>{postMessage({type:t,err:e})});break}case"copy-from":{let{buffer:e}=n,r=id(e);postMessage({type:t,out:r});break}case"create":{let{model:e,options:r}=n;ad(e,r).then(e=>{postMessage({type:t,out:e})},e=>{postMessage({type:t,err:e})});break}case"release":od(n),postMessage({type:t});break;case"run":{let{sessionId:e,inputIndices:r,inputs:s,outputIndices:i,options:a}=n;ud(e,r,s,i,new Array(i.length).fill(null),a).then(e=>{e.some(e=>"cpu"!==e[3])?postMessage({type:t,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:t,out:e},dd([...s,...e]))},e=>{postMessage({type:t,err:e})});break}case"end-profiling":cd(n),postMessage({type:t})}}catch(e){postMessage({type:t,err:e})}}),Le=Oe?null:e=>new Worker(e??We,{type:"module",name:ze})}),De={};ce(De,{default:()=>Re});var Ne,je,Re,Ve,Ge,Ue,qe,We,He,Ke,Qe,Xe,Je,Ye,Ze,et,tt,nt,rt,st,it,at,ot,lt,ut,ct,dt,pt,ht,mt,ft,_t,gt,wt,yt,bt,xt,vt,Mt,kt,Tt,$t,St,Ct,Et,Pt,At,It,Ft,zt,Ot,Lt,Bt,Dt,Nt,jt,Rt,Vt,Gt,Ut,qt,Wt,Ht,Kt,Qt,Xt,Jt,Yt,Zt,en,tn,nn,rn,sn,an,on,ln,un,cn,dn,pn,hn,mn,fn,_n,gn,wn,yn,bn,xn,vn,Mn,kn,Tn,$n,Sn,Cn,En,Pn,An,In,Fn,zn,On,Ln,Bn,Dn,Nn,jn,Rn,Vn,Gn,Un,qn,Wn,Hn,Kn,Qn,Xn,Jn,Yn,Zn,er,tr,nr,rr,sr,ir,ar,or,lr,ur,cr,dr,pr,hr,mr,fr,_r,gr,wr,yr,br,xr,vr,Mr,kr,Tr,$r,Sr,Cr,Er,Pr,Ar,Ir,Fr,zr,Or,Lr,Br,Dr,Nr,jr,Rr,Vr,Gr,Ur,qr,Wr,Hr,Kr,Qr,Xr,Jr,Yr,Zr,es,ts,ns,rs,ss,is,as,os,ls,us,cs,ds,ps,hs,ms,fs,_s,gs,ws,ys,bs,xs,vs,Ms,ks,Ts,$s,Ss,Cs,Es,Ps,As,Is,Fs,zs,Os,Ls,Bs,Ds,Ns,js,Rs,Vs,Gs,Us,qs,Ws,Hs,Ks,Qs,Xs,Js,Ys,Zs,ei,ti,ni,ri,si,ii,ai,oi,li,ui,ci,di,pi,hi,mi,fi,_i,gi,wi,yi,bi,xi,vi,Mi,ki,Ti,$i,Si,Ci,Ei,Pi,Ai,Ii,Fi,zi,Oi,Li,Bi,Di,Ni,ji,Ri,Vi,Gi,Ui,qi,Wi,Hi,Ki,Qi,Xi,Ji,Yi,Zi,ea,ta,na,ra,sa,ia,aa,oa,la,ua,ca,da,pa,ha,ma,fa,_a,ga,wa,ya,ba,xa,va,Ma,ka,Ta,$a,Sa,Ca,Ea,Pa,Aa,Ia,Fa,za,Oa,La,Ba,Da,Na,ja,Ra,Va,Ga,Ua,qa,Wa,Ha,Ka,Qa,Xa,Ja,Ya,Za,eo,to,no,ro,so,io,ao,oo,lo,uo,co,po,ho,mo,fo,_o,go,wo,yo,bo,xo,vo,Mo,ko,To,$o,So,Co,Eo,Po,Ao,Io,Fo,zo,Oo,Lo,Bo,Do,No,jo,Ro,Vo,Go,Uo,qo,Wo,Ho,Ko,Qo,Xo,Jo,Yo,Zo,el,tl,nl,rl,sl,il,al,ol,ll,ul,cl,dl,pl,hl,ml,fl,_l,gl,wl,yl,bl,xl,vl,Ml,kl,Tl,$l,Sl,Cl,El,Pl,Al,Il,Fl,zl,Ol,Ll,Bl,Dl,Nl,jl,Rl,Vl,Gl,Ul,ql,Wl,Hl,Kl,Ql,Xl,Jl,Yl,Zl,eu,tu,nu,ru,su,iu,au,ou,lu,uu,cu,du,pu,hu,mu,fu,_u,gu,wu,yu,bu,xu,vu,Mu,ku,Tu,$u=ue(()=>{Ne="file:///C:/Users/25-01%200077User/Desktop/%E6%97%A7pc%E7%A7%BB%E5%8B%95/%E6%97%A7%E3%83%87%E3%82%B9%E3%82%AF%E3%83%88%E3%83%83%E3%83%97/%E5%93%81%E8%B3%AA%E7%AE%A1%E7%90%86%E8%AA%B2%EF%BC%882022%E5%B9%B4%EF%BD%9E%EF%BC%89/vscode_repositories/ExcelAddIns/LocalTanslatorForExcel/node_modules/onnxruntime-web/dist/ort.bundle.min.mjs",je=async function(e={}){var t,r,s=e,i=new re((e,n)=>{t=e,r=n}),a="object"==typeof window,o=typeof WorkerGlobalScope<"u",l=o&&self.name?.startsWith("em-pthread");s.mountExternalData=(e,t)=>{e.startsWith("./")&&(e=e.substring(2)),(s.Eb||(s.Eb=new Map)).set(e,t)},s.unmountExternalData=()=>{delete s.Eb};var u=globalThis.SharedArrayBuffer??new WebAssembly.Memory({initial:0,maximum:0,pc:!0}).buffer.constructor;let c=e=>async(...t)=>{try{if(s.Fb)throw Error("Session already started");let n=s.Fb={dc:t[0],errors:[]},r=await e(...t);if(s.Fb!==n)throw Error("Session mismatch");s.Jb?.flush();let i=n.errors;if(0<i.length){let e=await re.all(i);if(e=e.filter(e=>e),0<e.length)throw Error(e.join("\n"))}return r}finally{s.Fb=null}};s.jsepInit=(e,t)=>{if("webgpu"===e){[s.Jb,s.Ub,s.Yb,s.Kb,s.Xb,s.jb,s.Zb,s.ac,s.Vb,s.Wb,s.$b]=t;let e=s.Jb;s.jsepRegisterBuffer=(t,n,r,s)=>e.registerBuffer(t,n,r,s),s.jsepGetBuffer=t=>e.getBuffer(t),s.jsepCreateDownloader=(t,n,r)=>e.createDownloader(t,n,r),s.jsepOnCreateSession=t=>{e.onCreateSession(t)},s.jsepOnReleaseSession=t=>{e.onReleaseSession(t)},s.jsepOnRunStart=t=>e.onRunStart(t),s.bc=(t,n)=>{e.upload(t,n)}}else if("webnn"===e){let e=t[0];[s.nc,s.Nb,s.webnnEnsureTensor,s.Ob,s.webnnDownloadTensor]=t.slice(1),s.webnnReleaseTensorId=s.Nb,s.webnnUploadTensor=s.Ob,s.webnnOnRunStart=t=>e.onRunStart(t),s.webnnOnRunEnd=e.onRunEnd.bind(e),s.webnnRegisterMLContext=(t,n)=>{e.registerMLContext(t,n)},s.webnnOnReleaseSession=t=>{e.onReleaseSession(t)},s.webnnCreateMLTensorDownloader=(t,n)=>e.createMLTensorDownloader(t,n),s.webnnRegisterMLTensor=(t,n,r,s)=>e.registerMLTensor(t,n,r,s),s.webnnCreateMLContext=t=>e.createMLContext(t),s.webnnRegisterMLConstant=(t,n,r,i,a,o)=>e.registerMLConstant(t,n,r,i,a,s.Eb,o),s.webnnRegisterGraphInput=e.registerGraphInput.bind(e),s.webnnIsGraphInput=e.isGraphInput.bind(e),s.webnnCreateTemporaryTensor=e.createTemporaryTensor.bind(e),s.webnnIsInt64Supported=e.isInt64Supported.bind(e)}};let d=()=>{let e=(e,t,n)=>(...r)=>{let s=Gt,i=t?.();r=e(...r);let a=t?.();return i!==a&&(e=a,n(i),t=n=null),Gt!=s?new re((e,t)=>{Qt={resolve:e,reject:t}}):r};(()=>{for(let t of["_OrtAppendExecutionProvider","_OrtCreateSession","_OrtRun","_OrtRunWithBinding","_OrtBindInput"])s[t]=e(s[t],()=>s[t],e=>s[t]=e)})(),void 0!==c&&(s._OrtRun=c(s._OrtRun),s._OrtRunWithBinding=c(s._OrtRunWithBinding)),d=void 0};s.asyncInit=()=>{d?.()};var p,h,m=Object.assign({},s),f=(e,t)=>{throw t},_="";(a||o)&&(o?_=self.location.href:typeof document<"u"&&document.currentScript&&(_=document.currentScript.src),Ne&&(_=Ne),_=_.startsWith("blob:")?"":_.slice(0,_.replace(/[?#].*/,"").lastIndexOf("/")+1),o&&(h=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),p=async e=>{if(L(e))return new re((t,n)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n(r.status)},r.onerror=n,r.send(null)});var t=await fetch(e,{credentials:"same-origin"});if(t.ok)return t.arrayBuffer();throw Error(t.status+" : "+t.url)});var g=console.log.bind(console),w=console.error.bind(console),y=g,b=w;Object.assign(s,m),m=null;var x,v,M,k,T,$,S,C,E,P,A,I,F,z=s.wasmBinary,O=!1,L=e=>e.startsWith("file://");function B(){return x.buffer!=k.buffer&&H(),k}function D(){return x.buffer!=k.buffer&&H(),T}function N(){return x.buffer!=k.buffer&&H(),$}function j(){return x.buffer!=k.buffer&&H(),S}function R(){return x.buffer!=k.buffer&&H(),C}function V(){return x.buffer!=k.buffer&&H(),E}function G(){return x.buffer!=k.buffer&&H(),P}function U(){return x.buffer!=k.buffer&&H(),F}if(l){let e=function(t){try{var n=t.data,r=n.Bb;if("load"===r){let t=[];self.onmessage=e=>t.push(e),self.startWorker=()=>{postMessage({Bb:"loaded"});for(let n of t)e(n);self.onmessage=e};for(let e of n.Rb)s[e]&&!s[e].proxy||(s[e]=(...t)=>{postMessage({Bb:"callHandler",Qb:e,args:t})},"print"==e&&(y=s[e]),"printErr"==e&&(b=s[e]));x=n.kc,H(),q(n.lc)}else if("run"===r){ve(n.Ab),gr(n.Ab,0,0,1,0,0),ye(),Et(n.Ab),W||(hr(),W=!0);try{Me(n.fc,n.Hb)}catch(e){if("unwind"!=e)throw e}}else"setimmediate"!==n.target&&("checkMailbox"===r?W&&Pt():r&&(b(`worker: received unknown command ${r}`),b(n)))}catch(e){throw wr(),e}};var q,W=!1;b=function(...e){e=e.join(" "),console.error(e)},self.alert=function(...e){postMessage({Bb:"alert",text:e.join(" "),ic:mr()})},self.onunhandledrejection=e=>{throw e.reason||e},self.onmessage=e}function H(){var e=x.buffer;s.HEAP8=k=new Int8Array(e),s.HEAP16=$=new Int16Array(e),s.HEAPU8=T=new Uint8Array(e),s.HEAPU16=S=new Uint16Array(e),s.HEAP32=C=new Int32Array(e),s.HEAPU32=E=new Uint32Array(e),s.HEAPF32=P=new Float32Array(e),s.HEAPF64=F=new Float64Array(e),s.HEAP64=A=new BigInt64Array(e),s.HEAPU64=I=new BigUint64Array(e)}function K(){l?startWorker(s):cr.Ca()}l||(x=new WebAssembly.Memory({initial:256,maximum:65536,shared:!0}),H());var Q,X=0,J=null;function Y(){if(0==--X&&J){var e=J;J=null,e()}}function Z(e){throw b(e="Aborted("+e+")"),O=!0,e=new WebAssembly.RuntimeError(e+". Build with -sASSERTIONS for more info."),r(e),e}function ee(){return{a:{L:se,Aa:ne,b:Te,$:Se,A:Ae,pa:Ie,X:Oe,Z:Le,qa:Be,na:De,ga:je,ma:Re,J:Ve,Y:Ge,V:Ue,oa:qe,W:We,va:Qe,E:nt,Q:st,O:pt,D:mt,u:ft,r:_t,P:gt,z:Tt,R:$t,ja:St,T:At,aa:Ft,M:zt,F:Ot,ia:Et,sa:Lt,t:Nt,Ba:jt,w:Yt,o:en,l:rn,c:ot,n:an,j:cn,v:dn,p:pn,f:hn,s:mn,m:fn,e:_n,k:gn,i:wn,g:yn,d:bn,da:xn,ea:Tn,fa:$n,ba:Sn,ca:Cn,N:An,xa:In,ua:On,h:Dn,C:Nn,G:jn,ta:Fn,x:Rn,ra:Vn,U:Gn,q:Pn,y:Un,K:qn,S:Wn,za:Xn,ya:Jn,ka:tr,la:nr,_:he,B:rr,I:sr,ha:ir,H:or,a:x,wa:de}}}var te={829644:(e,t,n,r,i)=>{if(void 0===s||!s.Eb)return 1;if((e=Pe(Number(e>>>0))).startsWith("./")&&(e=e.substring(2)),!(e=s.Eb.get(e)))return 2;if(t=Number(t>>>0),n=Number(n>>>0),r=Number(r>>>0),t+n>e.byteLength)return 3;try{let a=e.subarray(t,t+n);switch(i){case 0:D().set(a,r>>>0);break;case 1:s.mc?s.mc(r,a):s.bc(r,a);break;default:return 4}return 0}catch{return 4}},830468:(e,t,n)=>{s.Ob(e,D().subarray(t>>>0,t+n>>>0))},830532:()=>s.nc(),830574:e=>{s.Nb(e)},830611:()=>{s.Vb()},830642:()=>{s.Wb()},830671:()=>{s.$b()},830696:e=>s.Ub(e),830729:e=>s.Yb(e),830761:(e,t,n)=>{s.Kb(Number(e),Number(t),Number(n),!0)},830824:(e,t,n)=>{s.Kb(Number(e),Number(t),Number(n))},830881:()=>typeof wasmOffsetConverter<"u",830938:e=>{s.jb("Abs",e,void 0)},830989:e=>{s.jb("Neg",e,void 0)},831040:e=>{s.jb("Floor",e,void 0)},831093:e=>{s.jb("Ceil",e,void 0)},831145:e=>{s.jb("Reciprocal",e,void 0)},831203:e=>{s.jb("Sqrt",e,void 0)},831255:e=>{s.jb("Exp",e,void 0)},831306:e=>{s.jb("Erf",e,void 0)},831357:e=>{s.jb("Sigmoid",e,void 0)},831412:(e,t,n)=>{s.jb("HardSigmoid",e,{alpha:t,beta:n})},831491:e=>{s.jb("Log",e,void 0)},831542:e=>{s.jb("Sin",e,void 0)},831593:e=>{s.jb("Cos",e,void 0)},831644:e=>{s.jb("Tan",e,void 0)},831695:e=>{s.jb("Asin",e,void 0)},831747:e=>{s.jb("Acos",e,void 0)},831799:e=>{s.jb("Atan",e,void 0)},831851:e=>{s.jb("Sinh",e,void 0)},831903:e=>{s.jb("Cosh",e,void 0)},831955:e=>{s.jb("Asinh",e,void 0)},832008:e=>{s.jb("Acosh",e,void 0)},832061:e=>{s.jb("Atanh",e,void 0)},832114:e=>{s.jb("Tanh",e,void 0)},832166:e=>{s.jb("Not",e,void 0)},832217:(e,t,n)=>{s.jb("Clip",e,{min:t,max:n})},832286:e=>{s.jb("Clip",e,void 0)},832338:(e,t)=>{s.jb("Elu",e,{alpha:t})},832396:e=>{s.jb("Gelu",e,void 0)},832448:e=>{s.jb("Relu",e,void 0)},832500:(e,t)=>{s.jb("LeakyRelu",e,{alpha:t})},832564:(e,t)=>{s.jb("ThresholdedRelu",e,{alpha:t})},832634:(e,t)=>{s.jb("Cast",e,{to:t})},832692:e=>{s.jb("Add",e,void 0)},832743:e=>{s.jb("Sub",e,void 0)},832794:e=>{s.jb("Mul",e,void 0)},832845:e=>{s.jb("Div",e,void 0)},832896:e=>{s.jb("Pow",e,void 0)},832947:e=>{s.jb("Equal",e,void 0)},833e3:e=>{s.jb("Greater",e,void 0)},833055:e=>{s.jb("GreaterOrEqual",e,void 0)},833117:e=>{s.jb("Less",e,void 0)},833169:e=>{s.jb("LessOrEqual",e,void 0)},833228:(e,t,n,r,i)=>{s.jb("ReduceMean",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(R().subarray(Number(r)>>>0,Number(i)>>>0)):[]})},833403:(e,t,n,r,i)=>{s.jb("ReduceMax",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(R().subarray(Number(r)>>>0,Number(i)>>>0)):[]})},833577:(e,t,n,r,i)=>{s.jb("ReduceMin",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(R().subarray(Number(r)>>>0,Number(i)>>>0)):[]})},833751:(e,t,n,r,i)=>{s.jb("ReduceProd",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(R().subarray(Number(r)>>>0,Number(i)>>>0)):[]})},833926:(e,t,n,r,i)=>{s.jb("ReduceSum",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(R().subarray(Number(r)>>>0,Number(i)>>>0)):[]})},834100:(e,t,n,r,i)=>{s.jb("ReduceL1",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(R().subarray(Number(r)>>>0,Number(i)>>>0)):[]})},834273:(e,t,n,r,i)=>{s.jb("ReduceL2",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(R().subarray(Number(r)>>>0,Number(i)>>>0)):[]})},834446:(e,t,n,r,i)=>{s.jb("ReduceLogSum",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(R().subarray(Number(r)>>>0,Number(i)>>>0)):[]})},834623:(e,t,n,r,i)=>{s.jb("ReduceSumSquare",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(R().subarray(Number(r)>>>0,Number(i)>>>0)):[]})},834803:(e,t,n,r,i)=>{s.jb("ReduceLogSumExp",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(R().subarray(Number(r)>>>0,Number(i)>>>0)):[]})},834983:e=>{s.jb("Where",e,void 0)},835036:(e,t,n)=>{s.jb("Transpose",e,{perm:t?Array.from(R().subarray(Number(t)>>>0,Number(n)>>>0)):[]})},835160:(e,t,n,r)=>{s.jb("DepthToSpace",e,{blocksize:t,mode:Pe(n),format:r?"NHWC":"NCHW"})},835293:(e,t,n,r)=>{s.jb("DepthToSpace",e,{blocksize:t,mode:Pe(n),format:r?"NHWC":"NCHW"})},835426:(e,t,n,r,i,a,o,l,u,c,d,p,h,m,f)=>{s.jb("ConvTranspose",e,{format:u?"NHWC":"NCHW",autoPad:t,dilations:[n],group:r,kernelShape:[i],pads:[a,o],strides:[l],wIsConst:()=>!!B()[c>>>0],outputPadding:d?Array.from(R().subarray(Number(d)>>>0,Number(p)>>>0)):[],outputShape:h?Array.from(R().subarray(Number(h)>>>0,Number(m)>>>0)):[],activation:Pe(f)})},835859:(e,t,n,r,i,a,o,l,u,c,d,p,h,m)=>{s.jb("ConvTranspose",e,{format:l?"NHWC":"NCHW",autoPad:t,dilations:Array.from(R().subarray(Number(n)>>>0,2+(Number(n)>>>0)>>>0)),group:r,kernelShape:Array.from(R().subarray(Number(i)>>>0,2+(Number(i)>>>0)>>>0)),pads:Array.from(R().subarray(Number(a)>>>0,4+(Number(a)>>>0)>>>0)),strides:Array.from(R().subarray(Number(o)>>>0,2+(Number(o)>>>0)>>>0)),wIsConst:()=>!!B()[u>>>0],outputPadding:c?Array.from(R().subarray(Number(c)>>>0,Number(d)>>>0)):[],outputShape:p?Array.from(R().subarray(Number(p)>>>0,Number(h)>>>0)):[],activation:Pe(m)})},836520:(e,t,n,r,i,a,o,l,u,c,d,p,h,m,f)=>{s.jb("ConvTranspose",e,{format:u?"NHWC":"NCHW",autoPad:t,dilations:[n],group:r,kernelShape:[i],pads:[a,o],strides:[l],wIsConst:()=>!!B()[c>>>0],outputPadding:d?Array.from(R().subarray(Number(d)>>>0,Number(p)>>>0)):[],outputShape:h?Array.from(R().subarray(Number(h)>>>0,Number(m)>>>0)):[],activation:Pe(f)})},836953:(e,t,n,r,i,a,o,l,u,c,d,p,h,m)=>{s.jb("ConvTranspose",e,{format:l?"NHWC":"NCHW",autoPad:t,dilations:Array.from(R().subarray(Number(n)>>>0,2+(Number(n)>>>0)>>>0)),group:r,kernelShape:Array.from(R().subarray(Number(i)>>>0,2+(Number(i)>>>0)>>>0)),pads:Array.from(R().subarray(Number(a)>>>0,4+(Number(a)>>>0)>>>0)),strides:Array.from(R().subarray(Number(o)>>>0,2+(Number(o)>>>0)>>>0)),wIsConst:()=>!!B()[u>>>0],outputPadding:c?Array.from(R().subarray(Number(c)>>>0,Number(d)>>>0)):[],outputShape:p?Array.from(R().subarray(Number(p)>>>0,Number(h)>>>0)):[],activation:Pe(m)})},837614:(e,t)=>{s.jb("GlobalAveragePool",e,{format:t?"NHWC":"NCHW"})},837705:(e,t,n,r,i,a,o,l,u,c,d,p,h,m)=>{s.jb("AveragePool",e,{format:m?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:i,dilations:a?Array.from(R().subarray(Number(a)>>>0,Number(o)>>>0)):[],kernel_shape:l?Array.from(R().subarray(Number(l)>>>0,Number(u)>>>0)):[],pads:c?Array.from(R().subarray(Number(c)>>>0,Number(d)>>>0)):[],strides:p?Array.from(R().subarray(Number(p)>>>0,Number(h)>>>0)):[]})},838184:(e,t)=>{s.jb("GlobalAveragePool",e,{format:t?"NHWC":"NCHW"})},838275:(e,t,n,r,i,a,o,l,u,c,d,p,h,m)=>{s.jb("AveragePool",e,{format:m?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:i,dilations:a?Array.from(R().subarray(Number(a)>>>0,Number(o)>>>0)):[],kernel_shape:l?Array.from(R().subarray(Number(l)>>>0,Number(u)>>>0)):[],pads:c?Array.from(R().subarray(Number(c)>>>0,Number(d)>>>0)):[],strides:p?Array.from(R().subarray(Number(p)>>>0,Number(h)>>>0)):[]})},838754:(e,t)=>{s.jb("GlobalMaxPool",e,{format:t?"NHWC":"NCHW"})},838841:(e,t,n,r,i,a,o,l,u,c,d,p,h,m)=>{s.jb("MaxPool",e,{format:m?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:i,dilations:a?Array.from(R().subarray(Number(a)>>>0,Number(o)>>>0)):[],kernel_shape:l?Array.from(R().subarray(Number(l)>>>0,Number(u)>>>0)):[],pads:c?Array.from(R().subarray(Number(c)>>>0,Number(d)>>>0)):[],strides:p?Array.from(R().subarray(Number(p)>>>0,Number(h)>>>0)):[]})},839316:(e,t)=>{s.jb("GlobalMaxPool",e,{format:t?"NHWC":"NCHW"})},839403:(e,t,n,r,i,a,o,l,u,c,d,p,h,m)=>{s.jb("MaxPool",e,{format:m?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:i,dilations:a?Array.from(R().subarray(Number(a)>>>0,Number(o)>>>0)):[],kernel_shape:l?Array.from(R().subarray(Number(l)>>>0,Number(u)>>>0)):[],pads:c?Array.from(R().subarray(Number(c)>>>0,Number(d)>>>0)):[],strides:p?Array.from(R().subarray(Number(p)>>>0,Number(h)>>>0)):[]})},839878:(e,t,n,r,i)=>{s.jb("Gemm",e,{alpha:t,beta:n,transA:r,transB:i})},839982:e=>{s.jb("MatMul",e,void 0)},840036:(e,t,n,r)=>{s.jb("ArgMax",e,{keepDims:!!t,selectLastIndex:!!n,axis:r})},840144:(e,t,n,r)=>{s.jb("ArgMin",e,{keepDims:!!t,selectLastIndex:!!n,axis:r})},840252:(e,t)=>{s.jb("Softmax",e,{axis:t})},840315:(e,t)=>{s.jb("Concat",e,{axis:t})},840375:(e,t,n,r,i)=>{s.jb("Split",e,{axis:t,numOutputs:n,splitSizes:r?Array.from(R().subarray(Number(r)>>>0,Number(i)>>>0)):[]})},840531:e=>{s.jb("Expand",e,void 0)},840585:(e,t)=>{s.jb("Gather",e,{axis:Number(t)})},840656:(e,t)=>{s.jb("GatherElements",e,{axis:Number(t)})},840735:(e,t)=>{s.jb("GatherND",e,{batch_dims:Number(t)})},840814:(e,t,n,r,i,a,o,l,u,c,d)=>{s.jb("Resize",e,{antialias:t,axes:n?Array.from(R().subarray(Number(n)>>>0,Number(r)>>>0)):[],coordinateTransformMode:Pe(i),cubicCoeffA:a,excludeOutside:o,extrapolationValue:l,keepAspectRatioPolicy:Pe(u),mode:Pe(c),nearestMode:Pe(d)})},841176:(e,t,n,r,i,a,o)=>{s.jb("Slice",e,{starts:t?Array.from(R().subarray(Number(t)>>>0,Number(n)>>>0)):[],ends:r?Array.from(R().subarray(Number(r)>>>0,Number(i)>>>0)):[],axes:a?Array.from(R().subarray(Number(a)>>>0,Number(o)>>>0)):[]})},841440:e=>{s.jb("Tile",e,void 0)},841492:(e,t,n)=>{s.jb("InstanceNormalization",e,{epsilon:t,format:n?"NHWC":"NCHW"})},841606:(e,t,n)=>{s.jb("InstanceNormalization",e,{epsilon:t,format:n?"NHWC":"NCHW"})},841720:e=>{s.jb("Range",e,void 0)},841773:(e,t)=>{s.jb("Einsum",e,{equation:Pe(t)})},841854:(e,t,n,r,i)=>{s.jb("Pad",e,{mode:t,value:n,pads:r?Array.from(R().subarray(Number(r)>>>0,Number(i)>>>0)):[]})},841997:(e,t,n,r,i,a)=>{s.jb("BatchNormalization",e,{epsilon:t,momentum:n,spatial:!!i,trainingMode:!!r,format:a?"NHWC":"NCHW"})},842166:(e,t,n,r,i,a)=>{s.jb("BatchNormalization",e,{epsilon:t,momentum:n,spatial:!!i,trainingMode:!!r,format:a?"NHWC":"NCHW"})},842335:(e,t,n)=>{s.jb("CumSum",e,{exclusive:Number(t),reverse:Number(n)})},842432:(e,t,n)=>{s.jb("DequantizeLinear",e,{axis:t,blockSize:n})},842522:(e,t,n,r,i)=>{s.jb("GridSample",e,{align_corners:t,mode:Pe(n),padding_mode:Pe(r),format:i?"NHWC":"NCHW"})},842692:(e,t,n,r,i)=>{s.jb("GridSample",e,{align_corners:t,mode:Pe(n),padding_mode:Pe(r),format:i?"NHWC":"NCHW"})},842862:(e,t)=>{s.jb("ScatterND",e,{reduction:Pe(t)})},842947:(e,t,n,r,i,a,o,l,u)=>{s.jb("Attention",e,{numHeads:t,isUnidirectional:n,maskFilterValue:r,scale:i,doRotary:a,qkvHiddenSizes:o?Array.from(R().subarray(Number(l)>>>0,Number(l)+o>>>0)):[],pastPresentShareBuffer:!!u})},843219:e=>{s.jb("BiasAdd",e,void 0)},843274:e=>{s.jb("BiasSplitGelu",e,void 0)},843335:e=>{s.jb("FastGelu",e,void 0)},843391:(e,t,n,r,i,a,o,l,u,c,d,p,h,m,f,_)=>{s.jb("Conv",e,{format:p?"NHWC":"NCHW",auto_pad:t,dilations:n?Array.from(R().subarray(Number(n)>>>0,Number(r)>>>0)):[],group:i,kernel_shape:a?Array.from(R().subarray(Number(a)>>>0,Number(o)>>>0)):[],pads:l?Array.from(R().subarray(Number(l)>>>0,Number(u)>>>0)):[],strides:c?Array.from(R().subarray(Number(c)>>>0,Number(d)>>>0)):[],w_is_const:()=>!!B()[Number(h)>>>0],activation:Pe(m),activation_params:f?Array.from(G().subarray(Number(f)>>>0,Number(_)>>>0)):[]})},843975:e=>{s.jb("Gelu",e,void 0)},844027:(e,t,n,r,i,a,o,l,u)=>{s.jb("GroupQueryAttention",e,{numHeads:t,kvNumHeads:n,scale:r,softcap:i,doRotary:a,rotaryInterleaved:o,smoothSoftmax:l,localWindowSize:u})},844244:(e,t,n,r)=>{s.jb("LayerNormalization",e,{axis:t,epsilon:n,simplified:!!r})},844355:(e,t,n,r)=>{s.jb("LayerNormalization",e,{axis:t,epsilon:n,simplified:!!r})},844466:(e,t,n,r,i,a)=>{s.jb("MatMulNBits",e,{k:t,n:n,accuracyLevel:r,bits:i,blockSize:a})},844593:(e,t,n,r,i,a)=>{s.jb("MultiHeadAttention",e,{numHeads:t,isUnidirectional:n,maskFilterValue:r,scale:i,doRotary:a})},844752:(e,t)=>{s.jb("QuickGelu",e,{alpha:t})},844816:(e,t,n,r,i)=>{s.jb("RotaryEmbedding",e,{interleaved:!!t,numHeads:n,rotaryEmbeddingDim:r,scale:i})},844955:(e,t,n)=>{s.jb("SkipLayerNormalization",e,{epsilon:t,simplified:!!n})},845057:(e,t,n)=>{s.jb("SkipLayerNormalization",e,{epsilon:t,simplified:!!n})},845159:(e,t,n,r)=>{s.jb("GatherBlockQuantized",e,{gatherAxis:t,quantizeAxis:n,blockSize:r})},845280:e=>{s.Zb(e)},845314:(e,t)=>s.ac(Number(e),Number(t),s.Fb.dc,s.Fb.errors)};function ne(e,t,n){return Jt(async()=>{await s.Xb(Number(e),Number(t),Number(n))})}function se(){return typeof wasmOffsetConverter<"u"}class ie{name="ExitStatus";constructor(e){this.message=`Program terminated with exit(${e})`,this.status=e}}var ae=e=>{e.terminate(),e.onmessage=()=>{}},oe=[],le=e=>{0==me.length&&(xe(),be(me[0]));var t=me.pop();if(!t)return 6;fe.push(t),ge[e.Ab]=t,t.Ab=e.Ab;var n={Bb:"run",fc:e.ec,Hb:e.Hb,Ab:e.Ab};return t.postMessage(n,e.Mb),0},ue=0,ce=(e,t,...n)=>{for(var r=2*n.length,s=Sr(),i=$r(8*r),a=i>>>3,o=0;o<n.length;o++){var l=n[o];"bigint"==typeof l?(A[a+2*o]=1n,A[a+2*o+1]=l):(A[a+2*o]=0n,U()[a+2*o+1>>>0]=l)}return e=yr(e,0,r,i,t),Tr(s),e};function de(e){if(l)return ce(0,1,e);if(M=e,!(0<ue)){for(var t of fe)ae(t);for(t of me)ae(t);me=[],fe=[],ge={},O=!0}f(0,new ie(e))}function pe(e){if(l)return ce(1,0,e);he(e)}var he=e=>{if(M=e,l)throw pe(e),"unwind";de(e)},me=[],fe=[],_e=[],ge={},we=e=>{var t=e.Ab;delete ge[t],me.push(e),fe.splice(fe.indexOf(e),1),e.Ab=0,br(t)};function ye(){_e.forEach(e=>e())}var be=e=>new re(t=>{e.onmessage=n=>{var r=(n=n.data).Bb;if(n.Gb&&n.Gb!=mr()){var i=ge[n.Gb];i?i.postMessage(n,n.Mb):b(`Internal error! Worker sent a message "${r}" to target pthread ${n.Gb}, but that thread no longer exists!`)}else"checkMailbox"===r?Pt():"spawnThread"===r?le(n):"cleanupThread"===r?we(ge[n.hc]):"loaded"===r?(e.loaded=!0,t(e)):"alert"===r?alert(`Thread ${n.ic}: ${n.text}`):"setimmediate"===n.target?e.postMessage(n):"callHandler"===r?s[n.Qb](...n.args):r&&b(`worker sent an unknown command ${r}`)},e.onerror=e=>{throw b(`worker sent an error! ${e.filename}:${e.lineno}: ${e.message}`),e};var n,r=[];for(n of[])s.propertyIsEnumerable(n)&&r.push(n);e.postMessage({Bb:"load",Rb:r,kc:x,lc:v})});function xe(){var e=new Worker(new URL(n(78503),n.b),{type:"module",workerData:"em-pthread",name:"em-pthread"});me.push(e)}var ve=e=>{H();var t=V()[e+52>>>2>>>0];e=V()[e+56>>>2>>>0],kr(t,t-e),Tr(t)},Me=(e,t)=>{ue=0,e=Cr(e,t),0<ue?M=e:xr(e)};class ke{constructor(e){this.Ib=e-24}}function Te(e,t,n){var r=new ke(e>>>=0);throw t>>>=0,n>>>=0,V()[r.Ib+16>>>2>>>0]=0,V()[r.Ib+4>>>2>>>0]=t,V()[r.Ib+8>>>2>>>0]=n,e}function $e(e,t,n,r){return l?ce(2,1,e,t,n,r):Se(e,t,n,r)}function Se(e,t,n,r){if(e>>>=0,n>>>=0,r>>>=0,void 0===u)return 6;var s=[];return l&&0===s.length?$e(e,t>>>=0,n,r):(e={ec:n,Ab:e,Hb:r,Mb:s},l?(e.Bb="spawnThread",postMessage(e,s),0):le(e))}var Ce=typeof TextDecoder<"u"?new TextDecoder:void 0,Ee=(e,t=0,n=NaN)=>{var r=(t>>>=0)+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.buffer&&Ce)return Ce.decode(e.buffer instanceof ArrayBuffer?e.subarray(t,n):e.slice(t,n));for(r="";t<n;){var s=e[t++];if(128&s){var i=63&e[t++];if(192==(224&s))r+=String.fromCharCode((31&s)<<6|i);else{var a=63&e[t++];65536>(s=224==(240&s)?(15&s)<<12|i<<6|a:(7&s)<<18|i<<12|a<<6|63&e[t++])?r+=String.fromCharCode(s):(s-=65536,r+=String.fromCharCode(55296|s>>10,56320|1023&s))}}else r+=String.fromCharCode(s)}return r},Pe=(e,t)=>(e>>>=0)?Ee(D(),e,t):"";function Ae(e,t,n){return l?ce(3,1,e,t,n):0}function Ie(e,t){if(l)return ce(4,1,e,t)}var Fe=e=>{for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);127>=r?t++:2047>=r?t+=2:55296<=r&&57343>=r?(t+=4,++n):t+=3}return t},ze=(e,t,n)=>{var r=D();if(t>>>=0,0<n){var s=t;n=t+n-1;for(var i=0;i<e.length;++i){var a=e.charCodeAt(i);if(55296<=a&&57343>=a&&(a=65536+((1023&a)<<10)|1023&e.charCodeAt(++i)),127>=a){if(t>=n)break;r[t++>>>0]=a}else{if(2047>=a){if(t+1>=n)break;r[t++>>>0]=192|a>>6}else{if(65535>=a){if(t+2>=n)break;r[t++>>>0]=224|a>>12}else{if(t+3>=n)break;r[t++>>>0]=240|a>>18,r[t++>>>0]=128|a>>12&63}r[t++>>>0]=128|a>>6&63}r[t++>>>0]=128|63&a}}r[t>>>0]=0,e=t-s}else e=0;return e};function Oe(e,t){if(l)return ce(5,1,e,t)}function Le(e,t,n){if(l)return ce(6,1,e,t,n)}function Be(e,t,n){return l?ce(7,1,e,t,n):0}function De(e,t){if(l)return ce(8,1,e,t)}function je(e,t,n){if(l)return ce(9,1,e,t,n)}function Re(e,t,n,r){if(l)return ce(10,1,e,t,n,r)}function Ve(e,t,n,r){if(l)return ce(11,1,e,t,n,r)}function Ge(e,t,n,r){if(l)return ce(12,1,e,t,n,r)}function Ue(e){if(l)return ce(13,1,e)}function qe(e,t){if(l)return ce(14,1,e,t)}function We(e,t,n){if(l)return ce(15,1,e,t,n)}var He,Ke,Qe=()=>Z(""),Xe=e=>{for(var t="";D()[e>>>0];)t+=He[D()[e++>>>0]];return t},Je={},Ye={},Ze={};function et(e,t,n={}){return function(e,t,n={}){var r=t.name;if(!e)throw new Ke(`type "${r}" must have a positive integer typeid pointer`);if(Ye.hasOwnProperty(e)){if(n.Sb)return;throw new Ke(`Cannot register type '${r}' twice`)}Ye[e]=t,delete Ze[e],Je.hasOwnProperty(e)&&(t=Je[e],delete Je[e],t.forEach(e=>e()))}(e,t,n)}var tt=(e,t,n)=>{switch(t){case 1:return n?e=>B()[e>>>0]:e=>D()[e>>>0];case 2:return n?e=>N()[e>>>1>>>0]:e=>j()[e>>>1>>>0];case 4:return n?e=>R()[e>>>2>>>0]:e=>V()[e>>>2>>>0];case 8:return n?e=>A[e>>>3]:e=>I[e>>>3];default:throw new TypeError(`invalid integer width (${t}): ${e}`)}};function nt(e,t,n){n>>>=0,et(e>>>=0,{name:t=Xe(t>>>0),fromWireType:e=>e,toWireType:function(e,t){if("bigint"!=typeof t&&"number"!=typeof t)throw t=null===t?"null":"object"==(e=typeof t)||"array"===e||"function"===e?t.toString():""+t,new TypeError(`Cannot convert "${t}" to ${this.name}`);return"number"==typeof t&&(t=BigInt(t)),t},Cb:rt,readValueFromPointer:tt(t,n,-1==t.indexOf("u")),Db:null})}var rt=8;function st(e,t,n,r){et(e>>>=0,{name:t=Xe(t>>>0),fromWireType:function(e){return!!e},toWireType:function(e,t){return t?n:r},Cb:rt,readValueFromPointer:function(e){return this.fromWireType(D()[e>>>0])},Db:null})}var it=[],at=[];function ot(e){9<(e>>>=0)&&0==--at[e+1]&&(at[e]=void 0,it.push(e))}var lt=e=>{if(!e)throw new Ke("Cannot use deleted val. handle = "+e);return at[e]},ut=e=>{switch(e){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let t=it.pop()||at.length;return at[t]=e,at[t+1]=1,t}};function ct(e){return this.fromWireType(V()[e>>>2>>>0])}var dt={name:"emscripten::val",fromWireType:e=>{var t=lt(e);return ot(e),t},toWireType:(e,t)=>ut(t),Cb:rt,readValueFromPointer:ct,Db:null};function pt(e){return et(e>>>0,dt)}var ht=(e,t)=>{switch(t){case 4:return function(e){return this.fromWireType(G()[e>>>2>>>0])};case 8:return function(e){return this.fromWireType(U()[e>>>3>>>0])};default:throw new TypeError(`invalid float width (${t}): ${e}`)}};function mt(e,t,n){n>>>=0,et(e>>>=0,{name:t=Xe(t>>>0),fromWireType:e=>e,toWireType:(e,t)=>t,Cb:rt,readValueFromPointer:ht(t,n),Db:null})}function ft(e,t,n,r,s){if(e>>>=0,n>>>=0,t=Xe(t>>>0),-1===s&&(s=4294967295),s=e=>e,0===r){var i=32-8*n;s=e=>e<<i>>>i}var a=t.includes("unsigned")?function(e,t){return t>>>0}:function(e,t){return t};et(e,{name:t,fromWireType:s,toWireType:a,Cb:rt,readValueFromPointer:tt(t,n,0!==r),Db:null})}function _t(e,t,n){function r(e){var t=V()[e>>>2>>>0];return e=V()[e+4>>>2>>>0],new s(B().buffer,e,t)}var s=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][t];et(e>>>=0,{name:n=Xe(n>>>0),fromWireType:r,Cb:rt,readValueFromPointer:r},{Sb:!0})}function gt(e,t){et(e>>>=0,{name:t=Xe(t>>>0),fromWireType:function(e){for(var t,n=V()[e>>>2>>>0],r=e+4,s=r,i=0;i<=n;++i){var a=r+i;i!=n&&0!=D()[a>>>0]||(s=Pe(s,a-s),void 0===t?t=s:(t+="\0",t+=s),s=a+1)}return fr(e),t},toWireType:function(e,t){t instanceof ArrayBuffer&&(t=new Uint8Array(t));var n="string"==typeof t;if(!(n||t instanceof Uint8Array||t instanceof Uint8ClampedArray||t instanceof Int8Array))throw new Ke("Cannot pass non-string to std::string");var r=n?Fe(t):t.length,s=_r(4+r+1),i=s+4;if(V()[s>>>2>>>0]=r,n)ze(t,i,r+1);else if(n)for(n=0;n<r;++n){var a=t.charCodeAt(n);if(255<a)throw fr(s),new Ke("String has UTF-16 code units that do not fit in 8 bits");D()[i+n>>>0]=a}else for(n=0;n<r;++n)D()[i+n>>>0]=t[n];return null!==e&&e.push(fr,s),s},Cb:rt,readValueFromPointer:ct,Db(e){fr(e)}})}var wt=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,yt=(e,t)=>{for(var n=e>>1,r=n+t/2;!(n>=r)&&j()[n>>>0];)++n;if(32<(n<<=1)-e&&wt)return wt.decode(D().slice(e,n));for(n="",r=0;!(r>=t/2);++r){var s=N()[e+2*r>>>1>>>0];if(0==s)break;n+=String.fromCharCode(s)}return n},bt=(e,t,n)=>{if(n??=2147483647,2>n)return 0;var r=t;n=(n-=2)<2*e.length?n/2:e.length;for(var s=0;s<n;++s){var i=e.charCodeAt(s);N()[t>>>1>>>0]=i,t+=2}return N()[t>>>1>>>0]=0,t-r},xt=e=>2*e.length,vt=(e,t)=>{for(var n=0,r="";!(n>=t/4);){var s=R()[e+4*n>>>2>>>0];if(0==s)break;++n,65536<=s?(s-=65536,r+=String.fromCharCode(55296|s>>10,56320|1023&s)):r+=String.fromCharCode(s)}return r},Mt=(e,t,n)=>{if(t>>>=0,n??=2147483647,4>n)return 0;var r=t;n=r+n-4;for(var s=0;s<e.length;++s){var i=e.charCodeAt(s);if(55296<=i&&57343>=i&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++s)),R()[t>>>2>>>0]=i,(t+=4)+4>n)break}return R()[t>>>2>>>0]=0,t-r},kt=e=>{for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);55296<=r&&57343>=r&&++n,t+=4}return t};function Tt(e,t,n){if(e>>>=0,t>>>=0,n=Xe(n>>>=0),2===t)var r=yt,s=bt,i=xt,a=e=>j()[e>>>1>>>0];else 4===t&&(r=vt,s=Mt,i=kt,a=e=>V()[e>>>2>>>0]);et(e,{name:n,fromWireType:e=>{for(var n,s=V()[e>>>2>>>0],i=e+4,o=0;o<=s;++o){var l=e+4+o*t;o!=s&&0!=a(l)||(i=r(i,l-i),void 0===n?n=i:(n+="\0",n+=i),i=l+t)}return fr(e),n},toWireType:(e,r)=>{if("string"!=typeof r)throw new Ke(`Cannot pass non-string to C++ string type ${n}`);var a=i(r),o=_r(4+a+t);return V()[o>>>2>>>0]=a/t,s(r,o+4,a+t),null!==e&&e.push(fr,o),o},Cb:rt,readValueFromPointer:ct,Db(e){fr(e)}})}function $t(e,t){et(e>>>=0,{Tb:!0,name:t=Xe(t>>>0),Cb:0,fromWireType:()=>{},toWireType:()=>{}})}function St(e){gr(e>>>0,!o,1,!a,131072,!1),ye()}var Ct=e=>{if(!O)try{if(e(),!(0<ue))try{l?xr(M):he(M)}catch(e){e instanceof ie||"unwind"==e||f(0,e)}}catch(e){e instanceof ie||"unwind"==e||f(0,e)}};function Et(e){e>>>=0,"function"==typeof Atomics.jc&&(Atomics.jc(R(),e>>>2,e).value.then(Pt),e+=128,Atomics.store(R(),e>>>2,1))}var Pt=()=>{var e=mr();e&&(Et(e),Ct(Mr))};function At(e,t){(e>>>=0)==t>>>0?setTimeout(Pt):l?postMessage({Gb:e,Bb:"checkMailbox"}):(e=ge[e])&&e.postMessage({Bb:"checkMailbox"})}var It=[];function Ft(e,t,n,r,s){for(t>>>=0,r/=2,It.length=r,n=s>>>0>>>3,s=0;s<r;s++)It[s]=A[n+2*s]?A[n+2*s+1]:U()[n+2*s+1>>>0];return(t?te[t]:dr[e])(...It)}var zt=()=>{ue=0};function Ot(e){e>>>=0,l?postMessage({Bb:"cleanupThread",hc:e}):we(ge[e])}function Lt(e){}var Bt=(e,t)=>{var n=Ye[e];if(void 0===n)throw e=pr(e),n=Xe(e),fr(e),new Ke(`${t} has unknown type ${n}`);return n},Dt=(e,t,n)=>{var r=[];return e=e.toWireType(r,n),r.length&&(V()[t>>>2>>>0]=ut(r)),e};function Nt(e,t,n){return t>>>=0,n>>>=0,e=lt(e>>>0),t=Bt(t,"emval::as"),Dt(t,n,e)}function jt(e,t){return t>>>=0,e=lt(e>>>0),(t=Bt(t,"emval::as")).toWireType(null,e)}var Rt=e=>{try{e()}catch(e){Z(e)}},Vt=0,Gt=null,Ut=0,qt=[],Wt={},Ht={},Kt=0,Qt=null,Xt=[];function Jt(e){return function(){if(!O){if(0===Vt){var t=!1,n=!1;e().then((e=0)=>{if(!O&&(Ut=e,t=!0,n)){Vt=2,Rt(()=>Ar(Gt)),typeof MainLoop<"u"&&MainLoop.Pb&&MainLoop.resume(),e=!1;try{var r=(a=R()[Gt+8>>>2>>>0],a=cr[Ht[a]],--ue,a())}catch(a){r=a,e=!0}var s=!1;if(!Gt){var i=Qt;i&&(Qt=null,(e?i.reject:i.resolve)(r),s=!0)}if(e&&!s)throw r}var a}),n=!0,t||(Vt=1,Gt=function(){var e=_r(65548),t=e+12;V()[e>>>2>>>0]=t,V()[e+4>>>2>>>0]=t+65536,t=qt[0];var n=Wt[t];return void 0===n&&(n=Kt++,Wt[t]=n,Ht[n]=t),t=n,R()[e+8>>>2>>>0]=t,e}(),typeof MainLoop<"u"&&MainLoop.Pb&&MainLoop.pause(),Rt(()=>Er(Gt)))}else 2===Vt?(Vt=0,Rt(Ir),fr(Gt),Gt=null,Xt.forEach(Ct)):Z(`invalid state: ${Vt}`);return Ut}}()}function Yt(e){return e>>>=0,Jt(async()=>{var t=await lt(e);return ut(t)})}var Zt=[];function en(e,t,n,r){return n>>>=0,r>>>=0,(e=Zt[e>>>0])(null,t=lt(t>>>0),n,r)}var tn={},nn=e=>{var t=tn[e];return void 0===t?Xe(e):t};function rn(e,t,n,r,s){return n>>>=0,r>>>=0,s>>>=0,(e=Zt[e>>>0])(t=lt(t>>>0),t[n=nn(n)],r,s)}var sn=()=>"object"==typeof globalThis?globalThis:Function("return this")();function an(e){return 0==(e>>>=0)?ut(sn()):(e=nn(e),ut(sn()[e]))}var on=e=>{var t=Zt.length;return Zt.push(e),t},ln=(e,t)=>{for(var n=Array(e),r=0;r<e;++r)n[r]=Bt(V()[t+4*r>>>2>>>0],"parameter "+r);return n},un=(e,t)=>Object.defineProperty(t,"name",{value:e});function cn(e,t,n){var r=(t=ln(e,t>>>0)).shift();e--;var s="return function (obj, func, destructorsRef, args) {\n",i=0,a=[];0===n&&a.push("obj");for(var o=["retType"],l=[r],u=0;u<e;++u)a.push("arg"+u),o.push("argType"+u),l.push(t[u]),s+=`  var arg${u} = argType${u}.readValueFromPointer(args${i?"+"+i:""});\n`,i+=t[u].Cb;return s+=`  var rv = ${1===n?"new func":"func.call"}(${a.join(", ")});\n`,r.Tb||(o.push("emval_returnValue"),l.push(Dt),s+="  return emval_returnValue(retType, destructorsRef, rv);\n"),o.push(s+"};\n"),e=function(e){var t=Function;if(!(t instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof t} which is not a function`);var n=un(t.name||"unknownFunctionName",function(){});return n.prototype=t.prototype,n=new n,(e=t.apply(n,e))instanceof Object?e:n}(o)(...l),n=`methodCaller<(${t.map(e=>e.name).join(", ")}) => ${r.name}>`,on(un(n,e))}function dn(e){return e=nn(e>>>0),ut(s[e])}function pn(e,t){return t>>>=0,e=lt(e>>>0),t=lt(t),ut(e[t])}function hn(e){9<(e>>>=0)&&(at[e+1]+=1)}function mn(){return ut([])}function fn(e){e=lt(e>>>0);for(var t=Array(e.length),n=0;n<e.length;n++)t[n]=e[n];return ut(t)}function _n(e){return ut(nn(e>>>0))}function gn(){return ut({})}function wn(e){for(var t=lt(e>>>=0);t.length;){var n=t.pop();t.pop()(n)}ot(e)}function yn(e,t,n){t>>>=0,n>>>=0,e=lt(e>>>0),t=lt(t),n=lt(n),e[t]=n}function bn(e,t){return t>>>=0,e=(e=Bt(e>>>0,"_emval_take_value")).readValueFromPointer(t),ut(e)}function xn(e,t){e=-9007199254740992>e||9007199254740992<e?NaN:Number(e),t>>>=0,e=new Date(1e3*e),R()[t>>>2>>>0]=e.getUTCSeconds(),R()[t+4>>>2>>>0]=e.getUTCMinutes(),R()[t+8>>>2>>>0]=e.getUTCHours(),R()[t+12>>>2>>>0]=e.getUTCDate(),R()[t+16>>>2>>>0]=e.getUTCMonth(),R()[t+20>>>2>>>0]=e.getUTCFullYear()-1900,R()[t+24>>>2>>>0]=e.getUTCDay(),e=(e.getTime()-Date.UTC(e.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,R()[t+28>>>2>>>0]=e}var vn=e=>e%4==0&&(e%100!=0||e%400==0),Mn=[0,31,60,91,121,152,182,213,244,274,305,335],kn=[0,31,59,90,120,151,181,212,243,273,304,334];function Tn(e,t){e=-9007199254740992>e||9007199254740992<e?NaN:Number(e),t>>>=0,e=new Date(1e3*e),R()[t>>>2>>>0]=e.getSeconds(),R()[t+4>>>2>>>0]=e.getMinutes(),R()[t+8>>>2>>>0]=e.getHours(),R()[t+12>>>2>>>0]=e.getDate(),R()[t+16>>>2>>>0]=e.getMonth(),R()[t+20>>>2>>>0]=e.getFullYear()-1900,R()[t+24>>>2>>>0]=e.getDay();var n=(vn(e.getFullYear())?Mn:kn)[e.getMonth()]+e.getDate()-1|0;R()[t+28>>>2>>>0]=n,R()[t+36>>>2>>>0]=-60*e.getTimezoneOffset(),n=new Date(e.getFullYear(),6,1).getTimezoneOffset();var r=new Date(e.getFullYear(),0,1).getTimezoneOffset();e=0|(n!=r&&e.getTimezoneOffset()==Math.min(r,n)),R()[t+32>>>2>>>0]=e}function $n(e){e>>>=0;var t=new Date(R()[e+20>>>2>>>0]+1900,R()[e+16>>>2>>>0],R()[e+12>>>2>>>0],R()[e+8>>>2>>>0],R()[e+4>>>2>>>0],R()[e>>>2>>>0],0),n=R()[e+32>>>2>>>0],r=t.getTimezoneOffset(),s=new Date(t.getFullYear(),6,1).getTimezoneOffset(),i=new Date(t.getFullYear(),0,1).getTimezoneOffset(),a=Math.min(i,s);return 0>n?R()[e+32>>>2>>>0]=+(s!=i&&a==r):0<n!=(a==r)&&(s=Math.max(i,s),t.setTime(t.getTime()+6e4*((0<n?a:s)-r))),R()[e+24>>>2>>>0]=t.getDay(),n=(vn(t.getFullYear())?Mn:kn)[t.getMonth()]+t.getDate()-1|0,R()[e+28>>>2>>>0]=n,R()[e>>>2>>>0]=t.getSeconds(),R()[e+4>>>2>>>0]=t.getMinutes(),R()[e+8>>>2>>>0]=t.getHours(),R()[e+12>>>2>>>0]=t.getDate(),R()[e+16>>>2>>>0]=t.getMonth(),R()[e+20>>>2>>>0]=t.getYear(),e=t.getTime(),BigInt(isNaN(e)?-1:e/1e3)}function Sn(e,t,n,r,s,i,a){return l?ce(16,1,e,t,n,r,s,i,a):-52}function Cn(e,t,n,r,s,i){if(l)return ce(17,1,e,t,n,r,s,i)}var En={},Pn=()=>performance.timeOrigin+performance.now();function An(e,t){if(l)return ce(18,1,e,t);if(En[e]&&(clearTimeout(En[e].id),delete En[e]),!t)return 0;var n=setTimeout(()=>{delete En[e],Ct(()=>vr(e,performance.timeOrigin+performance.now()))},t);return En[e]={id:n,qc:t},0}function In(e,t,n,r){e>>>=0,t>>>=0,n>>>=0,r>>>=0;var s=(new Date).getFullYear(),i=new Date(s,0,1).getTimezoneOffset();s=new Date(s,6,1).getTimezoneOffset();var a=Math.max(i,s);V()[e>>>2>>>0]=60*a,R()[t>>>2>>>0]=+(i!=s),e=(t=e=>{var t=Math.abs(e);return`UTC${0<=e?"-":"+"}${String(Math.floor(t/60)).padStart(2,"0")}${String(t%60).padStart(2,"0")}`})(i),t=t(s),s<i?(ze(e,n,17),ze(t,r,17)):(ze(e,r,17),ze(t,n,17))}var Fn=()=>Date.now(),zn=1;function On(e,t,n){if(!(0<=e&&3>=e))return 28;if(0===e)e=Date.now();else{if(!zn)return 52;e=performance.timeOrigin+performance.now()}return A[n>>>0>>>3]=BigInt(Math.round(1e6*e)),0}var Ln=[],Bn=(e,t)=>{Ln.length=0;for(var n;n=D()[e++>>>0];){var r=105!=n;t+=(r&=112!=n)&&t%8?4:0,Ln.push(112==n?V()[t>>>2>>>0]:106==n?A[t>>>3]:105==n?R()[t>>>2>>>0]:U()[t>>>3>>>0]),t+=r?8:4}return Ln};function Dn(e,t,n){return e>>>=0,t=Bn(t>>>0,n>>>0),te[e](...t)}function Nn(e,t,n){return e>>>=0,t=Bn(t>>>0,n>>>0),te[e](...t)}var jn=()=>{};function Rn(e,t){return b(Pe(e>>>0,t>>>0))}var Vn=()=>{throw ue+=1,"unwind"};function Gn(){return 4294901760}var Un=()=>navigator.hardwareConcurrency;function qn(){return Z("Cannot use emscripten_pc_get_function without -sUSE_OFFSET_CONVERTER"),0}function Wn(e){e>>>=0;var t=D().length;if(e<=t||4294901760<e)return!1;for(var n=1;4>=n;n*=2){var r=t*(1+.2/n);r=Math.min(r,e+100663296);e:{r=(Math.min(4294901760,65536*Math.ceil(Math.max(e,r)/65536))-x.buffer.byteLength+65535)/65536|0;try{x.grow(r),H();var s=1;break e}catch{}s=void 0}if(s)return!0}return!1}var Hn=()=>(Z("Cannot use convertFrameToPC (needed by __builtin_return_address) without -sUSE_OFFSET_CONVERTER"),0),Kn={},Qn=e=>{e.forEach(e=>{var t=Hn();t&&(Kn[t]=e)})};function Xn(){var e=Error().stack.toString().split("\n");return"Error"==e[0]&&e.shift(),Qn(e),Kn.Lb=Hn(),Kn.cc=e,Kn.Lb}function Jn(e,t,n){if(e>>>=0,t>>>=0,Kn.Lb==e)var r=Kn.cc;else"Error"==(r=Error().stack.toString().split("\n"))[0]&&r.shift(),Qn(r);for(var s=3;r[s]&&Hn()!=e;)++s;for(e=0;e<n&&r[e+s];++e)R()[t+4*e>>>2>>>0]=Hn();return e}var Yn,Zn={},er=()=>{if(!Yn){var e,t={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:"./this.program"};for(e in Zn)void 0===Zn[e]?delete t[e]:t[e]=Zn[e];var n=[];for(e in t)n.push(`${e}=${t[e]}`);Yn=n}return Yn};function tr(e,t){if(l)return ce(19,1,e,t);e>>>=0,t>>>=0;var n=0;return er().forEach((r,s)=>{var i=t+n;for(s=V()[e+4*s>>>2>>>0]=i,i=0;i<r.length;++i)B()[s++>>>0]=r.charCodeAt(i);B()[s>>>0]=0,n+=r.length+1}),0}function nr(e,t){if(l)return ce(20,1,e,t);e>>>=0,t>>>=0;var n=er();V()[e>>>2>>>0]=n.length;var r=0;return n.forEach(e=>r+=e.length+1),V()[t>>>2>>>0]=r,0}function rr(e){return l?ce(21,1,e):52}function sr(e,t,n,r){return l?ce(22,1,e,t,n,r):52}function ir(e,t,n,r){return l?ce(23,1,e,t,n,r):70}var ar=[null,[],[]];function or(e,t,n,r){if(l)return ce(24,1,e,t,n,r);t>>>=0,n>>>=0,r>>>=0;for(var s=0,i=0;i<n;i++){var a=V()[t>>>2>>>0],o=V()[t+4>>>2>>>0];t+=8;for(var u=0;u<o;u++){var c=D()[a+u>>>0],d=ar[e];0===c||10===c?((1===e?y:b)(Ee(d)),d.length=0):d.push(c)}s+=o}return V()[r>>>2>>>0]=s,0}l||function(){for(var e=s.numThreads-1;e--;)xe();oe.unshift(()=>{var e;X++,e=()=>Y(),l?e():re.all(me.map(be)).then(e)})}();for(var lr=Array(256),ur=0;256>ur;++ur)lr[ur]=String.fromCharCode(ur);He=lr,Ke=s.BindingError=class extends Error{constructor(e){super(e),this.name="BindingError"}},s.InternalError=class extends Error{constructor(e){super(e),this.name="InternalError"}},at.push(0,1,void 0,1,null,1,!0,1,!1,1),s.count_emval_handles=()=>at.length/2-5-it.length;var cr,dr=[de,pe,$e,Ae,Ie,Oe,Le,Be,De,je,Re,Ve,Ge,Ue,qe,We,Sn,Cn,An,tr,nr,rr,sr,ir,or];!async function(){function e(e,t){return cr=e.exports,cr=function(){var e=cr,t={};for(let[n,r]of Object.entries(e))t[n]="function"==typeof r?(...e)=>{qt.push(n);try{return r(...e)}finally{O||(qt.pop(),Gt&&1===Vt&&0===qt.length&&(Vt=0,ue+=1,Rt(Pr),typeof Fibers<"u"&&Fibers.rc()))}}:r;return t}(),n=cr,r=e=>t=>e(t)>>>0,s=e=>()=>e()>>>0,(n=Object.assign({},n)).Da=r(n.Da),n.fb=s(n.fb),n.hb=r(n.hb),n.tb=r(n.tb),n.ub=s(n.ub),n.__cxa_get_exception_ptr=r(n.__cxa_get_exception_ptr),cr=n,_e.push(cr.ib),v=t,Y(),cr;var n,r,s}X++;var t=ee();if(s.instantiateWasm)return new re(n=>{s.instantiateWasm(t,(t,r)=>{e(t,r),n(t.exports)})});if(l)return new re(t=>{q=n=>{var r=new WebAssembly.Instance(n,ee());t(e(r,n))}});Q??=s.locateFile?s.locateFile?s.locateFile("ort-wasm-simd-threaded.jsep.wasm",_):_+"ort-wasm-simd-threaded.jsep.wasm":new URL(n(29098),n.b).href;try{var i=await async function(e){var t=Q;if(!z&&"function"==typeof WebAssembly.instantiateStreaming&&!L(t))try{var n=fetch(t,{credentials:"same-origin"});return await WebAssembly.instantiateStreaming(n,e)}catch(e){b(`wasm streaming compile failed: ${e}`),b("falling back to ArrayBuffer instantiation")}return async function(e,t){try{var n=await async function(e){if(!z)try{var t=await p(e);return new Uint8Array(t)}catch{}if(e==Q&&z)e=new Uint8Array(z);else{if(!h)throw"both async and sync fetching of the wasm failed";e=h(e)}return e}(e);return await WebAssembly.instantiate(n,t)}catch(e){b(`failed to asynchronously prepare wasm: ${e}`),Z(e)}}(t,e)}(t);return e(i.instance,i.module)}catch(e){return r(e),re.reject(e)}}();var pr=e=>(pr=cr.Da)(e),hr=()=>(hr=cr.Ea)();s._OrtInit=(e,t)=>(s._OrtInit=cr.Fa)(e,t),s._OrtGetLastError=(e,t)=>(s._OrtGetLastError=cr.Ga)(e,t),s._OrtCreateSessionOptions=(e,t,n,r,i,a,o,l,u,c)=>(s._OrtCreateSessionOptions=cr.Ha)(e,t,n,r,i,a,o,l,u,c),s._OrtAppendExecutionProvider=(e,t,n,r,i)=>(s._OrtAppendExecutionProvider=cr.Ia)(e,t,n,r,i),s._OrtAddFreeDimensionOverride=(e,t,n)=>(s._OrtAddFreeDimensionOverride=cr.Ja)(e,t,n),s._OrtAddSessionConfigEntry=(e,t,n)=>(s._OrtAddSessionConfigEntry=cr.Ka)(e,t,n),s._OrtReleaseSessionOptions=e=>(s._OrtReleaseSessionOptions=cr.La)(e),s._OrtCreateSession=(e,t,n)=>(s._OrtCreateSession=cr.Ma)(e,t,n),s._OrtReleaseSession=e=>(s._OrtReleaseSession=cr.Na)(e),s._OrtGetInputOutputCount=(e,t,n)=>(s._OrtGetInputOutputCount=cr.Oa)(e,t,n),s._OrtGetInputOutputMetadata=(e,t,n,r)=>(s._OrtGetInputOutputMetadata=cr.Pa)(e,t,n,r),s._OrtFree=e=>(s._OrtFree=cr.Qa)(e),s._OrtCreateTensor=(e,t,n,r,i,a)=>(s._OrtCreateTensor=cr.Ra)(e,t,n,r,i,a),s._OrtGetTensorData=(e,t,n,r,i)=>(s._OrtGetTensorData=cr.Sa)(e,t,n,r,i),s._OrtReleaseTensor=e=>(s._OrtReleaseTensor=cr.Ta)(e),s._OrtCreateRunOptions=(e,t,n,r)=>(s._OrtCreateRunOptions=cr.Ua)(e,t,n,r),s._OrtAddRunConfigEntry=(e,t,n)=>(s._OrtAddRunConfigEntry=cr.Va)(e,t,n),s._OrtReleaseRunOptions=e=>(s._OrtReleaseRunOptions=cr.Wa)(e),s._OrtCreateBinding=e=>(s._OrtCreateBinding=cr.Xa)(e),s._OrtBindInput=(e,t,n)=>(s._OrtBindInput=cr.Ya)(e,t,n),s._OrtBindOutput=(e,t,n,r)=>(s._OrtBindOutput=cr.Za)(e,t,n,r),s._OrtClearBoundOutputs=e=>(s._OrtClearBoundOutputs=cr._a)(e),s._OrtReleaseBinding=e=>(s._OrtReleaseBinding=cr.$a)(e),s._OrtRunWithBinding=(e,t,n,r,i)=>(s._OrtRunWithBinding=cr.ab)(e,t,n,r,i),s._OrtRun=(e,t,n,r,i,a,o,l)=>(s._OrtRun=cr.bb)(e,t,n,r,i,a,o,l),s._OrtEndProfiling=e=>(s._OrtEndProfiling=cr.cb)(e),s._JsepOutput=(e,t,n)=>(s._JsepOutput=cr.db)(e,t,n),s._JsepGetNodeName=e=>(s._JsepGetNodeName=cr.eb)(e);var mr=()=>(mr=cr.fb)(),fr=s._free=e=>(fr=s._free=cr.gb)(e),_r=s._malloc=e=>(_r=s._malloc=cr.hb)(e),gr=(e,t,n,r,s,i)=>(gr=cr.kb)(e,t,n,r,s,i),wr=()=>(wr=cr.lb)(),yr=(e,t,n,r,s)=>(yr=cr.mb)(e,t,n,r,s),br=e=>(br=cr.nb)(e),xr=e=>(xr=cr.ob)(e),vr=(e,t)=>(vr=cr.pb)(e,t),Mr=()=>(Mr=cr.qb)(),kr=(e,t)=>(kr=cr.rb)(e,t),Tr=e=>(Tr=cr.sb)(e),$r=e=>($r=cr.tb)(e),Sr=()=>(Sr=cr.ub)(),Cr=s.dynCall_ii=(e,t)=>(Cr=s.dynCall_ii=cr.vb)(e,t),Er=e=>(Er=cr.wb)(e),Pr=()=>(Pr=cr.xb)(),Ar=e=>(Ar=cr.yb)(e),Ir=()=>(Ir=cr.zb)();return s.stackSave=()=>Sr(),s.stackRestore=e=>Tr(e),s.stackAlloc=e=>$r(e),s.setValue=function(e,t,n="i8"){switch(n.endsWith("*")&&(n="*"),n){case"i1":case"i8":B()[e>>>0]=t;break;case"i16":N()[e>>>1>>>0]=t;break;case"i32":R()[e>>>2>>>0]=t;break;case"i64":A[e>>>3]=BigInt(t);break;case"float":G()[e>>>2>>>0]=t;break;case"double":U()[e>>>3>>>0]=t;break;case"*":V()[e>>>2>>>0]=t;break;default:Z(`invalid type for setValue: ${n}`)}},s.getValue=function(e,t="i8"){switch(t.endsWith("*")&&(t="*"),t){case"i1":case"i8":return B()[e>>>0];case"i16":return N()[e>>>1>>>0];case"i32":return R()[e>>>2>>>0];case"i64":return A[e>>>3];case"float":return G()[e>>>2>>>0];case"double":return U()[e>>>3>>>0];case"*":return V()[e>>>2>>>0];default:Z(`invalid type for getValue: ${t}`)}},s.UTF8ToString=Pe,s.stringToUTF8=ze,s.lengthBytesUTF8=Fe,function e(){if(0<X)J=e;else if(l)t(s),K();else{for(;0<oe.length;)oe.shift()(s);0<X?J=e:(s.calledRun=!0,O||(K(),t(s)))}}(),s.PTR_SIZE=4,i},Re=je,Ve=globalThis.self?.name?.startsWith("em-pthread"),Ve&&je()}),Su=ue(()=>{Ie(),Ge=typeof location>"u"?void 0:location.origin,Ue=!0,qe=()=>{if(Ue){let e=URL;return new URL(new e(n(78503),n.b).href,Ge).href}return"file:///C:/Users/25-01%200077User/Desktop/%E6%97%A7pc%E7%A7%BB%E5%8B%95/%E6%97%A7%E3%83%87%E3%82%B9%E3%82%AF%E3%83%88%E3%83%83%E3%83%97/%E5%93%81%E8%B3%AA%E7%AE%A1%E7%90%86%E8%AA%B2%EF%BC%882022%E5%B9%B4%EF%BD%9E%EF%BC%89/vscode_repositories/ExcelAddIns/LocalTanslatorForExcel/node_modules/onnxruntime-web/dist/ort.bundle.min.mjs"},We=qe(),He=()=>{if(We&&!We.startsWith("blob:"))return We.substring(0,We.lastIndexOf("/")+1)},Ke=(e,t)=>{try{let n=t??We;return(n?new URL(e,n):new URL(e)).origin===Ge}catch{return!1}},Qe=(e,t)=>{let n=t??We;try{return(n?new URL(e,n):new URL(e)).href}catch{return}},Xe=(e,t)=>`${t??"./"}${e}`,Je=async e=>{let t=await(await fetch(e,{credentials:"same-origin"})).blob();return URL.createObjectURL(t)},Ye=async e=>(await import(e)).default,Ze=(Be(),de(Fe)).default,et=async()=>{if(!We)throw new Error("Failed to load proxy worker: cannot determine the script source URL.");if(Ke(We))return[void 0,Ze()];let e=await Je(We);return[e,Ze(e)]},tt=($u(),de(De)).default,nt=async(e,t,n)=>{if(!e&&!t&&tt&&We&&Ke(We))return[void 0,tt];{let r="ort-wasm-simd-threaded.jsep.mjs",s=e??Qe(r,t),i=n&&s&&!Ke(s,t),a=i?await Je(s):s??Xe(r,t);return[i?a:void 0,await Ye(a)]}}}),Cu=ue(()=>{Su(),st=!1,it=!1,at=!1,ot=()=>{if(typeof SharedArrayBuffer>"u")return!1;try{return typeof MessageChannel<"u"&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},lt=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},ut=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,19,1,17,0,65,1,253,15,65,2,253,15,65,3,253,15,253,147,2,11]))}catch{return!1}},ct=async e=>{if(st)return re.resolve();if(it)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(at)throw new Error("previous call to 'initializeWebAssembly()' failed.");it=!0;let t=e.initTimeout,n=e.numThreads;if(!1!==e.simd)if("relaxed"===e.simd){if(!ut())throw new Error("Relaxed WebAssembly SIMD is not supported in the current environment.")}else if(!lt())throw new Error("WebAssembly SIMD is not supported in the current environment.");let r=ot();n>1&&!r&&(typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+n+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),console.warn("WebAssembly multi-threading is not supported in the current environment. Falling back to single-threading."),e.numThreads=n=1);let s=e.wasmPaths,i="string"==typeof s?s:void 0,a=s?.mjs,o=a?.href??a,l=s?.wasm,u=l?.href??l,c=e.wasmBinary,[d,p]=await nt(o,i,n>1),h=!1,m=[];if(t>0&&m.push(new re(e=>{setTimeout(()=>{h=!0,e()},t)})),m.push(new re((e,t)=>{let r={numThreads:n};if(c)r.wasmBinary=c;else if(u||i)r.locateFile=e=>u??i+e;else if(o&&0!==o.indexOf("blob:"))r.locateFile=e=>new URL(e,o).href;else if(d){let e=He();e&&(r.locateFile=t=>e+t)}p(r).then(t=>{it=!1,st=!0,rt=t,e(),d&&URL.revokeObjectURL(d)},e=>{it=!1,at=!0,t(e)})})),await re.race(m),h)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},dt=()=>{if(st&&rt)return rt;throw new Error("WebAssembly is not initialized yet.")}}),Eu=ue(()=>{Cu(),pt=(e,t)=>{let n=dt(),r=n.lengthBytesUTF8(e)+1,s=n._malloc(r);return n.stringToUTF8(e,s,r),t.push(s),s},ht=(e,t,n,r)=>{if("object"==typeof e&&null!==e){if(n.has(e))throw new Error("Circular reference in options");n.add(e)}Object.entries(e).forEach(([e,s])=>{let i=t?t+e:e;if("object"==typeof s)ht(s,i+".",n,r);else if("string"==typeof s||"number"==typeof s)r(i,s.toString());else{if("boolean"!=typeof s)throw new Error("Can't handle extra config type: "+typeof s);r(i,s?"1":"0")}})},mt=e=>{let t=dt(),n=t.stackSave();try{let n=t.PTR_SIZE,r=t.stackAlloc(2*n);t._OrtGetLastError(r,r+n);let s=Number(t.getValue(r,4===n?"i32":"i64")),i=t.getValue(r+n,"*"),a=i?t.UTF8ToString(i):"";throw new Error(`${e} ERROR_CODE: ${s}, ERROR_MESSAGE: ${a}`)}finally{t.stackRestore(n)}}}),Pu=ue(()=>{Cu(),Eu(),ft=e=>{let t=dt(),n=0,r=[],s=e||{};try{if(void 0===e?.logSeverityLevel)s.logSeverityLevel=2;else if("number"!=typeof e.logSeverityLevel||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(void 0===e?.logVerbosityLevel)s.logVerbosityLevel=0;else if("number"!=typeof e.logVerbosityLevel||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);void 0===e?.terminate&&(s.terminate=!1);let i=0;return void 0!==e?.tag&&(i=pt(e.tag,r)),n=t._OrtCreateRunOptions(s.logSeverityLevel,s.logVerbosityLevel,!!s.terminate,i),0===n&&mt("Can't create run options."),void 0!==e?.extra&&ht(e.extra,"",new WeakSet,(e,s)=>{let i=pt(e,r),a=pt(s,r);0!==t._OrtAddRunConfigEntry(n,i,a)&&mt(`Can't set a run config entry: ${e} - ${s}.`)}),[n,r]}catch(e){throw 0!==n&&t._OrtReleaseRunOptions(n),r.forEach(e=>t._free(e)),e}}}),Au=ue(()=>{Cu(),Eu(),_t=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},gt=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},wt=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(e=>"webgpu"===("string"==typeof e?e:e.name))&&(e.enableMemPattern=!1)},yt=(e,t,n,r)=>{let s=pt(t,r),i=pt(n,r);0!==dt()._OrtAddSessionConfigEntry(e,s,i)&&mt(`Can't set a session config entry: ${t} - ${n}.`)},bt=async(e,t,n)=>{for(let r of t){let t="string"==typeof r?r:r.name,s=[];switch(t){case"webnn":if(t="WEBNN","string"!=typeof r){let t=r?.deviceType;t&&yt(e,"deviceType",t,n)}break;case"webgpu":if(t="JS","string"!=typeof r){let t=r;if(t?.preferredLayout){if("NCHW"!==t.preferredLayout&&"NHWC"!==t.preferredLayout)throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${t.preferredLayout}`);yt(e,"preferredLayout",t.preferredLayout,n)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${t}`)}let i=pt(t,n),a=s.length,o=0,l=0;if(a>0){o=dt()._malloc(a*dt().PTR_SIZE),n.push(o),l=dt()._malloc(a*dt().PTR_SIZE),n.push(l);for(let e=0;e<a;e++)dt().setValue(o+e*dt().PTR_SIZE,s[e][0],"*"),dt().setValue(l+e*dt().PTR_SIZE,s[e][1],"*")}0!==await dt()._OrtAppendExecutionProvider(e,i,o,l,a)&&mt(`Can't append execution provider: ${t}.`)}},xt=async e=>{let t=dt(),n=0,r=[],s=e||{};wt(s);try{let e=_t(s.graphOptimizationLevel??"all"),i=gt(s.executionMode??"sequential"),a="string"==typeof s.logId?pt(s.logId,r):0,o=s.logSeverityLevel??2;if(!Number.isInteger(o)||o<0||o>4)throw new Error(`log serverity level is not valid: ${o}`);let l=s.logVerbosityLevel??0;if(!Number.isInteger(l)||l<0||l>4)throw new Error(`log verbosity level is not valid: ${l}`);let u="string"==typeof s.optimizedModelFilePath?pt(s.optimizedModelFilePath,r):0;if(n=t._OrtCreateSessionOptions(e,!!s.enableCpuMemArena,!!s.enableMemPattern,i,!!s.enableProfiling,0,a,o,l,u),0===n&&mt("Can't create session options."),s.executionProviders&&await bt(n,s.executionProviders,r),void 0!==s.enableGraphCapture){if("boolean"!=typeof s.enableGraphCapture)throw new Error(`enableGraphCapture must be a boolean value: ${s.enableGraphCapture}`);yt(n,"enableGraphCapture",s.enableGraphCapture.toString(),r)}if(s.freeDimensionOverrides)for(let[e,i]of Object.entries(s.freeDimensionOverrides)){if("string"!=typeof e)throw new Error(`free dimension override name must be a string: ${e}`);if("number"!=typeof i||!Number.isInteger(i)||i<0)throw new Error(`free dimension override value must be a non-negative integer: ${i}`);let s=pt(e,r);0!==t._OrtAddFreeDimensionOverride(n,s,i)&&mt(`Can't set a free dimension override: ${e} - ${i}.`)}return void 0!==s.extra&&ht(s.extra,"",new WeakSet,(e,t)=>{yt(n,e,t,r)}),[n,r]}catch(e){throw 0!==n&&0!==t._OrtReleaseSessionOptions(n)&&mt("Can't release session options."),r.forEach(e=>t._free(e)),e}}}),Iu=ue(()=>{vt=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;case"int4":return 22;case"uint4":return 21;default:throw new Error(`unsupported data type: ${e}`)}},Mt=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";case 22:return"int4";case 21:return"uint4";default:throw new Error(`unsupported data type: ${e}`)}},kt=(e,t)=>{let n=[-1,4,1,1,2,2,4,8,-1,1,2,8,4,8,-1,-1,-1,-1,-1,-1,-1,.5,.5][e],r="number"==typeof t?t:t.reduce((e,t)=>e*t,1);return n>0?Math.ceil(r*n):void 0},Tt=e=>{switch(e){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":case"bool":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},$t=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},St=e=>"float32"===e||"float16"===e||"int32"===e||"int64"===e||"uint32"===e||"uint8"===e||"bool"===e||"uint4"===e||"int4"===e,Ct=e=>"float32"===e||"float16"===e||"int32"===e||"int64"===e||"uint32"===e||"uint64"===e||"int8"===e||"uint8"===e||"bool"===e||"uint4"===e||"int4"===e,Et=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;case"ml-tensor":return 5;default:throw new Error(`unsupported data location: ${e}`)}}}),Fu=ue(()=>{Ie(),Pt=async e=>{if("string"==typeof e){let t=await fetch(e);if(!t.ok)throw new Error(`failed to load external data file: ${e}`);let n=t.headers.get("Content-Length"),r=n?parseInt(n,10):0;if(r<1073741824)return new Uint8Array(await t.arrayBuffer());{if(!t.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let n,s=t.body.getReader();try{n=new ArrayBuffer(r)}catch(e){if(!(e instanceof RangeError))throw e;{let e=Math.ceil(r/65536);n=new WebAssembly.Memory({initial:e,maximum:e}).buffer}}let i=0;for(;;){let{done:e,value:t}=await s.read();if(e)break;let r=t.byteLength;new Uint8Array(n,i,r).set(t),i+=r}return new Uint8Array(n,0,r)}}return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)}}),zu=ue(()=>{Iu(),At=["V","I","W","E","F"],It=(e,t)=>{console.log(`[${At[e]},${(new Date).toISOString()}]${t}`)},Ot=(e,t)=>{Ft=e,zt=t},Lt=(e,t)=>{let n=$t(e);n>=$t(Ft)&&It(n,"function"==typeof t?t():t)},Bt=(...e)=>{zt&&Lt(...e)}}),Ou=ue(()=>{Dt=class{static calcMatMulShape(e,t){return e[1]!==t[0]?void 0:[e[0],t[1]]}},Nt=class{static calcShape(e,t,n=!1){let r=e.length,s=t.length;if(0===r)return t;if(0===s)return e;let i=Math.max(e.length,t.length),a=new Array(i);if(n){if(r<2||s<2)return;let n=Dt.calcMatMulShape([e[r-2],e[r-1]],[t[s-2],t[s-1]]);if(void 0===n)return;[a[i-2],a[i-1]]=n}for(let o=n?3:1;o<=i;o++){let n=r-o<0?1:e[r-o],l=s-o<0?1:t[s-o];if(n!==l&&n>1&&l>1)return;let u=Math.max(n,l);if(n&&l)a[i-o]=Math.max(n,l);else{if(u>1)return;a[i-o]=0}}return a}static isValidBroadcast(e,t){let n=e.length,r=t.length;if(n>r)return!1;for(let s=1;s<=n;s++)if(1!==e[n-s]&&e[n-s]!==t[r-s])return!1;return!0}},jt=class e{static size(t){return e.getSizeFromDimensionRange(t,0,t.length)}static convertShape(e,t=4){let n=e.length;if(0===n)return[];let r=new Array(n),s=n-1;for(;s>=0;){if(e[s]%t===0){r[s]=e[s]/t;break}if(t%e[s]!==0)throw new Error("cannot convert shape");r[s]=1,t/=e[s],s--}for(s--;s>=0;s--)r[s]=e[s];return r}static sizeFromDimension(t,n){if(n<0||n>t.length)throw new Error(`invalid dimension of ${n} for sizeFromDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,n,t.length)}static sizeToDimension(t,n){if(n<0||n>t.length)throw new Error(`invalid dimension of ${n} for sizeToDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,0,n)}static getSizeFromDimensionRange(e,t,n){let r=1;for(let s=t;s<n;s++){if(e[s]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");r*=Number(e[s])}return r}static computeStrides(e){let t=e.length;if(0===t)return[];if(1===t)return[1];let n=new Array(t);n[t-1]=1,n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}static normalizeAxis(e,t){if(e<-t&&e>=t)throw new Error("unsupported axis for this operation.");return e<0?e+t:e}static normalizeAxes(e,t){return e.map(n=>this.normalizeAxis(n,t??e.length))}static sortBasedOnPerm(e,t){return t?t.map(t=>e[t]):e.slice().reverse()}static padShape(e,t){let n=e.length;return e.map((e,r)=>e+t[r]+t[r+n])}static areEqual(e,t){return e.length===t.length&&e.every((e,n)=>e===t[n])}},Rt=class e{static adjustPoolAttributes(e,t,n,r,s,i){if(!e&&n.length!==t.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(e)for(let e=0;e<t.length-2;e++)e>=n.length?n.push(t[e+2]):n[e]=t[e+2];for(let e=0;e<n.length;e++)if(e<r.length){if(r[e]<0)throw new Error("strides should be greater than or equal to 1")}else r.push(1);for(let e=0;e<n.length;e++)if(e<s.length){if(s[e]<0)throw new Error("dilations should be greater than or equal to 1")}else s.push(1);for(let e=0;e<2*n.length;e++)if(e<i.length){if(i[e]<0)throw new Error("pad should be greater than or equal to 1")}else i.push(0);for(let e=0;e<n.length;e++){if(n[e]<=0)throw new Error("kernel shapes need to be greater than 0");if(i[e]>=n[e]||i[e+n.length]>=n[e])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(t,n,r,s,i,a,o){if(o){if(i.length!==2*(t.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(n.length!==t.length-2)throw new Error("length of strides should be the length of data dimensions");if(s.length!==t.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let l=0;l<t.length-2;l++)e.adjustPadAndReturnShape(t[l+(a?1:2)],n[l],r[l],s[l],i,l,l+t.length-2,o)}}static computePoolOutputShape(t,n,r,s,i,a,o){if(n.length<=0)throw new Error("input shape must be of size greater than 0");let l=[n[0],n[1]];return e.computeShapeHelper(t,n,l,r,s,i,a,o),l}static computeConvOutputShape(t,n,r,s,i,a,o){if(t.length<=0||n.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let l=[t[0],n[0]];return e.computeShapeHelper(!1,t,l,r,s,i,a,o),l}static computeShapeHelper(t,n,r,s,i,a,o,l){if(t)for(let e=0;e<n.length-2;e++)r.push(1);else for(let t=0;t<n.length-2;t++)r.push(e.adjustPadAndReturnShape(n[t+2],s[t],i[t],a[t],o,t,t+n.length-2,l))}static adjustPadAndReturnShape(e,t,n,r,s,i,a,o){let l=n*(r-1)+1;if(!o||"NOTSET"===o)return Math.floor((e+s[i]+s[a]-l)/t+1);switch(o){case"VALID":return s[i]=0,s[a]=0,Math.floor((e-l)/t+1);case"SAME_LOWER":case"SAME_UPPER":if(1!==n)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let n=((e+t-1)/t-1)*t+r-e;return s[i]=Math.floor("SAME_LOWER"===o?(n+1)/2:n/2),s[a]=n-s[i],Math.floor((e+n-r)/t+1)}default:throw new Error("Unsupported AutoPad type")}}},Vt=class{static getShapeOfGemmResult(e,t,n,r,s){if(2!==e.length||2!==n.length)throw new Error("shape need to be of size 2");let i,a,o;t?(i=e[1],a=e[0]):(i=e[0],a=e[1]);let l=-1;if(r?(o=n[0],l=1):(o=n[1],l=0),n[l]!==a)throw new Error("dimension mismatch");if(i<=0||o<=0||a<=0)throw new Error("invalid shape specified");if(s&&!Nt.isValidBroadcast(s,[i,o]))throw new Error("gemm: invalid bias shape for broadcast");return[i,o,a]}},Gt=-34028234663852886e22,Ut=34028234663852886e22}),Lu=ue(()=>{Iu(),qt=(e,t)=>new(Tt(t))(e)}),Bu=ue(()=>{zu(),Wt=(e,t=!0)=>{if(e.byteLength%8!=0)throw new Error("Invalid Uint8Array length - must be a multiple of 8 (BigInt).");let n=e.byteLength/8,r=new BigInt64Array(e.buffer,e.byteOffset,n),s=new Int32Array(n);for(let e=0;e<n;e++){let t=r[e];if(t>2147483647n||t<-2147483648n)throw new Error(`Overflow occurred when converting BigInt to Int32 at index ${e}: ${t}`);s[e]=Number(t)}return t?new Uint8Array(s.buffer):s},Ht=(e,t=!0)=>{if(e.byteLength%4!=0)throw new Error("Invalid Uint8Array length - must be a multiple of 4 (Int32).");let n=e.byteLength/4,r=new Int32Array(e.buffer,e.byteOffset,n),s=BigInt64Array.from(r,BigInt);return t?new Uint8Array(s.buffer):s},Kt=1,Qt=()=>Kt++,Xt=new Map([["float32",32],["float16",16],["int32",32],["uint32",32],["int64",64],["uint64",64],["int8",8],["uint8",8],["int4",4],["uint4",4]]),Jt=(e,t)=>{let n=Xt.get(e);if(!n)throw new Error("Unsupported data type.");return t.length>0?Math.ceil(t.reduce((e,t)=>e*t)*n/8):0},Yt=class{constructor(e){this.shouldConvertInt64toInt32=!1,this.isInt64ToInt32Converted=!1;let{sessionId:t,context:n,tensor:r,dataType:s,shape:i,shouldConvertInt64toInt32:a=!1}=e;this.sessionId=t,this.mlContext=n,this.mlTensor=r,this.dataType=s,this.tensorShape=i,this.shouldConvertInt64toInt32=a}get tensor(){return this.mlTensor}get type(){return this.dataType}get shape(){return this.tensorShape}get byteLength(){return Jt(this.dataType,this.tensorShape)}destroy(){Bt("verbose",()=>"[WebNN] TensorWrapper.destroy"),this.mlTensor.destroy()}write(e){this.mlContext.writeTensor(this.mlTensor,e)}async read(e,t){if(e){let e=await this.mlContext.readTensor(this.mlTensor),n=Ht(new Uint8Array(e));return t?void(t instanceof ArrayBuffer?new Uint8Array(t):new Uint8Array(t.buffer,t.byteOffset,t.byteLength)).set(n):n.buffer}return t?this.mlContext.readTensor(this.mlTensor,t):this.mlContext.readTensor(this.mlTensor)}canReuseTensor(e,t,n){return this.mlContext===e&&this.dataType===t&&this.tensorShape.length===n.length&&this.tensorShape.every((e,t)=>e===n[t])}setIsInt64ToInt32Converted(e){this.isInt64ToInt32Converted=e}},Zt=class{constructor(e,t){this.tensorManager=e,this.wrapper=t}get tensorWrapper(){return this.wrapper}releaseTensor(){this.tensorWrapper&&(this.tensorManager.releaseTensor(this.tensorWrapper),this.wrapper=void 0)}async ensureTensor(e,t,n,r){let s=t,i=this.tensorManager.getMLContext(e),a="int64"===s&&!i.opSupportLimits().input.dataTypes.includes("int64");if(a&&(s="int32",Bt("verbose",()=>"[WebNN] TensorIdTracker.ensureTensor: convert dataType from int64 to int32")),this.wrapper){if(this.wrapper.canReuseTensor(i,s,n))return this.wrapper.tensor;if(r){if(this.wrapper.byteLength!==Jt(s,n))throw new Error("Unable to copy data to tensor with different size.");this.activeUpload=new Uint8Array(await this.wrapper.read())}this.tensorManager.releaseTensor(this.wrapper)}let o=typeof MLTensorUsage>"u"?void 0:MLTensorUsage.READ|MLTensorUsage.WRITE;return this.wrapper=await this.tensorManager.getCachedTensor(e,s,n,o,!0,!0,a),r&&this.activeUpload&&(this.wrapper.write(this.activeUpload),this.activeUpload=void 0),this.wrapper.tensor}upload(e){let t=e;if(this.wrapper){if(this.wrapper.shouldConvertInt64toInt32&&(t=Wt(e,!0),this.wrapper.setIsInt64ToInt32Converted(!0)),t.byteLength===this.wrapper.byteLength)return void this.wrapper.write(t);Bt("verbose",()=>"Data size does not match tensor size. Releasing tensor."),this.releaseTensor()}this.activeUpload?this.activeUpload.set(t):this.activeUpload=new Uint8Array(t)}async download(e){if(this.activeUpload){let t=this.wrapper?.isInt64ToInt32Converted?Ht(this.activeUpload):this.activeUpload;return e?void(e instanceof ArrayBuffer?new Uint8Array(e).set(t):new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(t)):t.buffer}if(!this.wrapper)throw new Error("Tensor has not been created.");return e?this.wrapper.read(this.wrapper?.shouldConvertInt64toInt32,e):this.wrapper.read(this.wrapper?.shouldConvertInt64toInt32)}},en=class{constructor(e){this.backend=e,this.tensorTrackersById=new Map,this.freeTensors=[],this.externalTensors=new Set}getMLContext(e){let t=this.backend.getMLContext(e);if(!t)throw new Error("MLContext not found for session.");return t}reserveTensorId(){let e=Qt();return this.tensorTrackersById.set(e,new Zt(this)),e}releaseTensorId(e){let t=this.tensorTrackersById.get(e);t&&(this.tensorTrackersById.delete(e),t.tensorWrapper&&this.releaseTensor(t.tensorWrapper))}async ensureTensor(e,t,n,r,s){Bt("verbose",()=>`[WebNN] TensorManager.ensureTensor {tensorId: ${t}, dataType: ${n}, shape: ${r}, copyOld: ${s}}`);let i=this.tensorTrackersById.get(t);if(!i)throw new Error("Tensor not found.");return i.ensureTensor(e,n,r,s)}upload(e,t){let n=this.tensorTrackersById.get(e);if(!n)throw new Error("Tensor not found.");n.upload(t)}async download(e,t){Bt("verbose",()=>`[WebNN] TensorManager.download {tensorId: ${e}, dstBuffer: ${t?.byteLength}}`);let n=this.tensorTrackersById.get(e);if(!n)throw new Error("Tensor not found.");return n.download(t)}releaseTensorsForSession(e){for(let t of this.freeTensors)t.sessionId===e&&t.destroy();this.freeTensors=this.freeTensors.filter(t=>t.sessionId!==e)}registerTensor(e,t,n,r){let s=this.getMLContext(e),i=Qt(),a=new Yt({sessionId:e,context:s,tensor:t,dataType:n,shape:r});return this.tensorTrackersById.set(i,new Zt(this,a)),this.externalTensors.add(a),i}async getCachedTensor(e,t,n,r,s,i,a=!1){let o=this.getMLContext(e);for(let[r,s]of this.freeTensors.entries())if(s.canReuseTensor(o,t,n)){Bt("verbose",()=>`[WebNN] Reusing tensor {dataType: ${t}, shape: ${n}}`);let s=this.freeTensors.splice(r,1)[0];return s.sessionId=e,s}Bt("verbose",()=>`[WebNN] MLContext.createTensor {dataType: ${t}, shape: ${n}}`);let l=await o.createTensor({dataType:t,shape:n,dimensions:n,usage:r,writable:s,readable:i});return new Yt({sessionId:e,context:o,tensor:l,dataType:t,shape:n,shouldConvertInt64toInt32:a})}releaseTensor(e){this.externalTensors.has(e)&&this.externalTensors.delete(e),this.freeTensors.push(e)}},tn=(...e)=>new en(...e)}),Du=ue(()=>{Iu(),Cu(),Lu(),Bu(),zu(),nn=new Map([[1,"float32"],[10,"float16"],[6,"int32"],[12,"uint32"],[7,"int64"],[13,"uint64"],[22,"int4"],[21,"uint4"],[3,"int8"],[2,"uint8"],[9,"uint8"]]),rn=(e,t)=>{if(e===t)return!0;if(void 0===e||void 0===t)return!1;let n=Object.keys(e).sort(),r=Object.keys(t).sort();return n.length===r.length&&n.every((n,s)=>n===r[s]&&e[n]===t[n])},sn=class{constructor(e){this.tensorManager=tn(this),this.mlContextBySessionId=new Map,this.sessionIdsByMLContext=new Map,this.mlContextCache=[],this.sessionGraphInputs=new Map,this.temporaryGraphInputs=[],this.temporarySessionTensorIds=new Map,Ot(e.logLevel,!!e.debug)}get currentSessionId(){if(void 0===this.activeSessionId)throw new Error("No active session");return this.activeSessionId}onRunStart(e){Bt("verbose",()=>`[WebNN] onRunStart {sessionId: ${e}}`),this.activeSessionId=e}onRunEnd(e){Bt("verbose",()=>`[WebNN] onRunEnd {sessionId: ${e}}`);let t=this.temporarySessionTensorIds.get(e);if(t){for(let e of t)Bt("verbose",()=>`[WebNN] releasing temporary tensor {tensorId: ${e}}`),this.tensorManager.releaseTensorId(e);this.temporarySessionTensorIds.delete(e),this.activeSessionId=void 0}}async createMLContext(e){if(e instanceof GPUDevice){let t=this.mlContextCache.findIndex(t=>t.gpuDevice===e);if(-1!==t)return this.mlContextCache[t].mlContext;{let t=await navigator.ml.createContext(e);return this.mlContextCache.push({gpuDevice:e,mlContext:t}),t}}if(void 0===e){let e=this.mlContextCache.findIndex(e=>void 0===e.options&&void 0===e.gpuDevice);if(-1!==e)return this.mlContextCache[e].mlContext;{let e=await navigator.ml.createContext();return this.mlContextCache.push({mlContext:e}),e}}let t=this.mlContextCache.findIndex(t=>rn(t.options,e));if(-1!==t)return this.mlContextCache[t].mlContext;{let t=await navigator.ml.createContext(e);return this.mlContextCache.push({options:e,mlContext:t}),t}}registerMLContext(e,t){this.mlContextBySessionId.set(e,t);let n=this.sessionIdsByMLContext.get(t);n||(n=new Set,this.sessionIdsByMLContext.set(t,n)),n.add(e),this.temporaryGraphInputs.length>0&&(this.sessionGraphInputs.set(e,this.temporaryGraphInputs),this.temporaryGraphInputs=[])}onReleaseSession(e){this.sessionGraphInputs.delete(e);let t=this.mlContextBySessionId.get(e);if(!t)return;this.tensorManager.releaseTensorsForSession(e),this.mlContextBySessionId.delete(e);let n=this.sessionIdsByMLContext.get(t);if(n.delete(e),0===n.size){this.sessionIdsByMLContext.delete(t);let e=this.mlContextCache.findIndex(e=>e.mlContext===t);-1!==e&&this.mlContextCache.splice(e,1)}}getMLContext(e){return this.mlContextBySessionId.get(e)}reserveTensorId(){return this.tensorManager.reserveTensorId()}releaseTensorId(e){Bt("verbose",()=>`[WebNN] releaseTensorId {tensorId: ${e}}`),this.tensorManager.releaseTensorId(e)}async ensureTensor(e,t,n,r,s){let i=nn.get(n);if(!i)throw new Error(`Unsupported ONNX data type: ${n}`);return this.tensorManager.ensureTensor(e??this.currentSessionId,t,i,r,s)}async createTemporaryTensor(e,t,n){Bt("verbose",()=>`[WebNN] createTemporaryTensor {onnxDataType: ${t}, shape: ${n}}`);let r=nn.get(t);if(!r)throw new Error(`Unsupported ONNX data type: ${t}`);let s=this.tensorManager.reserveTensorId();await this.tensorManager.ensureTensor(e,s,r,n,!1);let i=this.temporarySessionTensorIds.get(e);return i?i.push(s):this.temporarySessionTensorIds.set(e,[s]),s}uploadTensor(e,t){if(!dt().shouldTransferToMLTensor)throw new Error("Trying to upload to a MLTensor while shouldTransferToMLTensor is false");Bt("verbose",()=>`[WebNN] uploadTensor {tensorId: ${e}, data: ${t.byteLength}}`),this.tensorManager.upload(e,t)}async downloadTensor(e,t){return this.tensorManager.download(e,t)}createMLTensorDownloader(e,t){return async()=>{let n=await this.tensorManager.download(e);return qt(n,t)}}registerMLTensor(e,t,n,r){let s=nn.get(n);if(!s)throw new Error(`Unsupported ONNX data type: ${n}`);let i=this.tensorManager.registerTensor(e,t,s,r);return Bt("verbose",()=>`[WebNN] registerMLTensor {tensor: ${t}, dataType: ${s}, dimensions: ${r}} -> {tensorId: ${i}}`),i}registerMLConstant(e,t,n,r,s,i,a=!1){if(!i)throw new Error("External mounted files are not available.");let o=e;e.startsWith("./")&&(o=e.substring(2));let l=i.get(o);if(!l)throw new Error(`File with name ${o} not found in preloaded files.`);if(t+n>l.byteLength)throw new Error("Out of bounds: data offset and length exceed the external file data size.");let u,c=l.slice(t,t+n).buffer;switch(s.dataType){case"float32":u=new Float32Array(c);break;case"float16":u=typeof Float16Array<"u"&&Float16Array.from?new Float16Array(c):new Uint16Array(c);break;case"int32":u=new Int32Array(c);break;case"uint32":u=new Uint32Array(c);break;case"int64":a?(u=Wt(new Uint8Array(c),!1),s.dataType="int32"):u=new BigInt64Array(c);break;case"uint64":u=new BigUint64Array(c);break;case"int8":u=new Int8Array(c);break;case"int4":case"uint4":case"uint8":u=new Uint8Array(c);break;default:throw new Error(`Unsupported data type: ${s.dataType} in creating WebNN Constant from external data.`)}return Bt("verbose",()=>`[WebNN] registerMLConstant {dataType: ${s.dataType}, shape: ${s.shape}}} ${a?"(Note: it was int64 data type and registered to int32 as workaround)":""}`),r.constant(s,u)}registerGraphInput(e){this.temporaryGraphInputs.push(e)}isGraphInput(e,t){let n=this.sessionGraphInputs.get(e);return!!n&&n.includes(t)}isInt64Supported(e){return!!this.mlContextBySessionId.get(e)?.opSupportLimits().input.dataTypes.includes("int64")}flush(){}}}),Nu=ue(()=>{}),ju=ue(()=>{zu(),Nu(),an=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[12582912,10],[16777216,10],[26214400,15],[33554432,22],[44236800,2],[58982400,6],[67108864,6],[134217728,6],[167772160,6]]),on=[],ln=e=>16*Math.ceil(Number(e)/16),un=e=>{for(let t=0;t<on.length;t++){let n=on[t];if(e<=n)return n}return 16*Math.ceil(e/16)},cn=1,dn=()=>cn++,pn=async(e,t,n,r)=>{let s=ln(n),i=e.device.createBuffer({size:s,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let a=e.getCommandEncoder();e.endComputePass(),a.copyBufferToBuffer(t,0,i,0,s),e.flush(),await i.mapAsync(GPUMapMode.READ);let o=i.getMappedRange();if(r){let e=r();return e.set(new Uint8Array(o,0,n)),e}return new Uint8Array(o.slice(0,n))}finally{i.destroy()}},hn=class{constructor(e){this.backend=e,this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersPending=[],this.capturedPendingBuffers=new Map;for(let[e]of an)on.push(e),this.freeBuffers.set(e,[]),this.freeUniformBuffers.set(e,[]);this.sessionCount=0}upload(e,t){let n=t.buffer,r=t.byteOffset,s=t.byteLength,i=ln(s),a=this.storageCache.get(e);if(!a)throw new Error("gpu data for uploading does not exist");if(Number(a.originalSize)!==s)throw new Error(`inconsistent data size. gpu data size=${a.originalSize}, data size=${s}`);let o=this.backend.device.createBuffer({mappedAtCreation:!0,size:i,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),l=o.getMappedRange();new Uint8Array(l).set(new Uint8Array(n,r,s)),o.unmap();let u=this.backend.device.createCommandEncoder();u.copyBufferToBuffer(o,0,a.gpuData.buffer,0,i),this.backend.device.queue.submit([u.finish()]),o.destroy(),Bt("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${e})`)}memcpy(e,t){let n=this.storageCache.get(e);if(!n)throw new Error("source gpu data for memcpy does not exist");let r=this.storageCache.get(t);if(!r)throw new Error("destination gpu data for memcpy does not exist");if(n.originalSize!==r.originalSize)throw new Error("inconsistent source and destination gpu data size");let s=ln(n.originalSize),i=this.backend.getCommandEncoder();this.backend.endComputePass(),i.copyBufferToBuffer(n.gpuData.buffer,0,r.gpuData.buffer,0,s)}registerExternalBuffer(e,t,n){let r;if(n){if(r=n[0],e===n[1])return Bt("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${r}, buffer is the same, skip.`),r;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error("Registering a different external buffer under graph capture mode is not supported yet.\n             Please use the previous external buffer!")}else r=dn();return this.storageCache.set(r,{gpuData:{id:r,type:0,buffer:e},originalSize:t}),Bt("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${r}, registered.`),r}unregisterExternalBuffer(e){void 0!==e&&(this.storageCache.delete(e),Bt("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${e}`))}create(e,t=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let n,r=un(e),s=(t&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,i=(t&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(s||i){let e=(s?this.freeBuffers:this.freeUniformBuffers).get(r);n=e&&e.length>0?e.pop():this.backend.device.createBuffer({size:r,usage:t})}else n=this.backend.device.createBuffer({size:r,usage:t});let a={id:dn(),type:0,buffer:n};return this.storageCache.set(a.id,{gpuData:a,originalSize:Number(e)}),Bt("verbose",()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${a.id}`),a}get(e){return this.storageCache.get(e)?.gpuData}release(e){let t="bigint"==typeof e?Number(e):e,n=this.storageCache.get(t);if(!n){if(0===this.storageCache.size)return 0;throw new Error("releasing data does not exist")}return Bt("verbose",()=>`[WebGPU] GpuDataManager.release(id=${t}), gpuDataId=${n.gpuData.id}`),this.storageCache.delete(t),this.buffersPending.push(n.gpuData.buffer),n.originalSize}async download(e,t){let n=this.storageCache.get(Number(e));if(!n)throw new Error("data does not exist");await pn(this.backend,n.gpuData.buffer,n.originalSize,t)}refreshPendingBuffers(){if(0!==this.buffersPending.length)if("default"===this.backend.sessionStatus){for(let e of this.buffersPending){let t=an.get(e.size);if((e.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let n=this.freeBuffers.get(e.size)||[];void 0===t||n.length>=t?e.destroy():n.push(e)}else if((e.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let n=this.freeUniformBuffers.get(e.size)||[];void 0===t||n.length>=t?e.destroy():n.push(e)}else e.destroy()}this.buffersPending=[]}else{let e=this.capturedPendingBuffers.get(this.backend.currentSessionId);e||(e=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,e));for(let t of this.buffersPending)e.push(t);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(e=>{e.forEach(e=>{e.destroy()})}),this.freeUniformBuffers.forEach(e=>{e.forEach(e=>{e.destroy()})}),this.storageCache.forEach(e=>{e.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(e=>{e.forEach(e=>{e.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onCreateSession(){this.sessionCount+=1}onReleaseSession(e){let t=this.capturedPendingBuffers.get(e);t&&(t.forEach(e=>{e.destroy()}),this.capturedPendingBuffers.delete(e)),this.sessionCount-=1,0===this.sessionCount&&(Bt("warning",()=>"[WebGPU] Clearing webgpu buffer cache"),this.storageCache.forEach(e=>{e.gpuData.buffer.destroy()}),this.storageCache=new Map)}},mn=(...e)=>new hn(...e)}),Ru=ue(()=>{fn=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(";")),this.key}},_n=e=>new fn(e)}),Vu=ue(()=>{Iu(),Ou(),gn=64,wn=(e,t)=>{if(3===t)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(Number(e)){case 10:return t>1?`vec${t}<f16>`:"f16";case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(4!==t)throw new Error("bool must be vec4");return["u32","vec4<bool>"];case 22:return"i32";case 21:return"u32";default:throw new Error(`Unknown data type: ${e}`)}},yn=(e,t=1)=>{let n=wn(e,t);return"string"==typeof n?n:n[0]},bn=(e,t=1)=>{let n=wn(e,t);return"string"==typeof n?n:n[1]},xn=(...e)=>{let t=[];return e.forEach(e=>{0!==e.length&&t.push({type:12,data:e},{type:12,data:jt.computeStrides(e)})}),t},vn=e=>e%4==0?4:e%2==0?2:1,Mn=(e="f32",t,n="0")=>t&&1!==t?`vec${t}<${e}>(${n})`:`${e}(${n})`,kn=(e,t,n)=>"f32"===e?n:1===t?`f32(${n})`:`vec${t}<f32>(${n})`,Tn=(e,t)=>4===t?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:2===t?`(${e}.x + ${e}.y)`:3===t?`(${e}.x + ${e}.y + ${e}.z)`:e,$n=(e,t,n,r)=>e.startsWith("uniforms.")&&n>4?"string"==typeof t?"f16"===r?`${e}[(${t}) / 8][(${t}) % 8 / 4][(${t}) % 8 % 4]`:`${e}[(${t}) / 4][(${t}) % 4]`:"f16"===r?`${e}[${Math.floor(t/8)}][${Math.floor(t%8/4)}][${t%8%4}]`:`${e}[${Math.floor(t/4)}][${t%4}]`:n>1?`${e}[${t}]`:e,Sn=(e,t,n,r,s)=>{let i="number"==typeof n,a=i?n:n.length,o=[...new Array(a).keys()],l=a<2?"u32":a<=4?`vec${a}<u32>`:`array<u32, ${a}>`,u=wn(t,s),c="string"==typeof u?u:u[1],d="string"==typeof u?u:u[0],p={indices:l,value:c,storage:d,tensor:t},h=e=>"string"==typeof e?e:`${e}u`,m={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},f=i?"uniforms.":"",_=`${f}${e}_shape`,g=`${f}${e}_strides`,w="";for(let e=0;e<a-1;e++)w+=`\n    let dim${e} = current / ${$n(g,e,a)};\n    let rest${e} = current % ${$n(g,e,a)};\n    indices[${e}] = dim${e};\n    current = rest${e};\n    `;w+=`indices[${a-1}] = current;`;let y=a<2?"":`\n  fn o2i_${e}(offset: u32) -> ${p.indices} {\n    var indices: ${p.indices};\n    var current = offset;\n    ${w}\n    return indices;\n  }`,b=[];if(a>=2)for(let e=a-1;e>=0;e--)b.push(`${$n(g,e,a)} * (indices[${e}])`);let x=a<2?"":`\n  fn i2o_${e}(indices: ${p.indices}) -> u32 {\n    return ${b.join("+")};\n  }`,v=(...e)=>0===a?"0u":`${p.indices}(${e.map(h).join(",")})`,M=(e,t)=>a<2?`${e}`:`${$n(e,t,a)}`,k={},T=(t,n)=>(()=>{if(p.storage===p.value)return`${e}[${t}]=${n};`;if("vec2<u32>"===p.storage&&"i32"===p.value)return`${e}[${t}]=vec2<u32>(u32(${n}), select(0u, 0xFFFFFFFFu, ${n} < 0));`;if("vec2<u32>"===p.storage&&"u32"===p.value)return`${e}[${t}]=vec2<u32>(u32(${n}), 0u);`;if("u32"===p.storage&&"vec4<bool>"===p.value)return`${e}[${t}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${n}));`;throw new Error(`not supported combination of storage type ${p.storage} and value type ${p.value} yet`)})(),$=t=>(()=>{if(p.storage===p.value)return`${e}[${t}]`;if("vec2<u32>"===p.storage&&"i32"===p.value)return`i32(${e}[${t}].x)`;if("vec2<u32>"===p.storage&&"u32"===p.value)return`u32(${e}[${t}].x)`;if("u32"===p.storage&&"vec4<bool>"===p.value)return`vec4<bool>(bool(${e}[${t}] & 0xFFu), bool(${e}[${t}] & 0xFF00u), bool(${e}[${t}] & 0xFF0000u), bool(${e}[${t}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${p.storage} and value type ${p.value} yet`)})(),S=a<2?"":`\n  fn get_${e}ByIndices(indices: ${p.indices}) -> ${c} {\n    return ${$(`i2o_${e}(indices)`)};\n  }`,C=a<2?"":(()=>{let t=o.map(e=>`d${e}: u32`).join(", "),n=o.map(e=>`d${e}`).join(", ");return`\n  fn get_${e}(${t}) -> ${c} {\n    return get_${e}ByIndices(${v(n)});\n  }`})(),E=a<2?"":`\n  fn set_${e}ByIndices(indices: ${p.indices}, value: ${c}) {\n    ${T(`i2o_${e}(indices)`,"value")}\n  }`,P=a<2?"":(()=>{let t=o.map(e=>`d${e}: u32`).join(", "),n=o.map(e=>`d${e}`).join(", ");return`\n  fn set_${e}(${t}, value: ${c}) {\n    set_${e}ByIndices(${v(n)}, value);\n  }`})();return{impl:()=>{let e=[],t=!1;return m.offsetToIndices&&(e.push(y),t=!0),m.indicesToOffset&&(e.push(x),t=!0),m.broadcastedIndicesToOffset&&(Object.values(k).forEach(t=>e.push(t)),t=!0),m.set&&(e.push(P),t=!0),m.setByIndices&&(e.push(E),t=!0),m.get&&(e.push(C),t=!0),m.getByIndices&&(e.push(S),t=!0),!i&&t&&e.unshift(`const ${_} = ${p.indices}(${n.join(",")});`,`const ${g} = ${p.indices}(${jt.computeStrides(n).join(",")});`),e.join("\n")},type:p,offsetToIndices:t=>(m.offsetToIndices=!0,a<2?t:`o2i_${e}(${t})`),indicesToOffset:t=>(m.indicesToOffset=!0,a<2?t:`i2o_${e}(${t})`),broadcastedIndicesToOffset:(t,n)=>{m.broadcastedIndicesToOffset=!0;let r=`${n.name}broadcastedIndicesTo${e}Offset`;if(r in k)return`${r}(${t})`;let s=[];for(let e=a-1;e>=0;e--){let t=n.indicesGet("outputIndices",e+n.rank-a);s.push(`${M(g,e)} * (${t} % ${M(_,e)})`)}return k[r]=`fn ${r}(outputIndices: ${n.type.indices}) -> u32 {\n             return ${s.length>0?s.join("+"):"0u"};\n           }`,`${r}(${t})`},indices:v,indicesGet:M,indicesSet:(e,t,n)=>a<2?`${e}=${n};`:`${$n(e,t,a)}=${n};`,set:(...t)=>{if(t.length!==a+1)throw new Error(`indices length must be ${a}`);let n=t[a];if("string"!=typeof n)throw new Error("value must be string");let r=t.slice(0,a).map(h).join(",");return 0===a?T("0u",n):1===a?T(r[0],n):(m.set=!0,m.setByIndices=!0,m.indicesToOffset=!0,`set_${e}(${r}, ${n})`)},setByOffset:T,setByIndices:(t,n)=>a<2?T(t,n):(m.setByIndices=!0,m.indicesToOffset=!0,`set_${e}ByIndices(${t}, ${n});`),get:(...t)=>{if(t.length!==a)throw new Error(`indices length must be ${a}`);let n=t.map(h).join(",");return 0===a?$("0u"):1===a?$(n[0]):(m.get=!0,m.getByIndices=!0,m.indicesToOffset=!0,`get_${e}(${n})`)},getByOffset:$,getByIndices:t=>a<2?$(t):(m.getByIndices=!0,m.indicesToOffset=!0,`get_${e}ByIndices(${t})`),usage:r,name:e,strides:g,shape:_,rank:a}},Cn=(e,t,n,r=1)=>Sn(e,t,n,"input",r),En=(e,t,n,r=1)=>Sn(e,t,n,"output",r),Pn=(e,t,n)=>Sn(e,t,n,"atomicOutput",1),An=(e,t,n,r=1)=>Sn(e,t,n,"internal",r),In=class{constructor(e,t){this.normalizedDispatchGroup=e,this.limits=t,this.internalVariables=[],this.variables=[],this.uniforms=[],this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${"number"==typeof e?`${e}u`:e}) { return; }`}mainStart(e=gn){let t="number"==typeof e?e:e[0],n="number"==typeof e?1:e[1],r="number"==typeof e?1:e[2];if(t>this.limits.maxComputeWorkgroupSizeX||n>this.limits.maxComputeWorkgroupSizeY||r>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${t}, ${n}, ${r}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(t*n*r>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${t}, ${n}, ${r}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let s=1===this.normalizedDispatchGroup[1]&&1===this.normalizedDispatchGroup[2];return`@compute @workgroup_size(${t}, ${n}, ${r})\n  fn main(${s?"@builtin(global_invocation_id) global_id : vec3<u32>,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(local_invocation_index) local_idx : u32,\n    @builtin(local_invocation_id) local_id : vec3<u32>":"@builtin(global_invocation_id) global_id : vec3<u32>,\n                                             @builtin(local_invocation_id) local_id : vec3<u32>,\n    @builtin(local_invocation_index) local_idx : u32,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(num_workgroups) num_workgroups : vec3<u32>"}) {\n    ${s?"let global_idx = global_id.x;\n         let workgroup_index = workgroup_id.x;":`let workgroup_index = workgroup_id.z * num_workgroups[0] * num_workgroups[1] +\n             workgroup_id.y * num_workgroups[0] + workgroup_id.x;\n         let global_idx = workgroup_index * ${t*n*r}u + local_idx;`}\n  `}appendVariableUniforms(e){0!==e.rank&&(e.shape.startsWith("uniforms.")&&this.uniforms.push({name:e.shape.replace("uniforms.",""),type:"u32",length:e.rank}),e.strides.startsWith("uniforms.")&&this.uniforms.push({name:e.strides.replace("uniforms.",""),type:"u32",length:e.rank}))}declareVariable(e,t){if("internal"===e.usage)throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(e),this.appendVariableUniforms(e);let n="input"===e.usage?"read":"read_write",r="atomicOutput"===e.usage?"atomic<i32>":e.type.storage;return`@group(0) @binding(${t}) var<storage, ${n}> ${e.name}: array<${r}>;`}declareVariables(...e){return e.map(e=>this.declareVariable(e,this.variableIndex++)).join("\n")}registerInternalVariable(e){if("internal"!==e.usage)throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(e),this.appendVariableUniforms(e)}registerInternalVariables(...e){return e.forEach(e=>this.registerInternalVariable(e)),this}registerUniform(e,t,n=1){return this.uniforms.push({name:e,type:t,length:n}),this}registerUniforms(e){return this.uniforms=this.uniforms.concat(e),this}uniformDeclaration(){if(0===this.uniforms.length)return"";let e=[];for(let{name:t,type:n,length:r}of this.uniforms)if(r&&r>4)"f16"===n?e.push(`@align(16) ${t}:array<mat2x4<${n}>, ${Math.ceil(r/8)}>`):e.push(`${t}:array<vec4<${n}>, ${Math.ceil(r/4)}>`);else{let s=null==r||1===r?n:`vec${r}<${n}>`;e.push(`${t}:${s}`)}return`\n      struct Uniforms { ${e.join(", ")} };\n      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(e=>e.impl()).join("\n")+this.internalVariables.map(e=>e.impl()).join("\n")}get variablesInfo(){if(0===this.uniforms.length)return;let e=e=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(e)];return this.uniforms.map(t=>[e(t.type),t.length??1])}},Fn=(e,t)=>new In(e,t)}),Gu=ue(()=>{Iu(),Ou(),Ru(),Vu(),zn=(e,t)=>{if(!e||1!==e.length)throw new Error("Transpose requires 1 input.");if(0!==t.length&&t.length!==e[0].dims.length)throw new Error(`perm size ${t.length} does not match input rank ${e[0].dims.length}`)},On=(e,t)=>0!==t.length?t:[...new Array(e).keys()].reverse(),Ln=(e,t)=>jt.sortBasedOnPerm(e,On(e.length,t)),Bn=(e,t,n,r)=>{let s=`fn perm(i: ${r.type.indices}) -> ${n.type.indices} {\n    var a: ${n.type.indices};`;for(let n=0;n<t;++n)s+=`a[${e[n]}]=i[${n}];`;return s+"return a;}"},Dn=(e,t)=>{let n=[],r=[];for(let s=0;s<e.length;++s)1!==e[s]&&n.push(e[s]),1!==e[t[s]]&&r.push(t[s]);return{newShape:n,newPerm:r}},Nn=(e,t)=>{let n=0;for(let r=0;r<e.length;++r)if(1!==t[e[r]]){if(e[r]<n)return!1;n=e[r]}return!0},jn=(e,t)=>{let n,r=e.dataType,s=e.dims.length,i=On(s,t),a=Ln(e.dims,i),o=e.dims,l=a;if(s<2||Nn(i,e.dims))return n=e=>{let t=Cn("input",r,o,4),n=En("output",r,l,4);return`\n  ${e.registerUniform("output_size","u32").declareVariables(t,n)}\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    output[global_idx] = input[global_idx];\n  }`},{name:"TransposeCopy",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let t=jt.size(a);return{outputs:[{dims:a,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(t/64/4)},programUniforms:[{type:12,data:Math.ceil(t/4)}]}},getShaderSource:n};let{newShape:u,newPerm:c}=Dn(e.dims,i),d=jt.areEqual(c,[2,3,1]),p=jt.areEqual(c,[3,1,2]);if(2===u.length||d||p){o=d?[u[0],u[1]*u[2]]:p?[u[0]*u[1],u[2]]:u,l=[o[1],o[0]];let t=16;return n=e=>{let n=Cn("a",r,o.length),s=En("output",r,l.length);return`\n  ${e.registerUniform("output_size","u32").declareVariables(n,s)}\n  var<workgroup> tile : array<array<${s.type.value}, ${t+1}>, ${t}>;\n  ${e.mainStart([t,t,1])}\n    let stride = (uniforms.output_shape[1] - 1) / ${t} + 1;\n    let workgroup_id_x = workgroup_index % stride;\n    let workgroup_id_y = workgroup_index / stride;\n    let input_col = workgroup_id_y * ${t}u + local_id.x;\n    let input_row = workgroup_id_x * ${t}u + local_id.y;\n    if (input_row < uniforms.a_shape[0] && input_col < uniforms.a_shape[1]) {\n      tile[local_id.y][local_id.x] = ${n.getByIndices(`${n.type.indices}(input_row, input_col)`)};\n    }\n    workgroupBarrier();\n\n    let output_col = workgroup_id_x * ${t}u + local_id.x;\n    let output_row = workgroup_id_y * ${t}u + local_id.y;\n    if (output_row < uniforms.output_shape[0] && output_col < uniforms.output_shape[1]) {\n      ${s.setByIndices(`${s.type.indices}(output_row, output_col)`,"tile[local_id.x][local_id.y]")}\n    }\n  }`},{name:"TransposeShared",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let n=jt.size(a);return{outputs:[{dims:a,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(l[1]/t),y:Math.ceil(l[0]/t)},programUniforms:[{type:12,data:n},...xn(o,l)]}},getShaderSource:n}}return n=e=>{let t=Cn("a",r,o.length),n=En("output",r,l.length);return`\n  ${e.registerUniform("output_size","u32").declareVariables(t,n)}\n\n  ${Bn(i,s,t,n)}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let indices = ${n.offsetToIndices("global_idx")};\n    let aIndices = perm(indices);\n\n    ${n.setByOffset("global_idx",t.getByIndices("aIndices"))}\n  }`},{name:"Transpose",shaderCache:{hint:`${t}`,inputDependencies:["rank"]},getRunData:()=>{let t=jt.size(a);return{outputs:[{dims:a,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(t/64)},programUniforms:[{type:12,data:t},...xn(o,l)]}},getShaderSource:n}},Rn=(e,t)=>{zn(e.inputs,t.perm),e.compute(jn(e.inputs[0],t.perm))},Vn=e=>_n({perm:e.perm})}),Uu=ue(()=>{Iu(),Ou(),Vu(),qu(),Gu(),Gn={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},Un={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},qn={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},Wn={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},Hn=(e,t)=>{let n=[];for(let r=t-e;r<t;++r)n.push(r);return n},Kn=(e,t)=>{let n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map(t=>e[t])]},Qn=(e,t)=>{let n=e.length+t.length,r=[],s=0;for(let i=0;i<n;i++)-1===t.indexOf(i)?r.push(e[s++]):r.push(1);return r},Xn=(e,t)=>{for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0},Jn=(e,t)=>{let n=[];if(!Xn(e,t)){for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);e.forEach(e=>n.push(e))}return n},Yn=(e,t,n,r,s,i,a)=>{let o=n[0].dims,l=jt.size(i),u=jt.size(a),c=Cn("_A",n[0].dataType,o),d=En("output",s,i),p=64;1===l&&(p=256);let h=`\n          var<workgroup> aBestValues : array<f32, ${p}>;\n       `;return{name:e,shaderCache:{hint:`${t};${p}`,inputDependencies:["type"]},getShaderSource:e=>`\n        ${e.registerUniform("reduceSize","u32").declareVariables(c,d)}\n        ${h}\n        fn DIV_CEIL(a : u32, b : u32) -> u32 {\n          return ((a - 1u) / b + 1u);\n         }\n         ${e.mainStart(p)}\n\n          let outputIndex = global_idx / ${p};\n          let offset = outputIndex * uniforms.reduceSize;\n\n          var bestValue = f32(${qn[r]});\n          let Length = uniforms.reduceSize;\n          for (var k = local_idx; k < Length; k = k + ${p}) {\n           let candidate = f32(${c.getByOffset("offset + k")});\n           bestValue = ${Gn[r]};\n          }\n          aBestValues[local_idx] = bestValue;\n          workgroupBarrier();\n\n         var reduceSize = min(Length, ${p}u);\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n             currentSize = reduceSize / 2u) {\n           let interval = DIV_CEIL(reduceSize, 2u);\n           if (local_idx < currentSize) {\n            let candidate = aBestValues[local_idx + interval];\n            bestValue = ${Un[r]};\n            aBestValues[local_idx] = bestValue;\n           }\n           reduceSize = interval;\n           workgroupBarrier();\n         }\n\n         if (local_idx == 0u) {\n          ${d.setByOffset("outputIndex","mean"===r?`${d.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${d.type.storage}(${Wn[r]})`)};\n         }\n        }`,getRunData:()=>({outputs:[{dims:i,dataType:s}],dispatchGroup:{x:l},programUniforms:[{type:12,data:u}]})}},Zn=(e,t,n,r)=>{let s=1===e.inputs.length?n:hr(e.inputs,n),i=s.axes;0===i.length&&!s.noopWithEmptyAxes&&(i=e.inputs[0].dims.map((e,t)=>t));let a=jt.normalizeAxes(i,e.inputs[0].dims.length),o=a,l=e.inputs[0],u=Jn(o,e.inputs[0].dims.length);u.length>0&&(l=e.compute(jn(e.inputs[0],u),{inputs:[0],outputs:[-1]})[0],o=Hn(o.length,l.dims.length));let[c,d]=Kn(l.dims,o),p=c;s.keepDims&&(p=Qn(c,a)),e.compute(Yn(t,s.cacheKey,[l],r,e.inputs[0].dataType,p,d),{inputs:[l]})},er=(e,t)=>{Zn(e,"ReduceMeanShared",t,"mean")},tr=(e,t)=>{Zn(e,"ReduceL1Shared",t,"l1")},nr=(e,t)=>{Zn(e,"ReduceL2Shared",t,"l2")},rr=(e,t)=>{Zn(e,"ReduceLogSumExpShared",t,"logSumExp")},sr=(e,t)=>{Zn(e,"ReduceMaxShared",t,"max")},ir=(e,t)=>{Zn(e,"ReduceMinShared",t,"min")},ar=(e,t)=>{Zn(e,"ReduceProdShared",t,"prod")},or=(e,t)=>{Zn(e,"ReduceSumShared",t,"sum")},lr=(e,t)=>{Zn(e,"ReduceSumSquareShared",t,"sumSquare")},ur=(e,t)=>{Zn(e,"ReduceLogSumShared",t,"logSum")}}),qu=ue(()=>{Iu(),Ou(),Ru(),Vu(),Uu(),cr=e=>{if(!e||0===e.length||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(2===e.length&&1!==e[1].dims.length)throw new Error("Invalid axes input dims.")},dr=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],pr=(e,t,n,r,s,i,a=!1,o=!1)=>{let l=[],u=n[0].dims,c=u.length,d=jt.normalizeAxes(s,c),p=!o&&0===d.length;u.forEach((e,t)=>{p||d.indexOf(t)>=0?a&&l.push(1):l.push(e)});let h=l.length,m=jt.size(l);return{name:e,shaderCache:t,getShaderSource:e=>{let t=[],s=Cn("_A",n[0].dataType,c),o=En("output",i,h),l=r(s,o,d),m=l[2];for(let e=0,n=0;e<c;e++)p||d.indexOf(e)>=0?(a&&n++,m=`for(var j${e}: u32 = 0; j${e} < ${u[e]}; j${e}++) {\n                  ${l[2].includes("last_index")?`let last_index = j${e};`:""}\n                  ${s.indicesSet("input_indices",e,`j${e}`)}\n                  ${m}\n                }`):(t.push(`${s.indicesSet("input_indices",e,o.indicesGet("output_indices",n))};`),n++);return`\n\n        ${e.registerUniform("output_size","u32").declareVariables(s,o)}\n\n        ${e.mainStart()}\n          ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          var input_indices: ${s.type.indices};\n          let output_indices = ${o.offsetToIndices("global_idx")};\n\n          ${t.join("\n")}\n          ${l[0]}       // init ops for reduce max/min\n          ${l[1]}\n          ${m}\n          ${l[3]}\n          ${4===l.length?o.setByOffset("global_idx","value"):l.slice(4).join("\n")}\n        }`},getRunData:()=>({outputs:[{dims:l,dataType:i}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:[{type:12,data:m},...xn(u,l)]})}},hr=(e,t)=>{let n=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(e=>n.push(Number(e))),_n({axes:n,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})},mr=(e,t,n,r)=>{let s=e.inputs,i=1===s.length?n:hr(s,n);e.compute(pr(t,{hint:i.cacheKey,inputDependencies:["rank"]},[s[0]],i.noopWithEmptyAxes&&0===i.axes.length?dr:r,i.axes,s[0].dataType,i.keepDims,i.noopWithEmptyAxes),{inputs:[0]})},fr=(e,t)=>{cr(e.inputs),mr(e,"ReduceLogSum",t,(e,t)=>[`var value = ${t.type.storage}(0);`,"",`value += ${e.getByIndices("input_indices")};`,"value = log(value);"])},_r=(e,t)=>{cr(e.inputs),mr(e,"ReduceL1",t,(e,t)=>[`var value = ${t.type.storage}(0);`,"",`value += abs(${e.getByIndices("input_indices")});`,""])},gr=(e,t)=>{cr(e.inputs),mr(e,"ReduceL2",t,(e,t)=>[`var t = ${t.type.value}(0); var value = ${t.type.value}(0);`,"",`t = ${e.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},wr=(e,t)=>{cr(e.inputs),mr(e,"ReduceLogSumExp",t,(e,t)=>[`var value = ${t.type.storage}(0);`,"",`value += exp(${e.getByIndices("input_indices")});`,"value = log(value);"])},yr=(e,t)=>{cr(e.inputs),mr(e,"ReduceMax",t,(e,t,n)=>{let r=[];for(let t=0;t<e.rank;t++)(n.indexOf(t)>=0||0===n.length)&&r.push(e.indicesSet("input_indices",t,0));return[`${r.join("\n")}`,`var value = ${e.getByIndices("input_indices")};`,`value = max(value, ${e.getByIndices("input_indices")});`,""]})},br=(e,t)=>{cr(e.inputs),mr(e,"ReduceMean",t,(t,n,r)=>{let s=1;for(let n=0;n<t.rank;n++)(r.indexOf(n)>=0||0===r.length)&&(s*=e.inputs[0].dims[n]);return["var sum = f32(0);","",`sum += f32(${t.getByIndices("input_indices")});`,`let value = ${n.type.value}(sum / ${s});`]})},xr=(e,t)=>{cr(e.inputs),mr(e,"ReduceMin",t,(e,t,n)=>{let r=[];for(let t=0;t<e.rank;t++)(n.indexOf(t)>=0||0===n.length)&&r.push(`input_indices[${t}] = 0;`);return[`${r.join("\n")}`,`var value = ${e.getByIndices("input_indices")};`,`value = min(value, ${e.getByIndices("input_indices")});`,""]})},vr=(e,t)=>{cr(e.inputs),mr(e,"ReduceProd",t,(e,t)=>[`var value = ${t.type.storage}(1);`,"",`value *= ${e.getByIndices("input_indices")};`,""])},Mr=(e,t)=>{cr(e.inputs),mr(e,"ReduceSum",t,(e,t)=>[`var value = ${t.type.storage}(0);`,"",`value += ${e.getByIndices("input_indices")};`,""])},kr=(e,t)=>{cr(e.inputs),mr(e,"ReduceSumSquare",t,(e,t)=>[`var t = ${t.type.value}(0); var value = ${t.type.value}(0);`,"",`t = ${e.getByIndices("input_indices")}; value += t * t;`,""])},Tr=(e,t,n)=>{if(0===t.length)return n;let r=1,s=1;for(let n=0;n<t.length;n++)-1===t.indexOf(n)?r*=e[n]:s*=e[n];return s<32&&r>1024},$r=(e,t)=>{Tr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?br(e,t):er(e,t)},Sr=(e,t)=>{Tr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?_r(e,t):tr(e,t)},Cr=(e,t)=>{Tr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?gr(e,t):nr(e,t)},Er=(e,t)=>{Tr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?wr(e,t):rr(e,t)},Pr=(e,t)=>{Tr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?yr(e,t):sr(e,t)},Ar=(e,t)=>{Tr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?xr(e,t):ir(e,t)},Ir=(e,t)=>{Tr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?vr(e,t):ar(e,t)},Fr=(e,t)=>{Tr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Mr(e,t):or(e,t)},zr=(e,t)=>{Tr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?kr(e,t):lr(e,t)},Or=(e,t)=>{Tr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?fr(e,t):ur(e,t)}}),Wu=ue(()=>{Iu(),Ru(),qu(),Lr=e=>{if(!e||0===e.length||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(1!==e[0].dataType)throw new Error("Invalid input type.")},Br=(e,t)=>{Lr(e.inputs),e.compute(pr("ArgMin",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],(e,n,r)=>{let s=[];for(let t=0;t<e.rank;t++)(r.indexOf(t)>=0||0===r.length)&&s.push(`input_indices[${t}] = 0;`);return[`${s.join("\n")}`,`var value = ${e.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${e.getByIndices("input_indices")} ${t.selectLastIndex>0?"<=":"<"} value) {\n         value = ${e.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",n.setByOffset("global_idx","best_index")]},[t.axis],7,t.keepDims),{inputs:[0]})},Dr=(e,t)=>{Lr(e.inputs),e.compute(pr("argMax",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],(e,n,r)=>{let s=[];for(let t=0;t<e.rank;t++)(r.indexOf(t)>=0||0===r.length)&&s.push(`input_indices[${t}] = 0;`);return[`${s.join("\n")}`,`var value = ${e.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${e.getByIndices("input_indices")} ${t.selectLastIndex>0?">=":">"} value) {\n         value = ${e.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",n.setByOffset("global_idx","best_index")]},[t.axis],7,t.keepDims),{inputs:[0]})},Nr=e=>_n(e)}),Hu=ue(()=>{Iu(),Ou(),Nu(),Vu(),jr=(e,t)=>{let n=e[0],r=e[1],s=e[2],i=e[3],a=e[4],o=e[5];if(a&&o)throw new Error("Attention cannot have both past and attention_bias");if(3!==n.dims.length)throw new Error('Input "input" must have 3 dimensions');let l=n.dims[0],u=n.dims[1],c=n.dims[2];if(1!==s.dims.length)throw new Error('Input "bias" is expected to have 1 dimensions');if(2!==r.dims.length)throw new Error('Input "weights" is expected to have 2 dimensions');if(r.dims[0]!==c)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(s.dims[0]!==r.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let d=s.dims[0]/3,p=d,h=p;if(t.qkvHiddenSizes.length>0){if(3!==t.qkvHiddenSizes.length)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let e of t.qkvHiddenSizes)if(e%t.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");d=t.qkvHiddenSizes[0],p=t.qkvHiddenSizes[1],h=t.qkvHiddenSizes[2]}let m=u;if(d!==p)throw new Error("qkv_hidden_sizes first element should be same as the second");if(s.dims[0]!==d+p+h)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let f=0;if(a){if(p!==h)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(5!==a.dims.length)throw new Error('Input "past" must have 5 dimensions');if(2!==a.dims[0])throw new Error('Input "past" first dimension must be 2');if(a.dims[1]!==l)throw new Error('Input "past" second dimension must be batch_size');if(a.dims[2]!==t.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(a.dims[4]!==p/t.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');t.pastPresentShareBuffer||(f=a.dims[3])}let _=m+f;if(i)throw new Error("Mask not supported");if(a)throw new Error("past is not supported");if(o){if(4!==o.dims.length)throw new Error('Input "attention_bias" must have 4 dimensions');if(o.dims[0]!==l||o.dims[1]!==t.numHeads||o.dims[2]!==u||o.dims[3]!==_)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:l,sequenceLength:u,pastSequenceLength:f,kvSequenceLength:m,totalSequenceLength:_,maxSequenceLength:-1,inputHiddenSize:c,hiddenSize:d,vHiddenSize:h,headSize:Math.floor(d/t.numHeads),vHeadSize:Math.floor(h/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:0,scale:t.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},Rr=(e,t,n)=>t&&e?`\n      let total_sequence_length_input = u32(${t.getByOffset("0")});\n      let present_sequence_length = max(total_sequence_length_input, uniforms.past_sequence_length);\n      let is_subsequent_prompt: bool = sequence_length > 1 && sequence_length != total_sequence_length_input;\n      let is_first_prompt: bool = is_subsequent_prompt == false && sequence_length == total_sequence_length_input;\n      total_sequence_length = u32(${e?.getByOffset("batchIdx")}) + 1;\n      var past_sequence_length: u32 = 0;\n      if (is_first_prompt == false) {\n        past_sequence_length = total_sequence_length - sequence_length;\n      }\n       `:`\n    ${n?"let past_sequence_length = uniforms.past_sequence_length":""};\n    let present_sequence_length = total_sequence_length;\n    `,Vr=(e,t,n,r,s,i,a,o)=>{let l=vn(a?1:i),u=64,c=i/l;c<u&&(u=32);let d=Math.ceil(i/l/u),p=[{type:12,data:t},{type:12,data:n},{type:12,data:r},{type:12,data:s},{type:12,data:c},{type:12,data:d}],h=yn(e.dataType,l),m=bn(1,l),f=["type"];return a&&f.push("type"),o&&f.push("type"),{name:"AttentionProbsSoftmax",shaderCache:{hint:`${u};${h};${l}`,inputDependencies:f},getShaderSource:t=>{let n=En("x",e.dataType,e.dims,l),r=[n],s=a?Cn("seq_lens",a.dataType,a.dims):void 0;s&&r.push(s);let i=o?Cn("total_sequence_length_input",o.dataType,o.dims):void 0;i&&r.push(i);let c=bn(e.dataType);return`\n  var<workgroup> thread_max: array<f32, ${u}>;\n  var<workgroup> thread_sum: array<f32, ${u}>;\n  ${t.registerUniforms([{name:"batch_size",type:"u32"},{name:"num_heads",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"sequence_length",type:"u32"},{name:"total_sequence_length",type:"u32"},{name:"elements_per_thread",type:"u32"}]).declareVariables(...r)}\n  ${t.mainStart([u,1,1])}\n    let batchIdx = workgroup_id.z / uniforms.num_heads;\n    let headIdx = workgroup_id.z % uniforms.num_heads;\n    let sequence_length = uniforms.sequence_length;\n    var total_sequence_length = uniforms.total_sequence_length;\n    ${Rr(s,i,!1)}\n    let local_offset = local_idx * uniforms.elements_per_thread;\n    let offset = (global_idx / ${u}) * uniforms.total_sequence_length + local_offset;\n    let seq_causal_length = ${a?"u32(past_sequence_length + workgroup_id.y + 1)":"total_sequence_length"};\n    var thread_max_vector = ${m}(-3.402823e+38f);\n    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {\n      thread_max_vector = max(${m}(x[offset + i]), thread_max_vector);\n    }\n    thread_max[local_idx] = ${(()=>{switch(l){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw new Error(`Unsupported components: ${l}`)}})()};\n    workgroupBarrier();\n\n    var max_value =  f32(-3.402823e+38f);\n    for (var i = 0u; i < ${u}; i++) {\n      max_value = max(thread_max[i], max_value);\n    }\n\n    var sum_vector = ${m}(0);\n    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {\n      sum_vector += exp(${m}(x[offset + i]) - max_value);\n    }\n    thread_sum[local_idx] = ${(()=>{switch(l){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw new Error(`Unsupported components: ${l}`)}})()};\n    workgroupBarrier();\n\n    var sum: f32 = 0;\n    for (var i = 0u; i < ${u}; i++) {\n      sum += thread_sum[i];\n    }\n\n    if (sum == 0) {\n      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {\n        x[offset + i] = ${n.type.value}(${c}(1.0) / ${c}(seq_causal_length));\n      }\n    } else {\n      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {\n        var f32input = ${m}(x[offset + i]);\n        x[offset + i] = ${n.type.value}(exp(f32input - max_value) / sum);\n      }\n    }\n      ${a?`\n        for (var total_seq_id: u32 = seq_causal_length; total_seq_id + local_offset < uniforms.total_sequence_length; total_seq_id++) {\n          x[offset + total_seq_id] = ${n.type.value}(${c}(0));\n        }`:""};\n  }`},getRunData:()=>({outputs:[],dispatchGroup:{x:1,y:s,z:t*n},programUniforms:p})}},Gr=(e,t,n,r,s,i,a,o,l)=>{let u=a+i.kvSequenceLength,c=[i.batchSize,i.numHeads,i.sequenceLength,u],d=e>1&&r,p=i.kvNumHeads?i.kvNumHeads:i.numHeads,h=d?[i.batchSize,p,u,i.headSize]:void 0,m=i.nReps?i.nReps:1,f=0===i.scale?1/Math.sqrt(i.headSize):i.scale,_=vn(i.headSize),g=i.headSize/_,w={x:Math.ceil(u/12),y:Math.ceil(i.sequenceLength/12),z:i.batchSize*i.numHeads},y=[{type:12,data:i.sequenceLength},{type:12,data:g},{type:12,data:u},{type:12,data:i.numHeads},{type:12,data:i.headSize},{type:1,data:f},{type:12,data:a},{type:12,data:i.kvSequenceLength},{type:12,data:m}],b=d&&r&&jt.size(r.dims)>0,x=["type","type"];b&&x.push("type"),s&&x.push("type"),o&&x.push("type"),l&&x.push("type");let v=[{dims:c,dataType:t.dataType,gpuDataType:0}];return d&&v.push({dims:h,dataType:t.dataType,gpuDataType:0}),{name:"AttentionProbs",shaderCache:{hint:`${_};${void 0!==s};${void 0!==r};${e}`,inputDependencies:x},getRunData:()=>({outputs:v,dispatchGroup:w,programUniforms:y}),getShaderSource:e=>{let i=Cn("q",t.dataType,t.dims,_),a=[i,Cn("key",n.dataType,n.dims,_)];if(b){let e=Cn("past_key",r.dataType,r.dims,_);a.push(e)}s&&a.push(Cn("attention_bias",s.dataType,s.dims));let u=o?Cn("seq_lens",o.dataType,o.dims):void 0;u&&a.push(u);let p=l?Cn("total_sequence_length_input",l.dataType,l.dims):void 0;p&&a.push(p);let f=En("output",t.dataType,c),g=[f];d&&g.push(En("present_key",t.dataType,h,_));let w=bn(1,_);return`\n  const TILE_SIZE = 12u;\n\n  var<workgroup> tileQ: array<${i.type.storage}, 144>;\n  var<workgroup> tileK: array<${i.type.storage}, 144>;\n  ${e.registerUniforms([{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"alpha",type:"f32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}]).declareVariables(...a,...g)}\n  ${e.mainStart([12,12,1])}\n    // x holds the N and y holds the M\n    let headIdx = workgroup_id.z % uniforms.num_heads;\n    let kvHeadIdx = ${1===m?"headIdx":"headIdx / uniforms.n_reps"};\n    let kv_num_heads = ${1===m?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};\n    let batchIdx = workgroup_id.z / uniforms.num_heads;\n    let m = workgroup_id.y * TILE_SIZE;\n    let n = workgroup_id.x * TILE_SIZE;\n    let sequence_length = uniforms.M;\n    var total_sequence_length = uniforms.N;\n    ${Rr(u,p,!0)}\n    let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx;\n    let qOffset = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;\n    ${b&&d?"let pastKeyOffset = absKvHeadIdx * uniforms.past_sequence_length * uniforms.K;":""};\n    let kOffset = absKvHeadIdx * uniforms.kv_sequence_length * uniforms.K;\n    ${d?"let presentKeyOffset = absKvHeadIdx * uniforms.N * uniforms.K;":""}\n    var value = ${w}(0);\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {\n        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {\n        var idx = TILE_SIZE * local_id.y + local_id.x;\n      ${b&&d?"\n              if (n + local_id.y < past_sequence_length) {\n                tileK[idx] = past_key[pastKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x];\n              } else if (n + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {\n                tileK[idx] = key[kOffset + (n + local_id.y - past_sequence_length) * uniforms.K + w + local_id.x];\n              }":"\n          if (n + local_id.y < uniforms.kv_sequence_length) {\n            tileK[idx] = key[kOffset + (n + local_id.y) * uniforms.K + w + local_id.x];\n          }"}\n      ${d?"if (n + local_id.y < present_sequence_length) {\n        present_key[presentKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x] = tileK[idx];\n      }":""}\n      }\n      workgroupBarrier();\n\n      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {\n          value += ${w}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);\n      }\n\n      workgroupBarrier();\n    }\n\n    if (global_id.y < uniforms.M && global_id.x < total_sequence_length) {\n      let headOffset = workgroup_id.z * uniforms.M * uniforms.N;\n      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;\n      var sum: f32 = ${(()=>{switch(_){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw new Error(`Unsupported components: ${_}`)}})()};\n        output[outputIdx] = ${f.type.value} (sum * uniforms.alpha) + ${s?"attention_bias[outputIdx]":"0.0"};\n    }\n  }`}}},Ur=(e,t,n,r,s,i,a=void 0,o=void 0)=>{let l=i+s.kvSequenceLength,u=s.nReps?s.nReps:1,c=s.vHiddenSize*u,d=e>1&&r,p=s.kvNumHeads?s.kvNumHeads:s.numHeads,h=d?[s.batchSize,p,l,s.headSize]:void 0,m=[s.batchSize,s.sequenceLength,c],f={x:Math.ceil(s.vHeadSize/12),y:Math.ceil(s.sequenceLength/12),z:s.batchSize*s.numHeads},_=[{type:12,data:s.sequenceLength},{type:12,data:l},{type:12,data:s.vHeadSize},{type:12,data:s.numHeads},{type:12,data:s.headSize},{type:12,data:c},{type:12,data:i},{type:12,data:s.kvSequenceLength},{type:12,data:u}],g=d&&r&&jt.size(r.dims)>0,w=["type","type"];g&&w.push("type"),a&&w.push("type"),o&&w.push("type");let y=[{dims:m,dataType:t.dataType,gpuDataType:0}];return d&&y.push({dims:h,dataType:t.dataType,gpuDataType:0}),{name:"AttentionScore",shaderCache:{hint:`${void 0!==r};${e}`,inputDependencies:w},getRunData:()=>({outputs:y,dispatchGroup:f,programUniforms:_}),getShaderSource:e=>{let s=Cn("probs",t.dataType,t.dims),i=[s,Cn("v",n.dataType,n.dims)];g&&i.push(Cn("past_value",r.dataType,r.dims));let l=a?Cn("seq_lens",a.dataType,a.dims):void 0;a&&i.push(l);let c=o?Cn("total_sequence_length_input",o.dataType,o.dims):void 0;o&&i.push(c);let p=[En("output",t.dataType,m)];return d&&p.push(En("present_value",t.dataType,h)),`\n  const TILE_SIZE = 12u;\n  var<workgroup> tileQ: array<${s.type.value}, 144>;\n  var<workgroup> tileV: array<${s.type.value}, 144>;\n  ${e.registerUniforms([{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"v_hidden_size",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}]).declareVariables(...i,...p)}\n  ${e.mainStart([12,12,1])}\n   let headIdx = workgroup_id.z % uniforms.num_heads;\n   let batchIdx = workgroup_id.z / uniforms.num_heads;\n   let kvHeadIdx = ${1===u?"headIdx":"headIdx / uniforms.n_reps"};\n   let kv_num_heads = ${1===u?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};\n   let m = global_id.y;\n   let n = global_id.x;\n   let sequence_length = uniforms.M;\n   var total_sequence_length = uniforms.K;\n   ${Rr(l,c,!0)}\n   let offsetA = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;\n   let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx; // kvHeadIdx is relative to the batch\n   ${g&&d?"let pastValueOffset = absKvHeadIdx * uniforms.N * uniforms.past_sequence_length + n;":""};\n   let vOffset = absKvHeadIdx * uniforms.N * uniforms.kv_sequence_length + n;\n   ${d?"let presentValueOffset = absKvHeadIdx * uniforms.N * uniforms.K + n;":""}\n   var value = ${s.type.storage}(0);\n   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (m < uniforms.M && w + local_id.x < uniforms.K) {\n        tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];\n      }\n      if (n < uniforms.N && w + local_id.y < uniforms.K) {\n        var idx = TILE_SIZE * local_id.y + local_id.x;\n        ${g&&d?"\n        if (w + local_id.y < past_sequence_length) {\n          tileV[idx] = past_value[pastValueOffset + (w + local_id.y) * uniforms.N];\n        } else if (w + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {\n          tileV[idx] = v[vOffset + (w + local_id.y - past_sequence_length) * uniforms.N];\n        }\n      ":"\n            if (w + local_id.y < uniforms.kv_sequence_length) {\n              tileV[idx] = v[vOffset + (w + local_id.y) * uniforms.N];\n            }"}\n        ${d?"\n            if (w + local_id.y < present_sequence_length) {\n          present_value[presentValueOffset + (w + local_id.y) * uniforms.N] = tileV[idx];\n        }":""}\n      }\n     workgroupBarrier();\n     for (var k: u32 = 0u; k < TILE_SIZE && w+k < total_sequence_length; k++) {\n       value += tileQ[TILE_SIZE * local_id.y + k] * tileV[TILE_SIZE * k + local_id.x];\n     }\n     workgroupBarrier();\n   }\n\n   // we need to transpose output from BNSH_v to BSND_v\n   if (m < uniforms.M && n < uniforms.N) {\n     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size\n       + headIdx * uniforms.N + n;\n     output[outputIdx] = value;\n   }\n  }`}}},qr=(e,t,n,r,s,i,a,o,l,u,c=void 0,d=void 0)=>{let p=Math.min(e.outputCount,1+(a?1:0)+(o?1:0)),h=p>1?u.pastSequenceLength:0,m=h+u.kvSequenceLength,f=l&&jt.size(l.dims)>0?l:void 0,_=[t,n];p>1&&a&&jt.size(a.dims)>0&&_.push(a),f&&_.push(f),c&&_.push(c),d&&_.push(d);let g=e.compute(Gr(p,t,n,a,f,u,h,c,d),{inputs:_,outputs:p>1?[-1,1]:[-1]})[0];e.compute(Vr(g,u.batchSize,u.numHeads,h,u.sequenceLength,m,c,d),{inputs:c&&d?[g,c,d]:[g],outputs:[]});let w=[g,r];p>1&&o&&jt.size(o.dims)>0&&w.push(o),c&&w.push(c),d&&w.push(d),e.compute(Ur(p,g,r,o,u,h,c,d),{inputs:w,outputs:p>1?[0,2]:[0]})},Wr=(e,t)=>{let n=[t.batchSize,t.numHeads,t.sequenceLength,t.headSize],r=t.sequenceLength,s=t.inputHiddenSize,i=t.headSize,a={x:Math.ceil(t.headSize/12),y:Math.ceil(t.sequenceLength/12),z:t.batchSize*t.numHeads},o=[e.inputs[0],e.inputs[1],e.inputs[2]],l=[{type:12,data:r},{type:12,data:s},{type:12,data:i},{type:12,data:t.numHeads},{type:12,data:t.headSize},{type:12,data:t.hiddenSize},{type:12,data:t.hiddenSize+t.hiddenSize+t.vHiddenSize}];return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:n,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:n,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:n,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:a,programUniforms:l}),getShaderSource:e=>{let t=En("output_q",o[0].dataType,n),r=En("output_k",o[0].dataType,n),s=En("output_v",o[0].dataType,n),i=Cn("input",o[0].dataType,o[0].dims),a=Cn("weight",o[1].dataType,o[1].dims),l=Cn("bias",o[2].dataType,o[2].dims),u=i.type.storage;return`\n  const TILE_SIZE = 12u;\n  var<workgroup> tileInput: array<${u}, 144>;\n  var<workgroup> tileWeightQ: array<${u}, 144>;\n  var<workgroup> tileWeightK: array<${u}, 144>;\n  var<workgroup> tileWeightV: array<${u}, 144>;\n  ${e.registerUniforms([{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}]).declareVariables(i,a,l,t,r,s)}\n  ${e.mainStart([12,12,1])}\n    let batchIndex = workgroup_id.z / uniforms.num_heads;\n    let headNumber = workgroup_id.z % uniforms.num_heads;\n    let m = global_id.y;\n    let n = global_id.x;\n\n    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;\n    let biasOffsetQ = headNumber * uniforms.head_size;\n    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;\n    let biasOffsetV = uniforms.hidden_size + biasOffsetK;\n\n    var valueQ = ${u}(0);\n    var valueK = ${u}(0);\n    var valueV = ${u}(0);\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (m < uniforms.M && w + local_id.x < uniforms.K) {\n        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];\n      }\n      if (n < uniforms.N && w + local_id.y < uniforms.K) {\n        let offset = n + (w + local_id.y) * uniforms.ldb;\n        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];\n        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];\n        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];\n      }\n      workgroupBarrier();\n      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n        let inputTileOffset = TILE_SIZE * local_id.y + k;\n        let weightTileOffset = TILE_SIZE * k + local_id.x;\n        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];\n        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];\n        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = (m * uniforms.N + n) % uniforms.head_size;\n    valueQ += bias[headOffset + biasOffsetQ];\n    valueK += bias[headOffset + biasOffsetK];\n    valueV += bias[headOffset + biasOffsetV];\n\n    let offset = workgroup_id.z * uniforms.M * uniforms.N;\n    if (m < uniforms.M && n < uniforms.N) {\n      let outputIdx = offset + m * uniforms.N + n;\n      output_q[outputIdx] = valueQ;\n      output_k[outputIdx] = valueK;\n      output_v[outputIdx] = valueV;\n    }\n  }`}},{inputs:o,outputs:[-1,-1,-1]})},Hr=(e,t)=>{let n=jr(e.inputs,t),[r,s,i]=Wr(e,n);return qr(e,r,s,i,e.inputs[4],void 0,void 0,void 0,e.inputs[5],n)}}),Ku=ue(()=>{Ae(),Iu(),Ou(),Ru(),Vu(),Kr=(e,t)=>{if(!e||5!==e.length)throw new Error("BatchNormalization requires 5 inputs");let n=(e,t,n)=>{let r=t.length;if(r!==e.length)throw new Error(`${n}: num dimensions != ${r}`);t.forEach((t,r)=>{if(t!==e[r])throw new Error(`${n}: dim[${r}] do not match`)})};if(e[0].dims.length>1){let r="NHWC"===t.format?t.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,t.spatial?2:void 0);n(e[1].dims,r,"Invalid input scale"),n(e[2].dims,r,"Invalid input B"),n(e[3].dims,r,"Invalid input mean"),n(e[4].dims,r,"Invalid input var")}else n(e[1].dims,[1],"Invalid input scale"),n(e[2].dims,[1],"Invalid input B"),n(e[3].dims,[1],"Invalid input mean"),n(e[4].dims,[1],"Invalid input var")},Qr=(e,t)=>{let{epsilon:n,spatial:r,format:s}=t,i=e[0].dims,a=r?vn(i[i.length-1]):1,o="NHWC"===s&&i.length>1?a:1,l=jt.size(i)/a,u=r,c=u?i.length:i,d=Cn("x",e[0].dataType,e[0].dims,a),p=Cn("scale",e[1].dataType,e[1].dims,o),h=Cn("bias",e[2].dataType,e[2].dims,o),m=Cn("inputMean",e[3].dataType,e[3].dims,o),f=Cn("inputVar",e[4].dataType,e[4].dims,o),_=En("y",e[0].dataType,c,a);return{name:"BatchNormalization",shaderCache:{hint:`${t.epsilon}_${t.format}_${r}_${a}`,inputDependencies:u?["rank","type","type","type","type"]:void 0},getShaderSource:e=>`\n  const epsilon = ${n};\n  ${e.registerUniform("outputSize","u32").declareVariables(d,p,h,m,f,_)}\n  ${e.mainStart()}\n  ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n    var outputIndices = ${_.offsetToIndices(`global_idx * ${a}`)};\n    ${(()=>{let e="";if(r)e=`let cOffset = ${1===i.length?"0u":"NHWC"===s?`outputIndices[${i.length-1}] / ${a}`:"outputIndices[1]"};`;else if("NCHW"===s)e=`\n            ${_.indicesSet("outputIndices","0","0")}\n            let cOffset = ${_.indicesToOffset("outputIndices")};`;else{e=`var cIndices = ${p.type.indices}(0);\n                       cIndices[0] = outputIndices[${i.length-1}];`;for(let t=1;t<p.rank;t++)e+=`cIndices[${t}] = outputIndices[${t}];`;e+=`let cOffset = ${p.indicesToOffset("cIndices")};`}return e})()}\n    let scale = ${p.getByOffset("cOffset")};\n    let bias = ${h.getByOffset("cOffset")};\n    let inputMean = ${m.getByOffset("cOffset")};\n    let inputVar = ${f.getByOffset("cOffset")};\n    let x = ${d.getByOffset("global_idx")};\n    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;\n    ${_.setByOffset("global_idx","value")}\n  }`,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:u?[{type:12,data:l},...xn(i)]:[{type:12,data:l}]})}},Xr=e=>_n(e),Jr=(e,t)=>{let{inputs:n,outputCount:r}=e,s=Xr({...t,outputCount:r});if(z.webgpu.validateInputContent&&Kr(n,s),t.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(Qr(n,s))}}),Qu=ue(()=>{Ou(),Vu(),Yr=e=>{if(3!==e[0].dims.length)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(1!==e[1].dims.length)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Zr=e=>{let t=e[0].dims,n=e[0].dims[2],r=jt.size(t)/4,s=e[0].dataType,i=Cn("input",s,t,4),a=Cn("bias",s,[n],4),o=Cn("residual",s,t,4),l=En("output",s,t,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(r/64)}}),getShaderSource:e=>`\n  const channels = ${n}u / 4;\n  ${e.declareVariables(i,a,o,l)}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(r)}\n    let value = ${i.getByOffset("global_idx")}\n      + ${a.getByOffset("global_idx % channels")} + ${o.getByOffset("global_idx")};\n    ${l.setByOffset("global_idx","value")}\n  }`}},es=e=>{Yr(e.inputs),e.compute(Zr(e.inputs))}}),Xu=ue(()=>{Iu(),Ou(),Ru(),Vu(),ts=(e,t,n,r,s,i,a)=>{let o=Math.ceil(t/4),l="";l="string"==typeof s?`${s}(a)`:s("a");let u=Cn("inputData",n,[o],4),c=En("outputData",r,[o],4),d=[{name:"vec_size",type:"u32"}];return a&&d.push(...a),`\n      ${e.registerUniforms(d).declareVariables(u,c)}\n\n  ${i??""}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n\n    let a = ${u.getByOffset("global_idx")};\n    ${c.setByOffset("global_idx",l)}\n  }`},ns=(e,t,n,r,s,i=e.dataType,a,o)=>{let l=[{type:12,data:Math.ceil(jt.size(e.dims)/4)}];return a&&l.push(...a),{name:t,shaderCache:{hint:s,inputDependencies:["type"]},getShaderSource:t=>ts(t,jt.size(e.dims),e.dataType,i,n,r,o),getRunData:t=>({outputs:[{dims:e.dims,dataType:i}],dispatchGroup:{x:Math.ceil(jt.size(t[0].dims)/64/4)},programUniforms:l})}},rs=e=>{e.compute(ns(e.inputs[0],"Abs","abs"))},ss=e=>{e.compute(ns(e.inputs[0],"Acos","acos"))},is=e=>{e.compute(ns(e.inputs[0],"Acosh","acosh"))},as=e=>{e.compute(ns(e.inputs[0],"Asin","asin"))},os=e=>{e.compute(ns(e.inputs[0],"Asinh","asinh"))},ls=e=>{e.compute(ns(e.inputs[0],"Atan","atan"))},us=e=>{e.compute(ns(e.inputs[0],"Atanh","atanh"))},cs=e=>_n(e),ds=(e,t)=>{let n;switch(t.to){case 10:n="vec4<f16>";break;case 1:n="vec4<f32>";break;case 12:n="vec4<u32>";break;case 6:n="vec4<i32>";break;case 9:n="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${t.to}`)}e.compute(ns(e.inputs[0],"Cast",n,void 0,t.cacheKey,t.to))},ps=e=>{let t,n,r=e.length>=2&&0!==e[1].data,s=e.length>=3&&0!==e[2].data;switch(e[0].dataType){case 1:t=r?e[1].getFloat32Array()[0]:-34028234663852886e22,n=s?e[2].getFloat32Array()[0]:34028234663852886e22;break;case 10:t=r?e[1].getUint16Array()[0]:64511,n=s?e[2].getUint16Array()[0]:31743;break;default:throw new Error("Unsupport data type")}return _n({min:t,max:n})},hs=(e,t)=>{let n=t||ps(e.inputs),r=bn(e.inputs[0].dataType);e.compute(ns(e.inputs[0],"Clip",e=>`clamp(${e}, vec4<${r}>(uniforms.min), vec4<${r}>(uniforms.max))`,void 0,n.cacheKey,void 0,[{type:e.inputs[0].dataType,data:n.min},{type:e.inputs[0].dataType,data:n.max}],[{name:"min",type:r},{name:"max",type:r}]),{inputs:[0]})},ms=e=>{e.compute(ns(e.inputs[0],"Ceil","ceil"))},fs=e=>{e.compute(ns(e.inputs[0],"Cos","cos"))},_s=e=>{e.compute(ns(e.inputs[0],"Cosh","cosh"))},gs=e=>_n(e),ws=(e,t)=>{let n=bn(e.inputs[0].dataType);e.compute(ns(e.inputs[0],"Elu",e=>`elu_vf32(${e})`,`\n  const elu_alpha_ = ${n}(${t.alpha});\n\n  fn elu_f32(a: ${n}) -> ${n} {\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\n  }\n\n  fn elu_vf32(v: vec4<${n}>) -> vec4<${n}> {\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\n  }`,t.cacheKey))},ys=(e="f32")=>`\nconst r0: ${e} = 0.3275911;\nconst r1: ${e} = 0.254829592;\nconst r2: ${e} = -0.284496736;\nconst r3: ${e} = 1.421413741;\nconst r4: ${e} = -1.453152027;\nconst r5: ${e} = 1.061405429;\n\nfn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {\n  let absv = abs(v);\n  let x = 1.0 / (1.0 + r0 * absv);\n  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\n}`,bs=e=>{let t=bn(e.inputs[0].dataType);e.compute(ns(e.inputs[0],"Erf",e=>`erf_vf32(${e})`,ys(t)))},xs=e=>{e.compute(ns(e.inputs[0],"Exp","exp"))},vs=e=>{e.compute(ns(e.inputs[0],"Floor","floor"))},Ms=e=>{let t=bn(e.inputs[0].dataType);e.compute(ns(e.inputs[0],"Gelu",e=>`0.5 * ${e} * (1.0 + erf_vf32(${e} * 0.7071067811865475))`,ys(t)))},ks=(e,t)=>{let n=bn(e.inputs[0].dataType);e.compute(ns(e.inputs[0],"LeakyRelu",e=>`select(leaky_relu_alpha_ * ${e}, ${e}, ${e} >= vec4<${n}>(0.0))`,`const leaky_relu_alpha_ = ${n}(${t.alpha});`,t.cacheKey))},Ts=e=>{e.compute(ns(e.inputs[0],"Not",e=>`!${e}`))},$s=e=>{e.compute(ns(e.inputs[0],"Neg",e=>`-${e}`))},Ss=e=>{e.compute(ns(e.inputs[0],"Reciprocal",e=>`1.0/${e}`))},Cs=e=>{let t=bn(e.inputs[0].dataType);e.compute(ns(e.inputs[0],"Relu",e=>`select(vec4<${t}>(0.0), ${e}, ${e} > vec4<${t}>(0.0))`))},Es=e=>{e.compute(ns(e.inputs[0],"Sigmoid",e=>`(1.0 / (1.0 + exp(-${e})))`))},Ps=e=>_n(e),As=(e,t)=>{let n=bn(e.inputs[0].dataType);e.compute(ns(e.inputs[0],"HardSigmoid",e=>`max(vec4<${n}>(0.0), min(vec4<${n}>(1.0), ${t.alpha} * ${e} + vec4<${n}>(${t.beta})))`,void 0,t.cacheKey))},Is=e=>{e.compute(ns(e.inputs[0],"Sin","sin"))},Fs=e=>{e.compute(ns(e.inputs[0],"Sinh","sinh"))},zs=e=>{e.compute(ns(e.inputs[0],"Sqrt","sqrt"))},Os=e=>{e.compute(ns(e.inputs[0],"Tan","tan"))},Ls=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,Bs=e=>{e.compute(ns(e.inputs[0],"Tanh",Ls))},Ds=(e="f32")=>`\nconst fast_gelu_a: ${e} = 0.5;\nconst fast_gelu_b: ${e} = 0.7978845608028654;\nconst fast_gelu_c: ${e} = 0.035677408136300125;\n\nfn tanh_v(v: vec4<${e}>) -> vec4<${e}> {\n  return ${Ls("v")};\n}\n`,Ns=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,js=e=>{let t=bn(e.inputs[0].dataType);e.compute(ns(e.inputs[0],"FastGelu",Ns,Ds(t),void 0,e.inputs[0].dataType))},Rs=(e,t)=>{let n=bn(e.inputs[0].dataType);return e.compute(ns(e.inputs[0],"ThresholdedRelu",e=>`select(vec4<${n}>(0.0), ${e}, ${e} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${n}>(${t.alpha});`,t.cacheKey)),0},Vs=e=>{e.compute(ns(e.inputs[0],"Log","log"))},Gs=(e,t)=>`\nconst alpha = vec4<${e}>(${t});\nconst one = ${e}(1.0);\nconst zero = ${e}(0.0);\n\nfn quick_gelu_impl(x: vec4<${e}>) -> vec4<${e}> {\n  let v = x *alpha;\n  var x1 : vec4<${e}>;\n  for (var i = 0; i < 4; i = i + 1) {\n    if (v[i] >= zero) {\n      x1[i] = one / (one + exp(-v[i]));\n    } else {\n      x1[i] = one - one / (one + exp(v[i]));\n    }\n  }\n  return x * x1;\n}\n`,Us=e=>`quick_gelu_impl(${e})`,qs=(e,t)=>{let n=bn(e.inputs[0].dataType);e.compute(ns(e.inputs[0],"QuickGelu",Us,Gs(n,t.alpha),t.cacheKey,e.inputs[0].dataType))}}),Ju=ue(()=>{Ou(),Vu(),Xu(),Ws=e=>{if(3!==e[0].dims.length)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(1!==e[1].dims.length)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Hs=e=>{let t=e[0].dims.slice();t[2]=t[2]/2;let n=Cn("input",e[0].dataType,e[0].dims,4),r=Cn("bias",e[0].dataType,[e[0].dims[2]],4),s=En("output",e[0].dataType,t,4),i=jt.size(t)/4,a=yn(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)}}),getShaderSource:t=>`\n  const M_SQRT2 = sqrt(2.0);\n  const halfChannels = ${e[0].dims[2]/4/2}u;\n\n  ${t.declareVariables(n,r,s)}\n\n  ${ys(a)}\n\n  ${t.mainStart()}\n    ${t.guardAgainstOutOfBoundsWorkgroupSizes(i)}\n    let biasIdx = global_idx % halfChannels;\n    let batchIndex = global_idx / halfChannels;\n    let inputOffset = biasIdx + batchIndex * halfChannels * 2;\n    let valueLeft = input[inputOffset] + bias[biasIdx];\n    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];\n    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);\n\n    ${s.setByOffset("global_idx","valueLeft * geluRight")}\n  }`}},Ks=e=>{Ws(e.inputs),e.compute(Hs(e.inputs))}}),Yu=ue(()=>{Iu(),Ou(),Vu(),Qs=(e,t,n,r,s,i,a,o,l,u,c,d)=>{let p,h;"string"==typeof o?p=h=(e,t)=>`${o}((${e}),(${t}))`:"function"==typeof o?p=h=o:(p=o.scalar,h=o.vector);let m,f=En("outputData",c,r.length,4),_=Cn("aData",l,t.length,4),g=Cn("bData",u,n.length,4);if(s)if(i){let e=1===jt.size(t),r=1===jt.size(n),s=t.length>0&&t[t.length-1]%4==0,i=n.length>0&&n[n.length-1]%4==0;m=e||r?f.setByOffset("global_idx",h(e?`${_.type.value}(${_.getByOffset("0")}.x)`:_.getByOffset("global_idx"),r?`${g.type.value}(${g.getByOffset("0")}.x)`:g.getByOffset("global_idx"))):`\n            let outputIndices = ${f.offsetToIndices("global_idx * 4u")};\n            let offsetA = ${_.broadcastedIndicesToOffset("outputIndices",f)};\n            let offsetB = ${g.broadcastedIndicesToOffset("outputIndices",f)};\n            ${f.setByOffset("global_idx",h(a||s?_.getByOffset("offsetA / 4u"):`${_.type.value}(${_.getByOffset("offsetA / 4u")}[offsetA % 4u])`,a||i?g.getByOffset("offsetB / 4u"):`${g.type.value}(${g.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}\n          `}else m=f.setByOffset("global_idx",h(_.getByOffset("global_idx"),g.getByOffset("global_idx")));else{if(!i)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let e=(e,t,n="")=>{let r=`aData[indexA${t}][componentA${t}]`,s=`bData[indexB${t}][componentB${t}]`;return`\n            let outputIndices${t} = ${f.offsetToIndices(`global_idx * 4u + ${t}u`)};\n            let offsetA${t} = ${_.broadcastedIndicesToOffset(`outputIndices${t}`,f)};\n            let offsetB${t} = ${g.broadcastedIndicesToOffset(`outputIndices${t}`,f)};\n            let indexA${t} = offsetA${t} / 4u;\n            let indexB${t} = offsetB${t} / 4u;\n            let componentA${t} = offsetA${t} % 4u;\n            let componentB${t} = offsetB${t} % 4u;\n            ${e}[${t}] = ${n}(${p(r,s)});\n          `};m=9===c?`\n            var data = vec4<u32>(0);\n            ${e("data",0,"u32")}\n            ${e("data",1,"u32")}\n            ${e("data",2,"u32")}\n            ${e("data",3,"u32")}\n            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:`\n            ${e("outputData[global_idx]",0)}\n            ${e("outputData[global_idx]",1)}\n            ${e("outputData[global_idx]",2)}\n            ${e("outputData[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables(_,g,f)}\n\n        ${d??""}\n\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${m}\n      }`},Xs=(e,t,n,r,s,i,a=n.dataType)=>{let o=n.dims.map(e=>Number(e)??1),l=r.dims.map(e=>Number(e)??1),u=!jt.areEqual(o,l),c=o,d=jt.size(o),p=!1,h=!1,m=[u];if(u){let e=Nt.calcShape(o,l,!1);if(!e)throw new Error("Can't perform binary op on the given tensors");c=e.slice(),d=jt.size(c);let t=1===jt.size(o),n=1===jt.size(l),r=o.length>0&&o[o.length-1]%4==0,s=l.length>0&&l[l.length-1]%4==0;m.push(t),m.push(n),m.push(r),m.push(s);let i=1;for(let e=1;e<c.length;e++){let t=o[o.length-e];if(t!==l[l.length-e])break;i*=t}i%4==0?(h=!0,p=!0):(t||n||r||s)&&(p=!0)}else p=!0;return m.push(p),{name:e,shaderCache:{hint:t+m.map(e=>e.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:e=>Qs(e,o,l,c,p,u,h,s,n.dataType,r.dataType,a,i),getRunData:()=>({outputs:[{dims:c,dataType:a}],dispatchGroup:{x:Math.ceil(d/64/4)},programUniforms:[{type:12,data:Math.ceil(jt.size(c)/4)},...xn(o,l,c)]})}},Js=(e,t,n,r,s,i)=>{e.compute(Xs(t,s??"",e.inputs[0],e.inputs[1],n,r,i))},Ys=e=>{Js(e,"Add",(e,t)=>`${e}+${t}`)},Zs=e=>{Js(e,"Div",(e,t)=>`${e}/${t}`)},ei=e=>{Js(e,"Equal",{scalar:(e,t)=>`u32(${e}==${t})`,vector:(e,t)=>`vec4<u32>(${e}==${t})`},void 0,void 0,9)},ti=e=>{Js(e,"Mul",(e,t)=>`${e}*${t}`)},ni=e=>{let t=Cn("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;Js(e,"Pow",{scalar:(e,t)=>`pow_custom(${e},${t})`,vector:(e,t)=>`pow_vector_custom(${e},${t})`},`\n    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {\n      if (b == ${t}(0.0)) {\n        return ${t}(1.0);\n      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {\n        return ${t}(pow(f32(a), f32(b))); // NaN\n      }\n      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${"i32"===t?"round":""}(pow(f32(abs(a)), f32(b))));\n    }\n    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {\n      // TODO: implement vectorized pow\n      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));\n    }\n      `)},ri=e=>{Js(e,"Sub",(e,t)=>`${e}-${t}`)},si=e=>{Js(e,"Greater",{scalar:(e,t)=>`u32(${e}>${t})`,vector:(e,t)=>`vec4<u32>(${e}>${t})`},void 0,void 0,9)},ii=e=>{Js(e,"Less",{scalar:(e,t)=>`u32(${e}<${t})`,vector:(e,t)=>`vec4<u32>(${e}<${t})`},void 0,void 0,9)},ai=e=>{Js(e,"GreaterOrEqual",{scalar:(e,t)=>`u32(${e}>=${t})`,vector:(e,t)=>`vec4<u32>(${e}>=${t})`},void 0,void 0,9)},oi=e=>{Js(e,"LessOrEqual",{scalar:(e,t)=>`u32(${e}<=${t})`,vector:(e,t)=>`vec4<u32>(${e}<=${t})`},void 0,void 0,9)}}),Zu=ue(()=>{Iu(),Ou(),Ru(),Vu(),li=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");let n=e[0],r=n.dataType,s=n.dims.length;e.forEach((e,i)=>{if(0!==i){if(e.dataType!==r)throw new Error("input tensors should be one type");if(e.dims.length!==s)throw new Error("input tensors should have the same shape");e.dims.forEach((e,r)=>{if(r!==t&&e!==n.dims[r])throw new Error("non concat dimensions must match")})}})},ui=(e,t)=>`\n  fn calculateInputIndex(index: u32) -> u32 {\n    let sizeInConcatAxis = array<u32, ${e}u>(${t});\n    for (var i: u32 = 0u; i < ${e}; i += 1u ) {\n      if (index < sizeInConcatAxis[i]) {\n        return i;\n      }\n    }\n    return ${e}u;\n  }`,ci=(e,t)=>{let n=e.length,r=[];for(let s=0;s<n;++s){let i=t.setByOffset("global_idx",e[s].getByIndices("indices"));1===n?r.push(i):0===s?r.push(`if (inputIndex == ${s}u) { ${i} }`):s===n-1?r.push(`else { ${i} }`):r.push(`else if (inputIndex == ${s}) { ${i} }`)}return r.join("\n")},di=(e,t,n,r)=>{let s=jt.size(n),i=new Array(e.length),a=new Array(e.length),o=0,l=[],u=[],c=[{type:12,data:s}];for(let n=0;n<e.length;++n)o+=e[n].dims[t],i[n]=o,u.push(e[n].dims.length),a[n]=Cn(`input${n}`,r,u[n]),l.push("rank"),c.push({type:12,data:i[n]});for(let t=0;t<e.length;++t)c.push(...xn(e[t].dims));c.push(...xn(n));let d=En("output",r,n.length),p=d.indicesGet("indices",t),h=Array.from(Array(i.length).keys()).map(e=>`uniforms.sizeInConcatAxis${e}`).join(",");return{name:"Concat",shaderCache:{hint:`${t}`,inputDependencies:l},getRunData:()=>({outputs:[{dims:n,dataType:r}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:c}),getShaderSource:t=>`\n\n  ${(()=>{t.registerUniform("outputSize","u32");for(let n=0;n<e.length;n++)t.registerUniform(`sizeInConcatAxis${n}`,"u32");return t.declareVariables(...a,d)})()}\n\n  ${ui(i.length,h)}\n\n  ${t.mainStart()}\n    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n    var indices = ${d.offsetToIndices("global_idx")};\n\n    let inputIndex = calculateInputIndex(${p});\n    if (inputIndex != 0u) {\n      let sizeInConcatAxis = array<u32, ${i.length}u>(${h});\n      ${p} -= sizeInConcatAxis[inputIndex - 1u];\n    }\n\n    ${ci(a,d)}\n  }`}},pi=(e,t)=>{let n=e.inputs,r=n[0].dims,s=jt.normalizeAxis(t.axis,r.length);li(n,s);let i=r.slice();i[s]=n.reduce((e,t)=>e+(t.dims.length>s?t.dims[s]:0),0);let a=n.filter(e=>jt.size(e.dims)>0);e.compute(di(a,s,i,n[0].dataType),{inputs:a})},hi=e=>_n({axis:e.axis})}),ec=ue(()=>{Iu(),Ou(),mi=(e,t,n="f32")=>{switch(e.activation){case"Relu":return`value = max(value, ${t}(0.0));`;case"Sigmoid":return`value = (${t}(1.0) / (${t}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${t}(${n}(uniforms.clip_min)), ${t}(${n}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${t}(0.0), min(${t}(1.0), ${n}(uniforms.alpha) * value + ${n}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${n}(uniforms.alpha) * value, value, value >= ${t}(0.0));`;case"Tanh":return"let e2x = exp(-2.0 * abs(value));\n              value = sign(value) * (1.0 - e2x) / (1.0 + e2x);\n        ";case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},fi=(e,t)=>{"Clip"===e.activation?t.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):"HardSigmoid"===e.activation?t.push({type:1,data:e.alpha},{type:1,data:e.beta}):"LeakyRelu"===e.activation&&t.push({type:1,data:e.alpha})},_i=(e,t)=>{"Clip"===e.activation?t.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):"HardSigmoid"===e.activation?t.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):"LeakyRelu"===e.activation&&t.push({name:"alpha",type:"f32"})},gi=e=>{let t=e?.activation||"";if("HardSigmoid"===t){let[n,r]=e?.activation_params||[.2,.5];return{activation:t,alpha:n,beta:r}}if("Clip"===t){let[n,r]=e?.activation_params||[Gt,Ut];return{activation:t,clipMax:r,clipMin:n}}if("LeakyRelu"===t){let[n]=e?.activation_params||[.01];return{activation:t,alpha:n}}return{activation:t}}}),tc=ue(()=>{wi=(e,t)=>{switch(e){case 1:return t;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component is not supported.`)}},yi=e=>`\n      ${e?"value = value + getBiasByOutputCoords(coords);":""}\n      `}),nc=ue(()=>{bi=e=>`\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n}\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));\n}\n`}),rc=ue(()=>{Iu(),Ou(),Vu(),ec(),xi=(e,t,n,r,s)=>{let i=r-n;return`\n      ${Array.from({length:n}).map((n,a)=>`\n      if (${$n(t.shape,a,t.rank)} != 1) {\n        ${t.indicesSet(e,a,$n(s,a+i,r))}\n      } else {\n        ${t.indicesSet(e,a,0)}\n      }`).join("")}\n`},vi=(e,t,n,r,s=!1,i)=>{let a=e[0].dims,o=e[1].dims,l=a[a.length-2],u=o[o.length-1],c=a[a.length-1],d=vn(u),p=vn(c),h=vn(l),m=jt.size(n)/d/h,f=e.length>2,_=r?r.slice(0,-2):n.slice(0,-2),g=[jt.size(_),l,u],w=[{type:12,data:m},{type:12,data:l},{type:12,data:u},{type:12,data:c}];return fi(t,w),w.push(...xn(_,a,o)),f&&w.push(...xn(e[2].dims)),w.push(...xn(g)),{name:"MatMulNaive",shaderCache:{hint:`${t.activation};${d};${p};${h};${s}`,inputDependencies:f?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:i?i(n):n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:w}),getShaderSource:r=>{let i=An("batch_dims",e[0].dataType,_.length),l=Cn("a",e[0].dataType,a.length,p),u=Cn("b",e[1].dataType,o.length,d),c=En("output",e[0].dataType,g.length,d),m=yn(c.type.tensor),w=mi(t,c.type.value,m),y=[l,u],b="";if(f){let t=s?d:1;y.push(Cn("bias",e[2].dataType,e[2].dims.length,t)),b=s?`value += bias[col / ${t}];`:`value += ${c.type.value}(bias[row + i]);`}let x=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];return _i(t,x),`\n  ${r.registerUniforms(x).registerInternalVariables(i).declareVariables(...y,c)}\n  ${r.mainStart()}\n    ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let col = (global_idx % (uniforms.N / ${d})) * ${d};\n    var index1 = global_idx / (uniforms.N / ${d});\n    let stride1 = uniforms.M / ${h};\n    let row = (index1 % stride1) * ${h};\n    let batch = index1 / stride1;\n\n    ${2===n.length?"":`let batch_indices = ${i.offsetToIndices("batch")};`}\n\n    var a_indices: ${l.type.indices};\n    ${xi("a_indices",l,l.rank-2,i.rank,"batch_indices")}\n    ${l.indicesSet("a_indices",l.rank-2,0)}\n    ${l.indicesSet("a_indices",l.rank-1,0)}\n    let a_offset = ${l.indicesToOffset("a_indices")};\n\n    var b_indices: ${u.type.indices};\n    ${xi("b_indices",u,u.rank-2,i.rank,"batch_indices")}\n    ${u.indicesSet("b_indices",u.rank-2,0)}\n    ${u.indicesSet("b_indices",u.rank-1,0)}\n    let b_offset = ${u.indicesToOffset("b_indices")};\n    var values: array<${c.type.value}, ${h}>;\n    for (var k: u32 = 0u; k < uniforms.K; k = k + ${p}) {\n      ${(()=>{let e=`var a_data: ${l.type.value};`;for(let t=0;t<p;t++)e+=`\n              let b_data${t} = b[(b_offset + (k + ${t}) * uniforms.N + col) / ${d}];`;for(let t=0;t<h;t++){e+=`a_data = a[(a_offset + (row + ${t}) * uniforms.K + k) / ${p}];`;for(let n=0;n<p;n++)e+=`\n            values[${t}] = fma(${u.type.value}(a_data${1===p?"":`[${n}]`}), b_data${n}, values[${t}]);\n`}return e})()}\n    }\n    for (var i = 0u; i < ${h}u; i++) {\n      var value = values[i];\n      ${b}\n      ${w}\n      let cur_indices = ${c.type.indices}(batch, row + i, col);\n      let offset = ${c.indicesToOffset("cur_indices")};\n      ${c.setByOffset(`offset / ${d}`,"value")};\n    }\n  }\n  `}}}}),sc=ue(()=>{Iu(),Ou(),Vu(),ec(),rc(),tc(),Mi=(e,t)=>e?`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          kStart + inputRow,\n          globalRowStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `:`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          globalRow + innerRow,\n          kStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `,ki=(e,t)=>e?`\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\n        ${3===t?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          acc[i] = BCached0 * ACached0[i] + acc[i];\n          acc[i] = BCached1 * ACached1[i] + acc[i];\n          acc[i] = BCached2 * ACached2[i] + acc[i];\n          ${3===t?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}\n        }`:`\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = BCached0 * ACached.x + acc[i];\n          acc[i] = BCached1 * ACached.y + acc[i];\n          acc[i] = BCached2 * ACached.z + acc[i];\n          ${3===t?"":"acc[i] = BCached3 * ACached.w + acc[i];"}\n        }`,Ti=(e,t,n="f32",r,s=!1,i=32,a=!1,o=32)=>{let l=t[1]*e[1],u=t[0]*e[0],c=s?l:i,d=s?i:l,p=c/t[0],h=i/t[1];if((!s||4!==p||4!==e[1])&&(s||3!==p&&4!==p)||c%t[0]!==0||i%t[1]!==0||4!==e[0])throw new Error(`If transposeA ${s} is true, innerElementSize ${p} and workPerThread[1] ${e[1]} must be 4.\n      Otherwise, innerElementSize ${p} must be 3 or 4.\n  tileAWidth ${c} must be divisible by workgroupSize[0]${t[0]}. tileInner ${i} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`\nvar<workgroup> mm_Asub: array<array<vec${p}<${n}>, ${c/p}>, ${d}>;\nvar<workgroup> mm_Bsub: array<array<vec4<${n}>, ${u/e[0]}>, ${i}>;\n\nconst rowPerThread = ${e[1]};\nconst colPerThread = ${e[0]};\nconst innerElementSize = ${p};\nconst tileInner = ${i};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n  let localRow = i32(localId.y);\n  let tileRow = localRow * rowPerThread;\n  let tileCol = i32(localId.x);\n\n  let globalRow =i32(globalId.y) * rowPerThread;\n  let globalCol = i32(globalId.x);\n  let batch = ${a?"0":"i32(globalId.z)"};\n  ${r?`let batchIndices = ${r.offsetToIndices("u32(batch)")};`:""}\n  let globalRowStart = i32(workgroupId.y) * ${l};\n\n  let num_tiles = ${a?`${Math.ceil(o/i)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n  var kStart = ${a?`i32(globalId.z) * ${o}`:"0"};\n\n  var acc: array<vec4<${n}>, rowPerThread>;\n\n  // Loop over shared dimension.\n  let tileRowB = localRow * ${h};\n  for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let inputRow = tileRow + innerRow;\n          let inputCol = tileCol;\n          ${Mi(s,r)}\n      }\n\n      // Load one tile of B into local memory.\n      for (var innerRow = 0; innerRow < ${h}; innerRow = innerRow + 1) {\n          let inputRow = tileRowB + innerRow;\n          let inputCol = tileCol;\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${r?", batchIndices":""});\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\n          ${3===p?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}\n\n          ${ki(s,p)}\n      }\n\n      workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n  }\n}`},$i=(e,t)=>e?`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              kStart + inputRow,\n              globalRowStart + inputCol${t?", batchIndices":""});\n            `:`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              globalRowStart + inputRow,\n              kStart + inputCol${t?", batchIndices":""});\n            `,Si=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",Ci=(e,t,n="f32",r,s=!1,i=32,a=!1,o=32,l=!1)=>{let u=e[1]*t[1],c=e[0]*t[0],d=s?u:i,p=s?i:u;if(p%t[1]!==0||d%t[0]!==0||i%t[1]!==0)throw new Error(`tileAHight ${p} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${d} must be divisible by workgroupSize[0]${t[0]}, tileInner ${i} must be divisible by workgroupSize[1]${t[1]}`);let h=p/t[1],m=d/t[0],f=i/t[1],_=l?`\n    let localRow = i32(localId.y);\n    let localCol = i32(localId.x);\n    let globalRowStart = i32(workgroupId.y) * ${u};\n    let globalColStart = i32(workgroupId.x) * ${c};\n\n    // Loop over shared dimension.\n    for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var inputRow = localRow; inputRow < ${p}; inputRow = inputRow + ${t[1]}) {\n        for (var inputCol = localCol; inputCol < ${d}; inputCol = inputCol + ${t[0]}) {\n          ${$i(s,r)}\n        }\n      }\n      // Load one tile of B into local memory.\n      for (var inputRow = localRow; inputRow < ${i}; inputRow = inputRow + ${t[1]}) {\n            for (var inputCol = localCol; inputCol < ${c}; inputCol = inputCol + ${t[0]}) {\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n            kStart + inputRow,\n            globalColStart + inputCol${r?", batchIndices":""});\n        }\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      var BCached : array<${n}, colPerThread>;\n      for (var k = 0; k < tileInner; k = k + 1) {\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];\n        }\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let ACached = ${s?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\n                ACached * BCached[innerCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      let gRow = globalRowStart + localRow + innerRow * ${t[1]};\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        let gCol = globalColStart + localCol + innerCol * ${t[0]};\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n      }\n    }\n    `:`\nlet tileRow = i32(localId.y) * rowPerThread;\nlet tileCol = i32(localId.x) * colPerThread;\n\nlet globalRow = i32(globalId.y) * rowPerThread;\nlet globalCol = i32(globalId.x) * colPerThread;\nlet globalRowStart = i32(workgroupId.y) * ${u};\n\nlet tileRowA = i32(localId.y) * ${h};\nlet tileColA = i32(localId.x) * ${m};\nlet tileRowB = i32(localId.y) * ${f};\n// Loop over shared dimension.\nfor (var t = 0; t < num_tiles; t = t + 1) {\n  // Load one tile of A into local memory.\n  for (var innerRow = 0; innerRow < ${h}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < ${m}; innerCol = innerCol + 1) {\n      let inputRow = tileRowA + innerRow;\n      let inputCol = tileColA + innerCol;\n      ${$i(s,r)}\n    }\n  }\n\n  // Load one tile of B into local memory.\n  for (var innerRow = 0; innerRow < ${f}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n      let inputRow = tileRowB + innerRow;\n      let inputCol = tileCol + innerCol;\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n        kStart + inputRow,\n        globalCol + innerCol${r?", batchIndices":""});\n    }\n  }\n  kStart = kStart + tileInner;\n  workgroupBarrier();\n\n  // Compute acc values for a single thread.\n  var BCached : array<${n}, colPerThread>;\n  for (var k = 0; k < tileInner; k = k + 1) {\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\n    }\n\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      ${Si(s)}\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n      }\n    }\n  }\n\n  workgroupBarrier();\n}\n\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n        acc[innerRow][innerCol]);\n  }\n}\n`;return`\n  var<workgroup> mm_Asub : array<array<${n}, ${d}>, ${p}>;\n  var<workgroup> mm_Bsub : array<array<${n}, ${c}>, ${i}>;\n  const rowPerThread = ${e[1]};\n  const colPerThread = ${e[0]};\n  const tileInner = ${i};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n    let batch = ${a?"0":"i32(globalId.z)"};\n    ${r?`let batchIndices = ${r.offsetToIndices("u32(batch)")};`:""}\n    let num_tiles = ${a?`${Math.ceil(o/i)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n    var kStart = ${a?`i32(globalId.z) * ${o}`:"0"};\n\n    var acc : array<array<${n}, colPerThread>, rowPerThread>;\n    ${_}\n  }\n`},Ei=(e,t,n,r,s=!1)=>{let[i,a,o,l]=r,u=yn(r[0].type.tensor);return`\n    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${i.type.indices}) -> ${wi(e,u)} {\n      var value = ${wi(e,u)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)\n      {\n        var aIndices: ${a.type.indices};\n        ${xi("aIndices",a,a.rank-2,i.rank,"batchIndices")}\n        ${a.indicesSet("aIndices",a.rank-2,"u32(row)")}\n        ${a.indicesSet("aIndices",a.rank-1,"u32(colIn)")}\n        value = ${a.getByIndices("aIndices")};\n      }\n      return value;\n    }\n\n    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${i.type.indices}) -> ${wi(e,u)} {\n      var value = ${wi(e,u)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)\n      {\n        var bIndices: ${o.type.indices};\n        ${xi("bIndices",o,o.rank-2,i.rank,"batchIndices")}\n        ${o.indicesSet("bIndices",o.rank-2,"u32(row)")}\n        ${o.indicesSet("bIndices",o.rank-1,"u32(colIn)")}\n        value = ${o.getByIndices("bIndices")};\n      }\n      return value;\n    }\n\n    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${wi(e,u)}) {\n      let col = colIn * ${e};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n        var value = valueIn;\n        let coords = vec3<i32>(batch, row, colIn);\n        ${t?`value = value + ${s?"bias[colIn]":`${wi(e,u)}(bias[row])`};`:""}\n        ${n}\n        ${l.setByIndices("vec3<u32>(coords)","value")}\n      }\n    }\n    `},Pi=(e,t,n,r,s=!1,i)=>{let a=e[0].dims,o=e[1].dims,l=a.slice(0,-2),u=o.slice(0,-2),c=r?r.slice(0,-2):n.slice(0,-2),d=jt.size(c),p=a[a.length-2],h=a[a.length-1],m=o[o.length-1],f=h%4==0&&m%4==0,_=p<=8?[4,1,1]:[4,4,1],g=[8,8,1],w=[Math.ceil(m/g[0]/_[0]),Math.ceil(p/g[1]/_[1]),Math.ceil(d/g[2]/_[2])],y=f?4:1,b=[...l,p,h/y],x=b.length,v=[...u,h,m/y],M=v.length,k=[d,p,m/y],T=[{type:6,data:p},{type:6,data:m},{type:6,data:h}];fi(t,T),T.push(...xn(c,b,v));let $=["rank","rank"],S=e.length>2;return S&&(T.push(...xn(e[2].dims)),$.push("rank")),T.push(...xn(k)),{name:"MatMul",shaderCache:{hint:`${_};${t.activation};${f};${s}`,inputDependencies:$},getRunData:()=>({outputs:[{dims:i?i(n):n,dataType:e[0].dataType}],dispatchGroup:{x:w[0],y:w[1],z:w[2]},programUniforms:T}),getShaderSource:n=>{let r=c.length,i=An("batchDims",e[0].dataType,r,1),a=yn(e[0].dataType),o=Cn("a",e[0].dataType,x,y),l=Cn("b",e[1].dataType,M,y),u=En("result",e[0].dataType,k.length,y),d=[o,l];if(S){let t=s?y:1;d.push(Cn("bias",e[2].dataType,e[2].dims.length,t))}let p=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];_i(t,p);let h=yn(u.type.tensor),m=mi(t,u.type.value,h),w=Ei(y,S,m,[i,o,l,u],s);return`\n  ${n.registerUniforms(p).registerInternalVariables(i).declareVariables(...d,u)}\n  ${w}\n  ${f?Ti(_,g,a,i):Ci(_,g,a,i)}\n                   `}}}}),ic=ue(()=>{Iu(),zu(),Vu(),ec(),tc(),nc(),sc(),Ai=(e,t,n,r,s=!1,i,a=4,o=4,l=4,u="f32")=>{let c=e=>{switch(e){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${e} is not supported.`)}},d=e?"\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\n    ":"\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\n    ",p=e?"\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    ":"\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    ",h=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",m=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",f=e?"row":"col",_=e?"col":"row",g=`\n    let inChannels = i32(uniforms.w_shape[2]);\n    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n    let outRow = ${f} / outWidth;\n    let outCol = ${f} % outWidth;\n\n    let WRow = ${_} / (i32(uniforms.w_shape[1]) * inChannels);\n    let WCol = ${_} / inChannels % i32(uniforms.w_shape[1]);\n    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];\n    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];\n    let xCh = ${_} % inChannels;\n    var resData = ${wi(a,u)}(0.0);\n    // The bounds checking is always needed since we use it to pad zero for\n    // the 'same' padding type.\n    if (xRow >= 0 && xRow < ${h} && xCol >= 0 && xCol < ${m}) {\n      ${d}\n      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));\n      ${(e=>{switch(e){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${u}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(a)}\n    }\n    return resData;`,w=e?t&&r?`\n    let col = colIn * ${a};\n    ${g}`:`\n    let col = colIn * ${a};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n      ${g}\n    }\n    return ${wi(a,u)}(0.0);`:r&&n?`\n    let col = colIn * ${a};\n    ${g}`:`\n    let col = colIn * ${a};\n    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n      ${g}\n    }\n    return ${wi(a,u)}(0.0);`,y=e?r&&n?c(o):`\n    let col = colIn * ${o};\n    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n      ${c(o)}\n    }\n    return ${wi(o,u)}(0.0);`:`\n    let col = colIn * ${o};\n    if (row < uniforms.dim_inner && col < uniforms.dim_a_outer) {\n      ${c(o)}\n    }\n    return ${wi(o,u)}(0.0);`,b=wi(l,u),x=wi(e?a:o,u),v=wi(e?o:a,u),M=mi(i,b,u);return`\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${x} {\n      ${e?w:y}\n    }\n\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${v} {\n      ${e?y:w}\n    }\n\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${b}) {\n      let col = colIn * ${l};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)\n      {\n      var value = valueIn;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${p}\n      ${yi(s)}\n      ${M}\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n      }\n    }`},Ii=(e,t,n,r,s,i,a,o,l)=>{let u="NHWC"===t.format,c=u?e[0].dims[3]:e[0].dims[1],d=n[0],p=u?n[2]:n[3],h=u?n[1]:n[2],m=u?n[3]:n[1],f=u&&(c%4==0||c%3==0)&&m%4==0,_=u?m:p*h,g=u?p*h:m,w=[8,8,1],y=r<=8?[4,1,1]:[4,4,1],b=[Math.ceil(_/w[0]/y[0]),Math.ceil(g/w[1]/y[1]),Math.ceil(d/w[2]/y[2])];Bt("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${b}`);let x=f?u&&c%4!=0?3:4:1,v=w[1]*y[1],M=w[0]*y[0],k=Math.max(w[0]*x,w[1]),T=r%v===0,$=s%M===0,S=i%k===0,C=f?[x,4,4]:[1,1,1],E=[{type:6,data:r},{type:6,data:s},{type:6,data:i},{type:6,data:[t.pads[0],t.pads[1]]},{type:6,data:t.strides},{type:6,data:t.dilations}];fi(t,E),E.push(...xn(e[0].dims,e[1].dims));let P=["rank","rank"];return a&&(E.push(...xn(e[2].dims)),P.push("rank")),E.push(...xn(n)),{name:"Conv2DMatMul",shaderCache:{hint:`${t.cacheKey};${x};${f};${T};${$};${S};${v};${M};${k}`,inputDependencies:P},getRunData:()=>({outputs:[{dims:l?l(n):n,dataType:e[0].dataType}],dispatchGroup:{x:b[0],y:b[1],z:b[2]},programUniforms:E}),getShaderSource:r=>{let s=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];_i(t,s);let i=f?4:1,l=yn(e[0].dataType),c=`\n      fn setOutputAtIndex(flatIndex : i32, value : ${f?`vec4<${l}>`:l}) {\n        result[flatIndex] = ${f?`vec4<${l}>`:l}(value);\n      }\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${f?`vec4<${l}>`:l}) {\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\n        setOutputAtIndex(flatIndex ${f?"/ 4":""}, value);\n      }`,d=[Cn("x",e[0].dataType,e[0].dims.length,3===x?1:x),Cn("w",e[1].dataType,e[1].dims.length,i)],p=En("result",e[0].dataType,n.length,i);if(a){let t=Cn("bias",e[2].dataType,e[2].dims.length,i);d.push(t),c+=`\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${f?`vec4<${l}>`:l} {\n          return bias[coords.${u?"w":"y"}${f?"/ 4":""}];\n        }`}return`\n        ${bi("uniforms.result_strides")}\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\n        ${r.registerUniforms(s).declareVariables(...d,p)}\n        ${c}\n        ${Ai(u,T,$,S,a,t,C[0],C[1],C[2],l)}\n        ${f?Ti(y,w,l,void 0,!u,k):Ci(y,w,l,void 0,!u,k,!1,void 0,o)}`}}}}),ac=ue(()=>{Iu(),zu(),Ou(),Vu(),ec(),tc(),Fi=e=>{let t=1;for(let n=0;n<e.length;n++)t*=e[n];return t},zi=e=>"number"==typeof e?[e,e,e]:e,Oi=(e,t)=>t<=1?e:e+(e-1)*(t-1),Li=(e,t,n,r=1)=>{let s=Oi(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)},Bi=(e,t,n,r,s)=>{null==s&&(s=Li(e,t[0],r[0]));let i=[0,0,0,n];for(let n=0;n<3;n++)e[n]+2*s>=t[n]&&(i[n]=Math.trunc((e[n]-t[n]+2*s)/r[n]+1));return i},Di=(e,t,n,r,s,i,a,o,l,u)=>{let c,d,p,h;if("VALID"===e&&(e=0),"number"==typeof e){c={top:e,bottom:e,left:e,right:e,front:e,back:e};let m=Bi([t,n,r,1],[o,l,u],1,[s,i,a],e);d=m[0],p=m[1],h=m[2]}else if(Array.isArray(e)){if(!e.every((e,t,n)=>e===n[0]))throw Error(`Unsupported padding parameter: ${e}`);c={top:e[0],bottom:e[1],left:e[2],right:e[3],front:e[4],back:e[5]};let m=Bi([t,n,r,1],[o,l,u],1,[s,i,a],e[0]);d=m[0],p=m[1],h=m[2]}else{if("SAME_UPPER"!==e)throw Error(`Unknown padding parameter: ${e}`);{d=Math.ceil(t/s),p=Math.ceil(n/i),h=Math.ceil(r/a);let e=(d-1)*s+o-t,m=(p-1)*i+l-n,f=(h-1)*a+u-r,_=Math.floor(e/2),g=e-_,w=Math.floor(m/2),y=m-w,b=Math.floor(f/2);c={top:w,bottom:y,left:b,right:f-b,front:_,back:g}}}return{padInfo:c,outDepth:d,outHeight:p,outWidth:h}},Ni=(e,t,n,r,s,i=!1,a="channelsLast")=>{let o,l,u,c,d;if("channelsLast"===a)[o,l,u,c,d]=e;else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);[o,d,l,u,c]=e}let[p,,h,m,f]=t,[_,g,w]=zi(n),[y,b,x]=zi(r),v=Oi(h,y),M=Oi(m,b),k=Oi(f,x),{padInfo:T,outDepth:$,outHeight:S,outWidth:C}=Di(s,l,u,c,_,g,w,v,M,k),E=i?p*d:p,P=[0,0,0,0,0];return"channelsFirst"===a?P=[o,E,$,S,C]:"channelsLast"===a&&(P=[o,$,S,C,E]),{batchSize:o,dataFormat:a,inDepth:l,inHeight:u,inWidth:c,inChannels:d,outDepth:$,outHeight:S,outWidth:C,outChannels:E,padInfo:T,strideDepth:_,strideHeight:g,strideWidth:w,filterDepth:h,filterHeight:m,filterWidth:f,effectiveFilterDepth:v,effectiveFilterHeight:M,effectiveFilterWidth:k,dilationDepth:y,dilationHeight:b,dilationWidth:x,inShape:e,outShape:P,filterShape:t}},ji=(e,t,n,r,s,i)=>{let a="channelsLast"===i,o=(a?e[0].dims[3]:e[0].dims[1],{x:n.map((e,t)=>t)}),l=[Math.ceil(Fi(o.x.map(e=>n[e]))/64),1,1];Bt("verbose",()=>`[conv3d_naive_webgpu] dispatch = ${l}`);let u=[{type:12,data:jt.size(n)},{type:12,data:r},{type:12,data:s},{type:12,data:t.strides},{type:12,data:t.dilations}];fi(t,u),u.push(...xn(e[0].dims,e[1].dims));let c=["rank","rank"],d=3===e.length;return d&&(u.push(...xn(e[2].dims)),c.push("rank")),u.push(...xn(n)),{name:"Conv3DNaive",shaderCache:{hint:`${t.cacheKey};${a};1;${d}`,inputDependencies:c},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:l[0],y:l[1],z:l[2]},programUniforms:u}),getShaderSource:i=>{let o=[{name:"output_size",type:"u32"},{name:"filter_dims",type:"u32",length:r.length},{name:"pads",type:"u32",length:s.length},{name:"strides",type:"u32",length:t.strides.length},{name:"dilations",type:"u32",length:t.dilations.length}];_i(t,o);let l=yn(e[0].dataType),u=Cn("x",e[0].dataType,e[0].dims.length,1),c=Cn("W",e[1].dataType,e[1].dims.length,1),p=[u,c],h=En("result",e[0].dataType,n.length,1),m="";if(d){let t=Cn("bias",e[2].dataType,e[2].dims.length,1);p.push(t),m+=`\n        fn getBiasByOutputCoords(coords : array<u32, 5>) -> ${l} {\n          return bias[${$n("coords",a?4:1,5)}];\n        }`}let f=wi(1,l),_=mi(t,f,l);return`\n            ${m}\n            fn getX(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {\n              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);\n              return ${u.getByIndices("aIndices")};\n            }\n            fn getW(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {\n              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);\n              return ${c.getByIndices("aIndices")};\n            }\n          ${i.registerUniforms(o).declareVariables(...p,h)}\n          ${i.mainStart()}\n          ${i.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n              let coords = ${h.offsetToIndices("global_idx")};\n              let batch = ${$n("coords",0,u.rank)};\n              let d2 = ${$n("coords",a?u.rank-1:1,u.rank)};\n              let xFRCCorner = vec3<u32>(${$n("coords",a?1:2,u.rank)},\n              ${$n("coords",a?2:3,u.rank)},\n              ${$n("coords",a?3:4,u.rank)}) * uniforms.strides - uniforms.pads;\n              let xFCorner = xFRCCorner.x;\n              let xRCorner = xFRCCorner.y;\n              let xCCorner = xFRCCorner.z;\n              let xShapeY = ${$n("uniforms.x_shape",a?1:2,u.rank)};\n              let xShapeZ = ${$n("uniforms.x_shape",a?2:3,u.rank)};\n              let xShapeW = ${$n("uniforms.x_shape",a?3:4,u.rank)};\n              let xShapeU = ${$n("uniforms.x_shape",a?4:1,u.rank)};\n              let inputDepthNearestVec4 = (xShapeU / 4) * 4;\n              let inputDepthVec4Remainder = xShapeU % 4;\n\n              var value = 0.0;\n              for (var wF = 0u; wF < uniforms.filter_dims[0]; wF++) {\n                let xF = xFCorner + wF * uniforms.dilations[0];\n                if (xF < 0 || xF >= xShapeY) {\n                  continue;\n                }\n\n                for (var wR = 0u; wR < uniforms.filter_dims[1]; wR++) {\n                  let xR = xRCorner + wR * uniforms.dilations[1];\n                  if (xR < 0 || xR >= xShapeZ) {\n                    continue;\n                  }\n\n                  for (var wC = 0u; wC < uniforms.filter_dims[2]; wC++) {\n                    let xC = xCCorner + wC * uniforms.dilations[2];\n                    if (xC < 0 || xC >= xShapeW) {\n                      continue;\n                    }\n\n                    for (var d1 = 0u; d1 < inputDepthNearestVec4; d1 += 4) {\n                      ${a?"let xValues = vec4<f32>(\n                               getX(batch, xF, xR, xC, d1),\n                               getX(batch, xF, xR, xC, d1 + 1),\n                               getX(batch, xF, xR, xC, d1 + 2),\n                               getX(batch, xF, xR, xC, d1 + 3));\n                            ":"let xValues = vec4<f32>(\n                               getX(batch, d1, xF, xR, xC),\n                               getX(batch, d1 + 1, xF, xR, xC),\n                               getX(batch, d1 + 2, xF, xR, xC),\n                               getX(batch, d1 + 3, xF, xR, xC));\n                            "}\n                            let wValues = vec4<f32>(\n                              getW(d2, d1, wF, wR, wC),\n                              getW(d2, d1 + 1, wF, wR, wC),\n                              getW(d2, d1 + 2, wF, wR, wC),\n                              getW(d2, d1 + 3, wF, wR, wC));\n                      value += dot(xValues, wValues);\n                    }\n                    if (inputDepthVec4Remainder == 1) {\n                        ${a?"value += getX(batch, xF, xR, xC, inputDepthNearestVec4)\n                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);":"value += getX(batch, inputDepthNearestVec4, xF, xR, xC)\n                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);"}\n                    } else if (inputDepthVec4Remainder == 2) {\n                      ${a?"let xValues = vec2<f32>(\n                        getX(batch, xF, xR, xC, inputDepthNearestVec4),\n                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1));\n                      ":"let xValues = vec2<f32>(\n                        getX(batch, inputDepthNearestVec4, xF, xR, xC),\n                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC));\n                    "}\n                    let wValues = vec2<f32>(\n                      getW(d2, inputDepthNearestVec4, wF, wR, wC),\n                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC));\n                      value += dot(xValues, wValues);\n                    } else if (inputDepthVec4Remainder == 3) {\n                      ${a?"let xValues = vec3<f32>(\n                        getX(batch, xF, xR, xC, inputDepthNearestVec4),\n                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),\n                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2));\n                      ":"let xValues = vec3<f32>(\n                        getX(batch, inputDepthNearestVec4, xF, xR, xC),\n                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC),\n                        getX(batch, inputDepthNearestVec4 + 2, xF, xR, xC));\n                    "}\n                    let wValues = vec3<f32>(\n                      getW(d2, inputDepthNearestVec4, wF, wR, wC),\n                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC),\n                      getW(d2, inputDepthNearestVec4 + 2, wF, wR, wC));\n                      value += dot(xValues, wValues);\n                    }\n                  }\n                }\n              }\n              ${d?"value = value + getBiasByOutputCoords(coords)":""};\n              ${_}\n              result[global_idx] = f32(value);\n          }`}}}}),oc=ue(()=>{Iu(),Ou(),Vu(),ec(),Ri=(e,t,n,r)=>{let s=e.length>2,i=s?"value += b[output_channel];":"",a=e[0].dims,o=e[1].dims,l="NHWC"===t.format,u=l?n[3]:n[1],c=u/t.group,d=l&&c>=4?vn(u):1,p=jt.size(n)/d,h=[{type:12,data:p},{type:12,data:t.dilations},{type:12,data:[t.strides[0],t.strides[1]]},{type:12,data:[t.pads[0],t.pads[1]]},{type:12,data:c}];fi(t,h),h.push(...xn(a,[o[0],o[1],o[2],o[3]/d]));let m=s?["rank","rank","rank"]:["rank","rank"];return h.push(...xn([n[0],n[1],n[2],n[3]/d])),{name:"GroupedConv",shaderCache:{hint:`${t.cacheKey}_${d}`,inputDependencies:m},getRunData:()=>({outputs:[{dims:r?r(n):n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:h}),getShaderSource:r=>{let u=En("output",e[0].dataType,n.length,d),c=yn(u.type.tensor),p=mi(t,u.type.value,c),h=Cn("x",e[0].dataType,a.length),m=Cn("w",e[1].dataType,o.length,d),f=[h,m];s&&f.push(Cn("b",e[2].dataType,e[2].dims,d));let _=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:t.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];_i(t,_);let g=l?`\n      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[0]; wHeight++) {\n        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];\n\n        if (xHeight < 0u || xHeight >= uniforms.x_shape[1]) {\n          continue;\n        }\n\n        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[1]; wWidth++) {\n          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];\n          if (xWidth < 0u || xWidth >= uniforms.x_shape[2]) {\n            continue;\n          }\n\n          for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[2]; wInChannel++) {\n            let input_channel = in_channel_offset + wInChannel;\n            let xVal = ${h.get("batch","xHeight","xWidth","input_channel")};\n            let wVal = ${m.get("wHeight","wWidth","wInChannel","output_channel")};\n            value += xVal * wVal;\n          }\n        }\n      }\n      `:`\n      for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {\n        let input_channel = in_channel_offset + wInChannel;\n        for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {\n          let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];\n\n          if (xHeight < 0u || xHeight >= uniforms.x_shape[2]) {\n            continue;\n          }\n\n          for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {\n            let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];\n            if (xWidth < 0u || xWidth >= uniforms.x_shape[3]) {\n              continue;\n            }\n\n            let xVal = ${h.get("batch","input_channel","xHeight","xWidth")};\n            let wVal = ${m.get("output_channel","wInChannel","wHeight","wWidth")};\n            value += xVal * wVal;\n          }\n        }\n      }\n      `;return`\n  ${r.registerUniforms(_).declareVariables(...f,u)}\n\n  ${r.mainStart()}\n    ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let outputIndices = ${u.offsetToIndices("global_idx")};\n    let batch: u32 = outputIndices[0];\n    let output_channel: u32 = outputIndices[${l?3:1}];\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${l?1:2}], outputIndices[${l?2:3}]) * uniforms.strides - uniforms.pads;\n    let group_id: u32 = output_channel * ${d} / uniforms.output_channels_per_group;\n    var in_channel_offset = group_id * uniforms.w_shape[${l?2:1}];\n\n    var value: ${u.type.value} = ${u.type.value}(0);\n    ${g}\n    ${i}\n    ${p}\n    ${u.setByOffset("global_idx","value")}\n  }`}}},Vi=(e,t,n,r)=>{let s=e.length>2,i=vn(n[3]),a=vn(n[2]),o=jt.size(n)/i/a,l=[e[0].dims[0],e[0].dims[1],e[0].dims[2],e[0].dims[3]/i],u=[e[1].dims[0],e[1].dims[1],e[1].dims[2],e[1].dims[3]/i],c=[n[0],n[1],n[2],n[3]/i],d=[{type:12,data:o},{type:6,data:[t.strides[0],t.strides[1]]},{type:6,data:[t.pads[0],t.pads[1]]}];fi(t,d),d.push(...xn(l,u,c));let p=(a-1)*t.strides[1]+u[1];return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${t.cacheKey};${i};${a};${p};${u[0]};${u[1]}`,inputDependencies:s?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:r?r(n):n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:d}),getShaderSource:n=>{let r=En("output",e[0].dataType,c.length,i),o=yn(r.type.tensor),d=mi(t,r.type.value,o),h=Cn("x",e[0].dataType,l.length,i),m=Cn("w",e[1].dataType,u.length,i),f=[h,m];s&&f.push(Cn("b",e[2].dataType,e[2].dims,i));let _=s?"value += b[output_channel];":"",g=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return _i(t,g),`\n  ${n.registerUniforms(g).declareVariables(...f,r)}\n  ${n.mainStart()}\n    ${n.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let width0 = uniforms.output_shape[3];\n    let output_channel = global_idx % width0;\n    var index1 = global_idx / width0;\n    let width1 = uniforms.output_shape[2] / ${a}u;\n    let col = (index1 % width1) * ${a}u;\n    index1 = index1 / width1;\n    let row = index1 % uniforms.output_shape[1];\n    let batch = index1 / uniforms.output_shape[1];\n\n    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;\n\n    var x_vals: array<${h.type.value}, ${p}>;\n    var values: array<${r.type.value}, ${a}>;\n    let input_channel = output_channel;\n    // Use constant instead of uniform can give better performance for w's height/width.\n    for (var w_height: u32 = 0u; w_height < ${u[0]}; w_height++) {\n      let x_height = x_corner.x + i32(w_height);\n      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {\n        for (var i = 0; i < ${p}; i++) {\n          let x_width = x_corner.y + i;\n          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {\n            x_vals[i] = ${h.get("batch","u32(x_height)","u32(x_width)","input_channel")};\n          } else {\n            x_vals[i] = ${h.type.value}(0);\n          }\n        }\n        for (var w_width: u32 = 0u; w_width < ${u[1]}; w_width++) {\n          let w_val = ${m.get("w_height","w_width","0","output_channel")};\n          for (var i = 0u; i < ${a}u; i++) {\n            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);\n          }\n        }\n      }\n    }\n\n    for (var i = 0u; i < ${a}u; i++) {\n      var value = values[i];\n      ${_}\n      ${d}\n      ${r.set("batch","row","col + i","output_channel","value")};\n    }\n  }`}}}}),lc=ue(()=>{Ou(),ic(),ac(),sc(),oc(),ec(),rc(),Gu(),Gi=(e,t,n,r,s,i)=>{let a=e[0],o=e.slice(i?1:2,i?3:4),l=o.length,u=t[0],c=t.slice(2).map((e,t)=>e+(e-1)*(n[t]-1)),d=o.map((e,t)=>e+r[t]+r[t+l]).map((e,t)=>Math.floor((e-c[t]+s[t])/s[t]));return d.splice(0,0,a),d.splice(i?3:1,0,u),d},Ui=[2,3,1,0],qi=(e,t)=>{if(!e||2!==e.length&&3!==e.length)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length>5)throw new Error("greater than 5D is not supported");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");if(e[0].dims["NHWC"===t.format?e[0].dims.length-1:1]!==e[1].dims[1]*t.group)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(3===e.length&&(1!==e[2].dims.length||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let n=e[0].dims.length-2;if(t.dilations.length!==n)throw new Error(`dilations should be ${n}D`);if(t.strides.length!==n)throw new Error(`strides should be ${n}D`);if(t.pads.length!==2*n)throw new Error(`pads should be ${2*n}D`);if(0!==t.kernelShape.length&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},Wi=(e,t)=>{let n=e.kernelShape.slice();n.length<t[1].dims.length-2&&n.push(...Array(t[1].dims.length-2-n.length).fill(0));for(let e=2;e<t[1].dims.length;++e)0===n[e-2]&&(n[e-2]=t[1].dims[e]);let r=e.pads.slice();Rt.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,n,r,"NHWC"===e.format,e.autoPad);let s=Object.assign({},e);return Object.assign(s,{kernelShape:n,pads:r}),s},Hi=e=>{let t=gi(e),n=e.format;return{autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],format:n,dilations:e.dilations,group:e.group,kernelShape:e.kernel_shape,pads:e.pads,strides:e.strides,wIsConst:e.w_is_const(),...t,cacheKey:`${e.format};${t.activation};`}},Ki=(e,t,n,r)=>{let s="NHWC"===n.format,i=Gi(t[0].dims,t[1].dims,n.dilations,n.pads,n.strides,s);if(1!==n.group){let a=[t[0]];if(s){let r=e.kernelCustomData.wT??e.compute(jn(t[1],Ui),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];n.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=r),a.push(r)}else a.push(t[1]);return 3===t.length&&a.push(t[2]),void(!e.adapterInfo.isArchitecture("ampere")&&s&&t[1].dims[0]===n.group&&1===t[1].dims[1]&&1===n.dilations[0]&&1===n.dilations[1]?e.compute(Vi(a,n,i,r),{inputs:a}):e.compute(Ri(a,n,i,r),{inputs:a}))}let a=3===t.length,o=t[0].dims[s?1:2],l=t[0].dims[s?2:3],u=t[0].dims[s?3:1],c=t[1].dims[2],d=t[1].dims[3],p=i[s?1:2],h=i[s?2:3],m=i[s?3:1],f=s&&c===o&&d===l&&0===n.pads[0]&&0===n.pads[1];if(f||1===c&&1===d&&1===n.dilations[0]&&1===n.dilations[1]&&1===n.strides[0]&&1===n.strides[1]&&0===n.pads[0]&&0===n.pads[1]){let c,d,_,g=i[0],w=[];if(s){let r=e.kernelCustomData.wT??e.compute(jn(t[1],Ui),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];if(n.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=r),f){let e=o*l*u;c=t[0].reshape([1,g,e]),d=r.reshape([1,e,m]),_=[1,g,m]}else c=t[0].reshape([g,o*l,u]),d=r.reshape([1,u,m]),_=[g,p*h,m];w.push(c),w.push(d)}else c=t[0].reshape([g,u,o*l]),d=t[1].reshape([1,m,u]),_=[g,m,p*h],w.push(d),w.push(c);a&&w.push(t[2]);let y=_[2],b=w[0].dims[w[0].dims.length-1];return void(y<8&&b<8?e.compute(vi(w,n,i,_,s,r),{inputs:w}):e.compute(Pi(w,n,i,_,s,r),{inputs:w}))}let _=e.kernelCustomData.wT??e.compute(jn(t[1],Ui),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];n.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=_);let g=[t[0],_];a&&g.push(t[2]);let w=s?p*h:m,y=s?m:p*h,b=c*d*u;e.compute(Ii(g,n,i,w,y,b,a,!0,r),{inputs:g})},Qi=(e,t)=>{let n="NHWC"===t.format,r=[e.inputs[0].reshape(n?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];3===e.inputs.length&&r.push(e.inputs[2]);let s=[0,t.pads[0],0,t.pads[1]],i=[1].concat(t.strides),a=[1].concat(t.dilations),o=[1].concat(t.kernelShape),l=Wi({...t,pads:s,strides:i,dilations:a,kernelShape:o},r);Ki(e,r,l,e=>n?[e[0],e[2],e[3]]:[e[0],e[1],e[3]])},Xi=(e,t,n)=>{let r="NHWC"===n.format?"channelsLast":"channelsFirst",s=Wi(n,t),i="NOTSET"===n.autoPad?n.pads:n.autoPad,a=Ni(t[0].dims,t[1].dims,n.strides,n.dilations,i,!1,r);e.compute(ji(t,s,a.outShape,[a.filterDepth,a.filterHeight,a.filterWidth],[a.padInfo.front,a.padInfo.top,a.padInfo.left],r))},Ji=(e,t)=>{if(qi(e.inputs,t),3===e.inputs[0].dims.length)Qi(e,t);else if(5===e.inputs[0].dims.length)Xi(e,e.inputs,t);else{let n=Wi(t,e.inputs);Ki(e,e.inputs,n)}}}),uc=ue(()=>{Iu(),zu(),Ou(),Vu(),Yi=(e,t,n)=>{let r=e.length>2,s=t.outputShape,i="NHWC"===t.format,a=t.group,o=e[1].dims,l=o[2]/a,u=o[3],c=i?vn(l):1,d=i&&1===u&&l>=4,p=d?4*Math.floor(l/4):Math.floor(l/c)*c,h=l-p,m=i?vn(u):1,f=i?1===u?c:m:1,_=jt.size(s)/m,g=[Math.ceil(_/64),1,1];Bt("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${g}`);let w=["rank","rank"],y=[t.strides[0],t.strides[1]],b=[t.kernelShape[i?1:2],t.kernelShape[i?2:3]],x=[t.dilations[0],t.dilations[1]],v=[b[0]+(t.dilations[0]<=1?0:(t.kernelShape[i?1:2]-1)*(t.dilations[0]-1)),b[1]+(t.dilations[1]<=1?0:(t.kernelShape[i?2:3]-1)*(t.dilations[1]-1))],M=[v[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),v[1]-1-Math.floor((t.pads[1]+t.pads[3])/2)],k=[{type:12,data:_},{type:12,data:y},{type:12,data:b},{type:12,data:x},{type:12,data:v},{type:6,data:M},{type:12,data:p},{type:12,data:l},{type:12,data:u},...xn(e[0].dims,e[1].dims)];return r&&(k.push(...xn(e[2].dims)),w.push("rank")),k.push(...xn(s)),{name:"ConvTranspose2D",shaderCache:{hint:`${t.cacheKey};${c}${f}${m}${d}${h}`,inputDependencies:w},getRunData:()=>({dispatchGroup:{x:g[0],y:g[1],z:g[2]},outputs:[{dims:n?n(s):s,dataType:e[0].dataType}],programUniforms:k}),getShaderSource:t=>{let n=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:y.length},{name:"filter_dims",type:"u32",length:b.length},{name:"dilations",type:"u32",length:b.length},{name:"effective_filter_dims",type:"u32",length:v.length},{name:"pads",type:"i32",length:M.length},{name:"input_channels_per_group_int",type:"u32"},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],a=yn(e[0].dataType),o=i?1:2,l=i?2:3,u=i?3:1,p=Cn("W",e[1].dataType,e[1].dims.length,f),_=Cn("Dy",e[0].dataType,e[0].dims.length,c),g=[_,p];r&&g.push(Cn("bias",e[2].dataType,[s[u]].length,m));let w=En("result",e[0].dataType,s.length,m),x=`\n            let outputIndices = ${w.offsetToIndices(`global_idx * ${m}`)};\n            let batch = ${w.indicesGet("outputIndices",0)};\n            let d1 = ${w.indicesGet("outputIndices",u)};\n            let r = ${w.indicesGet("outputIndices",o)};\n            let c = ${w.indicesGet("outputIndices",l)};\n            let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;\n            let dyRCorner = dyCorner.x;\n            let dyCCorner = dyCorner.y;\n            let groupId = d1 / uniforms.output_channels_per_group;\n            let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;\n            // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n            // ? = to be determined. : = across all values in that axis.\n            var dotProd = ${w.type.value}(0.0);\n            var wR: u32 = 0;\n            if (uniforms.dilations.x == 1) {\n              // Minimum wR >= 0 that satisfies (dyRCorner + wR) % (uniforms.strides.x) == 0\n              wR = u32(((dyRCorner + i32(uniforms.strides.x) - 1) / i32(uniforms.strides.x)) * i32(uniforms.strides.x) - dyRCorner);\n            }\n            for (; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {\n              if (wR % uniforms.dilations.x != 0) {\n                continue;\n              }\n              let dyR = (${a}(dyRCorner) + ${a}(wR)) / ${a}(uniforms.strides[0]);\n              let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;\n              if (dyR < 0.0 || dyR >= ${a}(uniforms.Dy_shape[${o}]) || fract(dyR) > 0.0 ||\n                  wRPerm < 0) {\n                continue;\n              }\n              let idyR: u32 = u32(dyR);\n              var wC: u32 = 0;\n              if (uniforms.dilations.y == 1) {\n                // Minimum wC >= 0 that satisfies (dyCCorner + wC) % (uniforms.strides.y) == 0\n                wC = u32(((dyCCorner + i32(uniforms.strides.y) - 1) / i32(uniforms.strides.y)) * i32(uniforms.strides.y) - dyCCorner);\n              }\n              for (; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {\n                if (wC % uniforms.dilations.y != 0) {\n                  continue;\n                }\n                let dyC = (${a}(dyCCorner) + ${a}(wC)) / ${a}(uniforms.strides.y);\n                let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;\n                if (dyC < 0.0 || dyC >= ${a}(uniforms.Dy_shape[${l}]) ||\n                    fract(dyC) > 0.0 || wCPerm < 0) {\n                  continue;\n                }\n                let idyC: u32 = u32(dyC);\n                var inputChannel = groupId * uniforms.input_channels_per_group;\n                ${d?`\n                var x_offset = ${_.indicesToOffset(`${_.type.indices}(batch, idyR, idyC, inputChannel)`)} / ${c};\n                var w_offset = ${p.indicesToOffset(`${p.type.indices}(wRPerm, wCPerm, inputChannel, wOutChannel)`)} / ${f};\n                  `:""}\n                for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group_int; d2 = d2 + ${d?4:c}) {\n                  ${(()=>{let e="";if(d)4===c?e+=`\n        let xValue = ${_.getByOffset("x_offset")};\n        let wValue = ${p.getByOffset("w_offset")};\n        dotProd = dotProd + dot(xValue, wValue);\n        x_offset += 1u;\n        w_offset += 1u;`:2===c?e+=`\n          dotProd = dotProd + dot(vec4<${a}>(${_.getByOffset("x_offset")}, ${_.getByOffset("x_offset + 1u")}), vec4<${a}>(${p.getByOffset("w_offset")}, ${p.getByOffset("w_offset + 1u")}));\n          x_offset += 2u;\n          w_offset += 2u;`:1===c&&(e+=`\n          dotProd = dotProd + dot(vec4<${a}>(${_.getByOffset("x_offset")}, ${_.getByOffset("x_offset + 1u")}, ${_.getByOffset("x_offset + 2u")}, ${_.getByOffset("x_offset + 3u")}), vec4<${a}>(${p.getByOffset("w_offset")}, ${p.getByOffset("w_offset + 1u")}, ${p.getByOffset("w_offset + 2u")}, ${p.getByOffset("w_offset + 3u")}));\n          x_offset += 4u;\n          w_offset += 4u;`);else if(e+=`\n                  let xValue = ${i?_.getByOffset(`${_.indicesToOffset(`${_.type.indices}(batch, idyR, idyC, inputChannel)`)} / ${c}`):_.get("batch","inputChannel","idyR","idyC")};\n        `,1===c)e+=`\n          let w_offset = ${p.indicesToOffset(`${p.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel, wOutChannel)`)};\n          let wValue = ${p.getByOffset(`w_offset / ${f}`)};\n          dotProd = dotProd + xValue * wValue;`;else for(let t=0;t<c;t++)e+=`\n            let wValue${t} = ${p.getByOffset(`${p.indicesToOffset(`${p.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel + ${t}, wOutChannel)`)} / ${f}`)};\n            dotProd = dotProd + xValue[${t}] * wValue${t};`;return e})()}\n                  inputChannel = inputChannel + ${d?4:c};\n                }\n                ${(()=>{if(0===h)return"";if(!d)throw new Error(`packInputAs4 ${d} is not true.`);let e="";if(1===c){e+="dotProd = dotProd";for(let t=0;t<h;t++)e+=`\n            + ${_.getByOffset(`x_offset + ${t}`)} * ${p.getByOffset(`w_offset + ${t}`)}`;e+=";"}else if(2===c){if(2!==h)throw new Error(`Invalid inputChannelsRemainder ${h}.`);e+=`\n          let xValue = ${_.getByOffset("x_offset")};\n          let wValue = ${p.getByOffset("w_offset")};\n          dotProd = dotProd + dot(xValue, wValue);`}return e})()}\n                wC = wC + uniforms.strides.y - 1;\n              }\n              wR = wR + uniforms.strides[0] - 1;\n            }\n            let value = dotProd${r?` + bias[d1 / ${m}]`:""};\n            ${w.setByOffset("global_idx","value")};\n          `;return`\n    ${t.registerUniforms(n).declareVariables(...g,w)}\n      ${t.mainStart()}\n      ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};\n    ${x}}`}}}}),cc=ue(()=>{uc(),ec(),Gu(),Zi=(e,t,n,r,s,i)=>(e-1)*t+n+(r-1)*s+1-i,ea=(e,t,n,r,s)=>{let i=Math.floor(e/2);"SAME_UPPER"===t?(n[r]=i,n[s]=e-i):"SAME_LOWER"===t&&(n[r]=e-i,n[s]=i)},ta=(e,t,n,r,s,i,a,o,l,u)=>{let c=e.length-2,d=0===u.length;l.length<c&&l.push(...Array(c-l.length).fill(0));let p=e[0],h=t[o?3:1]*s;for(let s=0,p=e.length-c-(o?1:0);s<c;++s,++p){let o=e[p],h=d?o*a[s]:u[s],m=Zi(o,a[s],i[s],t[p],n[s],h);ea(m,r,i,s,s+c),d&&u.push(a[s]*(o-1)+l[s]+(t[p]-1)*n[s]+1-i[s]-i[s+c])}u.splice(0,0,p),u.splice(o?3:1,0,h)},na=(e,t)=>{let n=e.kernelShape.slice();if(0===e.kernelShape.length||0===e.kernelShape.reduce((e,t)=>e*t,1)){n.length=0;for(let e=2;e<t[1].dims.length;++e)n.push(t[1].dims[e])}let r="NHWC"===e.format;n.splice(0,0,t[1].dims[0]),n.splice(r?3:1,0,t[1].dims[1]);let s=e.pads.slice(),i=e.outputShape.slice(),a=e.outputPadding.slice(),o=t[0].dims,l=e.dilations.slice();if(0===l.reduce((e,t)=>e+t,0)){let e=t[0].dims.length-2;l=new Array(e).fill(1)}let u=e.strides.slice();if(0===u.reduce((e,t)=>e+t,0)){let e=t[0].dims.length-2;u=new Array(e).fill(1)}ta(o,n,l,e.autoPad,e.group,s,u,r,a,i);let c=Object.assign({},e);return Object.assign(c,{kernelShape:n,pads:s,outputPadding:a,outputShape:i,dilations:l,strides:u}),c},ra=e=>{let t=gi(e),n=e.format,r=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],s=e.dilations,i=e.group,a=e.kernelShape,o=e.pads,l=e.strides,u=e.wIsConst();return{autoPad:r,format:n,dilations:s,group:i,kernelShape:a,outputPadding:e.outputPadding,outputShape:e.outputShape,pads:o,strides:l,wIsConst:u,...t,cacheKey:`${e.format};${t.activation};`}},sa=(e,t)=>{if(!e||2!==e.length&&3!==e.length)throw new Error("Conv requires 2 or 3 inputs");if(4!==e[0].dims.length&&3!==e[0].dims.length)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");if(e[0].dims["NHWC"===t.format?e[0].dims.length-1:1]!==e[1].dims[0])throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let n=e[1].dims[1]*t.group;if(3===e.length&&(1!==e[2].dims.length||e[2].dims[0]!==n))throw new Error("invalid bias");let r=e[0].dims.length-2;if(t.dilations.reduce((e,t)=>e+t,0)>0&&t.dilations.length!==r)throw new Error(`dilations should be ${r}D`);if(t.strides.reduce((e,t)=>e+t,0)>0&&t.strides.length!==r)throw new Error(`strides should be ${r}D`);if(t.pads.reduce((e,t)=>e+t,0)>0&&t.pads.length!==2*r)throw new Error(`pads should be ${2*r}D`);if(t.outputPadding.length!==r&&0!==t.outputPadding.length)throw new Error(`output_padding should be ${r}D`);if(t.kernelShape.reduce((e,t)=>e+t,0)>0&&0!==t.kernelShape.length&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(0!==t.outputShape.length&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},ia=(e,t,n,r)=>{let s=e.kernelCustomData.wT??e.compute(jn(t[1],[2,3,0,1]),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];n.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=s);let i=[t[0],s];3===t.length&&i.push(t[2]),e.compute(Yi(i,n,r),{inputs:i})},aa=(e,t)=>{let n="NHWC"===t.format,r=[e.inputs[0].reshape(n?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];3===e.inputs.length&&r.push(e.inputs[2]);let s=t.kernelShape;(0===s.length||0===s[0])&&(s=[e.inputs[1].dims[2]]);let i=t.dilations;(0===i.length||0===i[0])&&(i=[1]);let a=t.strides;(0===a.length||0===a[0])&&(a=[1]);let o=t.pads;0===o.length&&(o=[0,0]),o=[0,o[0],0,o[1]],a=[1].concat(a),i=[1].concat(i),s=[1].concat(s);let l=t.outputPadding;l=[0].concat(l);let u=na({...t,pads:o,strides:a,dilations:i,kernelShape:s,outputPadding:l},r);ia(e,r,u,e=>n?[e[0],e[2],e[3]]:[e[0],e[1],e[3]])},oa=(e,t)=>{if(sa(e.inputs,t),3===e.inputs[0].dims.length)aa(e,t);else{let n=na(t,e.inputs);ia(e,e.inputs,n)}}}),dc=ue(()=>{Iu(),Ou(),Ru(),Vu(),la=(e,t,n,r)=>{let s=jt.size(t),i=t.length,a=Cn("input",e,i),o=En("output",e,i),l=6===n.dataType?n.getInt32Array()[0]:Number(n.getBigInt64Array()[0]),u=jt.normalizeAxis(l,i);return{name:"CumSum",shaderCache:{hint:r.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:t,dataType:e}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:[{type:12,data:s},{type:12,data:u},...xn(t,t)]}),getShaderSource:e=>{let t=` i32(${a.indicesGet("inputIndices","uniforms.axis")}) `,n=$n("uniforms.input_shape","uniforms.axis",i),s=r.reverse?t+(r.exclusive?" + 1":""):"0",l=r.reverse?n:t+(r.exclusive?"":" + 1");return`\n                ${e.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(a,o)}\n                ${e.mainStart()}\n                  ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n                  var inputIndices = ${o.offsetToIndices("global_idx")};\n                  var sum = ${o.type.value}(0);\n                  let first : i32 = ${s};\n                  let last : i32 = ${l};\n                  for (var i : i32 = first; i < last; i++) {\n                    ${a.indicesSet("inputIndices","uniforms.axis","u32(i)")};\n                    sum = sum + ${a.getByIndices("inputIndices")};\n                  }\n                  ${o.setByOffset("global_idx","sum")};\n                }`}}},ua=(e,t)=>{let n=e.inputs[0].dims,r=e.inputs[0].dataType,s=e.inputs[1];e.compute(la(r,n,s,t),{inputs:[0]})},ca=e=>{let t=1===e.exclusive,n=1===e.reverse;return _n({exclusive:t,reverse:n})}}),pc=ue(()=>{Iu(),Ou(),Ru(),Vu(),da=e=>{if(!e||1!==e.length)throw new Error("DepthToSpace requires 1 input.");if(4!==e[0].dims.length)throw new Error("DepthToSpace requires 4D input.")},pa=(e,t,n,r)=>{let s=[];s.push(`fn perm(i: ${r.type.indices}) -> ${n.type.indices} {\n    var a: ${n.type.indices};`);for(let r=0;r<t;++r)s.push(n.indicesSet("a",e[r],`i[${r}]`));return s.push("return a;}"),s.join("\n")},ha=(e,t)=>{let n,r,s,i,a,o,l="NHWC"===t.format,u=t.blocksize,c="DCR"===t.mode;l?([n,r,s,i]=e.dims,a=c?[n,r,s,u,u,i/u**2]:[n,r,s,i/u**2,u,u],o=c?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([n,r,s,i]=[e.dims[0],e.dims[2],e.dims[3],e.dims[1]],a=c?[n,u,u,i/u**2,r,s]:[n,i/u**2,u,u,r,s],o=c?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let d=e.reshape(a),p=d.dims.length,h=e.dataType,m=Cn("a",h,p),f=En("output",h,p);return{name:"DepthToSpace",shaderCache:{hint:`${e.dims};${t.blocksize};${t.mode}`,inputDependencies:["rank"]},getRunData:e=>{let t=l?[n,r*u,s*u,i/u**2]:[n,i/u**2,r*u,s*u],a=jt.size(t),c=d.dims,p=jt.sortBasedOnPerm(c,o);return{outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:[{type:12,data:a},...xn(c,p)]}},getShaderSource:e=>`\n  ${e.registerUniform("output_size","u32").declareVariables(m,f)}\n\n  ${pa(o,p,m,f)}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let indices = ${f.offsetToIndices("global_idx")};\n    let aIndices = perm(indices);\n\n    ${f.setByOffset("global_idx",m.getByIndices("aIndices"))}\n  }`}},ma=(e,t)=>{da(e.inputs),e.compute(ha(e.inputs[0],t))},fa=e=>_n({blocksize:e.blocksize,mode:e.mode,format:e.format})}),hc=ue(()=>{Iu(),Ou(),Ru(),Vu(),wa="^"+(ga="("+(_a="[a-zA-Z]|\\.\\.\\.")+")+")+"$",ya="^("+ga+",)*"+ga+"$",ba=class{constructor(e=-1){this.symbolToIndices=new Map,this.inputIndex=e}addSymbol(e,t){let n=this.symbolToIndices.get(e);void 0===n?n=[t]:n.push(t),this.symbolToIndices.set(e,n)}},xa=class{constructor(e,t){this.equation=t,this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[n,r]=t.includes("->")?t.split("->",2):[t,""];if(!n.match(RegExp(ya)))throw new Error("Invalid LHS term");if(n.split(",").forEach((t,n)=>{let r=e[n].dims.slice();if(!t.match(RegExp(wa)))throw new Error("Invalid LHS term");let s=this.processTerm(t,!0,r,n);this.lhs.push(s)}),""===r)r+=[...this.symbolToInfo.entries()].filter(([e,t])=>1===t.count||"..."===e).map(([e])=>e).join("");else if(!r.match(RegExp(ga)))throw new Error("Invalid RHS");r.match(RegExp(_a,"g"))?.forEach(e=>{if("..."===e)this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let t=this.symbolToInfo.get(e);if(void 0===t)throw new Error("Invalid RHS symbol");this.outputDims.push(t.dimValue)}}),this.rhs=this.processTerm(r,!1,this.outputDims)}addSymbol(e,t,n){let r=this.symbolToInfo.get(e);if(void 0!==r){if(r.dimValue!==t&&1!==r.count)throw new Error("Dimension mismatch");r.count++,r.inputIndices.push(n)}else r={count:1,dimValue:t,inputIndices:[n]};this.symbolToInfo.set(e,r)}processTerm(e,t,n,r=-1){let s=n.length,i=!1,a=[],o=0;if(!e.match(RegExp(wa))&&!t&&""!==e)throw new Error("Invalid LHS term");let l=e.match(RegExp(_a,"g")),u=new ba(r);return l?.forEach((e,c)=>{if("..."===e){if(i)throw new Error("Only one ellipsis is allowed per input term");i=!0;let e=s-l.length+1;if(e<0)throw new Error("Ellipsis out of bounds");if(a=n.slice(o,o+e),this.hasEllipsis){if(this.ellipsisDims.length!==a.length||this.ellipsisDims.toString()!==a.toString())throw new Error("Ellipsis dimensions mismatch")}else{if(!t)throw new Error("Ellipsis must be specified in the LHS");this.hasEllipsis=!0,this.ellipsisDims=a}for(let e=0;e<a.length;e++){let t=String.fromCharCode(48+e);u.addSymbol(t,c+e),this.addSymbol(t,n[o++],r)}}else u.addSymbol(e,c+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(e,n[o++],r)}),u}},va=e=>e+"_max",Ma=(e,t,n,r)=>{let s=e.map(e=>e.length).map((e,n)=>Cn(`input${n}`,t,e)),i=jt.size(r),a=En("output",t,r.length),o=[...n.symbolToInfo.keys()].filter(e=>!n.rhs.symbolToIndices.has(e));return{name:"Einsum",shaderCache:{hint:n.equation,inputDependencies:e.map(()=>"rank")},getRunData:()=>{let s=o.filter(e=>n.symbolToInfo.has(e)).map(e=>({type:12,data:n.symbolToInfo.get(e)?.dimValue||0}));s.push({type:12,data:i});let a=e.map((e,t)=>[...xn(e)]).reduce((e,t)=>e.concat(t),s);return a.push(...xn(r)),{outputs:[{dims:r,dataType:t}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:a}},getShaderSource:e=>{let t=[],r=[],i=[],l=[],u=[],c=n.symbolToInfo.size===n.rhs.symbolToIndices.size;n.symbolToInfo.forEach((e,o)=>{if(n.rhs.symbolToIndices.has(o)){let r=n.rhs.symbolToIndices.get(o)?.[0];void 0!==r&&n.lhs.forEach((n,i)=>{if(e.inputIndices.includes(i)){let e=n.symbolToIndices.get(o);if(void 0===e)throw new Error("Invalid symbol error");e.forEach(e=>{t.push(`${s[i].indicesSet(`input${i}Indices`,e,a.indicesGet("outputIndices",r))}`)})}})}else n.lhs.forEach((t,n)=>{if(e.inputIndices.includes(n)){let e=t.symbolToIndices.get(o);if(void 0===e)throw new Error("Invalid symbol error");e.forEach(e=>{r.push(`${s[n].indicesSet(`input${n}Indices`,e,`${o}`)}`)}),u.push(`prod *= ${s[n].getByIndices(`input${n}Indices`)};`)}}),i.push(`for(var ${o}: u32 = 0; ${o} < uniforms.${va(o)}; ${o}++) {`),l.push("}")});let d=c?[...t,`let sum = ${s.map((e,t)=>e.getByIndices(`input${t}Indices`)).join(" * ")};`]:[...t,"var sum = 0.0;",...i,...r,"var prod = 1.0;",...u,"sum += prod;",...l];return`\n            ${e.registerUniforms(o.map(e=>({name:`${va(e)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...s,a)}\n\n            ${e.mainStart()}\n            ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n            var outputIndices = ${a.offsetToIndices("global_idx")};\n            ${s.map((e,t)=>`var input${t}Indices: ${s[t].type.indices};`).join("\n")}\n            ${d.join("\n")};\n            ${a.setByOffset("global_idx","sum")};\n          }`}}},ka=(e,t)=>{let n=new xa(e.inputs,t.equation),r=n.outputDims,s=e.inputs.map((e,t)=>e.dims);e.compute(Ma(s,e.inputs[0].dataType,n,r))},Ta=e=>{let t=e.equation.replace(/\s+/g,"");return _n({equation:t})}}),mc=ue(()=>{Iu(),Ou(),Vu(),$a=e=>{if(!e||2!==e.length)throw new Error("Expand requires 2 input.");let t=e[0].dims,n=Array.from(e[1].getBigInt64Array(),Number),r=n.length<t.length?0:n.length-t.length,s=t.length<n.length?0:t.length-n.length;for(;r<n.length&&s<t.length;++r,++s)if(n[r]!==t[s]&&1!==n[r]&&1!==t[s])throw new Error("Expand requires shape to be broadcastable to input")},Sa=(e,t)=>{let n=e.length-t.length,r=[];for(let t=0;t<n;++t)r.push(e[t]);for(let s=0;s<t.length;++s)r.push(1===t[s]?e[s+n]:t[s]);return r},Ca=(e,t)=>e.length>t.length?Sa(e,t):Sa(t,e),Ea=e=>{let t=e[0].dims,n=Array.from(e[1].getBigInt64Array(),Number),r=Ca(t,n),s=e[0].dataType,i=9===s||1===jt.size(t),a=9===s||t.length>0&&t[t.length-1]%4==0?4:1,o=i||r.length>0&&r[r.length-1]%4==0?4:1,l=Math.ceil(jt.size(r)/o),u=[{type:12,data:l},...xn(t,r)];return{name:"Expand",shaderCache:{hint:`${r.length};${a}${o}`,inputDependencies:["rank"]},getShaderSource:e=>{let n,i=Cn("input",s,t.length,a),l=En("output",s,r.length,o);if(9===s){let e=(e,t,n="")=>`\n          let outputIndices${t} = ${l.offsetToIndices(`outputOffset + ${t}u`)};\n          let offset${t} = ${i.broadcastedIndicesToOffset(`outputIndices${t}`,l)};\n          let index${t} = offset${t} / 4u;\n          let component${t} = offset${t} % 4u;\n          ${e}[${t}] = ${n}(${i.getByOffset(`index${t}`)}[component${t}]);\n        `;n=`\n        let outputOffset = global_idx * ${o};\n        var data = vec4<u32>(0);\n        ${e("data",0,"u32")}\n        ${e("data",1,"u32")}\n        ${e("data",2,"u32")}\n        ${e("data",3,"u32")}\n        ${l.setByOffset("global_idx","data")}\n      }`}else n=`\n        let outputIndices = ${l.offsetToIndices(`global_idx * ${o}`)};\n        let inputOffset = ${i.broadcastedIndicesToOffset("outputIndices",l)};\n        let data = ${l.type.value}(${i.getByOffset(`inputOffset / ${a}`)});\n        ${l.setByOffset("global_idx","data")}\n      }`;return`\n    ${e.registerUniform("vec_size","u32").declareVariables(i,l)}\n    ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n    ${n}`},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:u})}},Pa=e=>{$a(e.inputs),e.compute(Ea(e.inputs),{inputs:[0]})}}),fc=ue(()=>{Iu(),Ou(),Vu(),Xu(),Aa=e=>{let t=e[0].dataType,n=jt.size(e[0].dims),r=jt.size(e[1].dims),s=r%4==0;return{name:"FastGeluWithBias",shaderCache:{hint:`${s}`,inputDependencies:["type","type"]},getShaderSource:e=>{let n=Cn("x",t,[1],4),r=Cn("bias",t,[1],4),i=En("y",t,[1],4),a=e=>`\n      let bias${e}_offset: u32 = (global_idx * 4 + ${e}) % uniforms.bias_size;\n      let bias${e} = ${r.getByOffset(`bias${e}_offset / 4`)}[bias${e}_offset % 4];`,o=s?`\n      let bias = ${r.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${a(0)}${a(1)}${a(2)}${a(3)}\n      let bias = ${n.type.value}(bias0, bias1, bias2, bias3);`;return`${e.registerUniforms([{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}]).declareVariables(n,r,i)}\n\n    ${Ds(bn(t))}\n\n    ${e.mainStart(gn)}\n      ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}\n\n      let x = ${n.getByOffset("global_idx")};\n      ${o}\n      let x_in = x + bias;\n      ${i.setByOffset("global_idx",Ns("x_in"))}\n    }`},getRunData:e=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],programUniforms:[{type:12,data:Math.ceil(n/4)},{type:12,data:r}],dispatchGroup:{x:Math.ceil(n/gn/4)}})}},Ia=e=>{e.inputs.length<2||0===jt.size(e.inputs[1].dims)?js(e):e.compute(Aa(e.inputs))}}),_c=ue(()=>{Iu(),Ou(),Ru(),Vu(),Fa=e=>{if(!e||2!==e.length)throw new Error("Gather requires 2 inputs.")},za=(e,t)=>{let n=e[0].dims,r=e[1].dims,s=n.length,i=jt.normalizeAxis(t.axis,s),a=n.slice(0);a.splice(i,1,...r);let o=n[i],l=9===e[0].dataType?4:1,u=Math.ceil(jt.size(a)/l),c=[{type:12,data:u},{type:6,data:o},{type:12,data:i},...xn(e[0].dims,e[1].dims,a)];return{name:"Gather",shaderCache:{hint:t.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:c}),getShaderSource:t=>{let n,o=Cn("data",e[0].dataType,e[0].dims.length,l),u=Cn("inputIndices",e[1].dataType,e[1].dims.length),c=En("output",e[0].dataType,a.length,l),d=e=>{let t=r.length,n=`var indicesIndices${e}  = ${u.type.indices}(0);`;for(let r=0;r<t;r++)n+=`${t>1?`indicesIndices${e}[${r}]`:`indicesIndices${e}`} = ${a.length>1?`outputIndices${e}[uniforms.axis + ${r}]`:`outputIndices${e}`};`;n+=`\n          var idx${e} = ${u.getByIndices(`indicesIndices${e}`)};\n          if (idx${e} < 0) {\n            idx${e} = idx${e} + uniforms.axisDimLimit;\n          }\n          var dataIndices${e} : ${o.type.indices};\n        `;for(let r=0,o=0;r<s;r++)r===i?(n+=`${s>1?`dataIndices${e}[${r}]`:`dataIndices${e}`} = u32(idx${e});`,o+=t):(n+=`${s>1?`dataIndices${e}[${r}]`:`dataIndices${e}`} = ${a.length>1?`outputIndices${e}[${o}]`:`outputIndices${e}`};`,o++);return n};if(9===e[0].dataType){let e=(e,t,n="")=>`\n          let outputIndices${t} = ${c.offsetToIndices(`outputOffset + ${t}u`)};\n          ${d(t)};\n          let offset${t} = ${o.indicesToOffset(`dataIndices${t}`)};\n          let index${t} = offset${t} / 4u;\n          let component${t} = offset${t} % 4u;\n          ${e}[${t}] = ${n}(${o.getByOffset(`index${t}`)}[component${t}]);\n        `;n=`\n        let outputOffset = global_idx * ${l};\n        var value = vec4<u32>(0);\n        ${e("value",0,"u32")}\n        ${e("value",1,"u32")}\n        ${e("value",2,"u32")}\n        ${e("value",3,"u32")}\n        ${c.setByOffset("global_idx","value")}\n      `}else n=`\n      let outputIndices = ${c.offsetToIndices("global_idx")};\n      ${d("")};\n      let value = ${o.getByIndices("dataIndices")};\n      ${c.setByOffset("global_idx","value")};\n      `;return`\n      ${t.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(o,u,c)}\n      ${t.mainStart()}\n        ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        ${n}\n      }`}}},Oa=e=>_n({axis:e.axis}),La=(e,t)=>{let n=e.inputs;Fa(n),e.compute(za(e.inputs,t))}}),gc=ue(()=>{Iu(),Ou(),Vu(),Ba=(e,t,n,r,s,i,a,o,l)=>{let u=[{type:12,data:i},{type:12,data:r},{type:12,data:s},{type:12,data:n},{type:12,data:a},{type:12,data:o},{type:12,data:l}],c=[i];return u.push(...xn(t.dims,c)),e.compute({name:"computeSliceOffsets",shaderCache:{hint:`${s.length}_${n.length}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:c,dataType:e.inputs[1].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:u}),getShaderSource:e=>{let r=[Cn("indices_data",t.dataType,t.dims.length),En("input_slice_offsets_data",12,1,1)],i=[{name:"output_size",type:"u32"},{name:"batch_dims",type:"u32"},{name:"input_dims",type:"u32",length:s.length},{name:"sizes_from_slice_dims_data",type:"u32",length:n.length},{name:"num_slices_per_batch",type:"u32"},{name:"input_batch_stride",type:"u32"},{name:"num_slice_dims",type:"u32"}];return`\n  ${e.registerUniforms(i).declareVariables(...r)}\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let batch_idx = global_idx / uniforms.num_slices_per_batch;\n    let base_offset = batch_idx * uniforms.input_batch_stride;\n\n    let slice_indices_base_offset = global_idx * uniforms.num_slice_dims;\n    var relative_slice_offset = 0;\n    for (var dim_idx = 0u; dim_idx < uniforms.num_slice_dims; dim_idx ++) {\n      var index = i32(indices_data[dim_idx + slice_indices_base_offset].x);\n      let input_dim_idx = uniforms.batch_dims + dim_idx;\n      if (index < 0) {\n        ${1===s.length?"index += i32(uniforms.input_dims);":"index += i32(uniforms.input_dims[input_dim_idx]);"}\n      }\n      ${1===n.length?"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data);":"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data[dim_idx]);"}\n    }\n\n    input_slice_offsets_data[global_idx] =  base_offset + u32(relative_slice_offset);\n  }`}},{inputs:[t],outputs:[-1]})[0]},Da=(e,t)=>{let n=e.inputs,r=n[0].dims,s=n[0].dataType,i=n[1].dims,a=i[i.length-1],o=jt.sizeToDimension(i,i.length-1),l=jt.sizeFromDimension(r,t.batchDims+a),u=jt.sizeToDimension(r,t.batchDims),c=jt.sizeFromDimension(r,t.batchDims),d=o/u,p=new Array(a),h=l;for(let e=0;e<a;++e)p[a-1-e]=h,h*=r[t.batchDims+a-1-e];let m=Ba(e,n[1],p,t.batchDims,r,o,d,c,a),f=t.batchDims+a;if(f>r.length)throw new Error("last dimension of indices must not be larger than rank of input tensor");let _=i.slice(0,-1).concat(r.slice(f)),g=jt.size(_),w=[{type:12,data:g},{type:12,data:l},...xn(n[0].dims,m.dims,_)];e.compute({name:"GatherND",shaderCache:{hint:t.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:_,dataType:s}],dispatchGroup:{x:Math.ceil(g/64)},programUniforms:w}),getShaderSource:e=>{let t=Cn("data",n[0].dataType,n[0].dims.length),r=Cn("slice_offsets",12,m.dims.length),s=En("output",n[0].dataType,_.length);return`\n          ${e.registerUniform("output_size","u32").registerUniform("slice_size","u32").declareVariables(t,r,s)}\n            ${e.mainStart()}\n            ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          let slice_offset = slice_offsets[global_idx / uniforms.slice_size];\n          output[global_idx] = data[u32(slice_offset) + global_idx % uniforms.slice_size];\n        }`}},{inputs:[n[0],m]})},Na=e=>({batchDims:e.batch_dims,cacheKey:""})}),wc=ue(()=>{Iu(),Ou(),Ru(),Vu(),ja=(e,t)=>{if(e.length<3||e.length>4)throw new Error("GatherBlockQuantized requires 3 or 4 inputs.");let n=jt.normalizeAxis(t.quantizeAxis,e[0].dims.length),r=t.blockSize,s=e[0],i=e[2],a=4===e.length?e[3]:void 0;if(i.dims.length!==s.dims.length||!s.dims.map((e,t)=>t===n?Math.ceil(e/r)===i.dims[t]:e===i.dims[t]).reduce((e,t)=>e&&t,!0))throw new Error("Scales must have the same rank as the input tensor and the dims should match except on gatherAxis.");if(a){if(a.dataType!==s.dataType)throw new Error("Zero point must have the same data type as the input tensor.");if(a.dims.length!==i.dims.length||!a.dims.map((e,t)=>e===i.dims[t]).reduce((e,t)=>e&&t,!0))throw new Error("Zero point must have the same rank as the input tensor and the dims should match except on quantizeAxis.")}},Ra=(e,t)=>{let n=e[0].dims,r=e[1].dims,s=n.length,i=jt.normalizeAxis(t.gatherAxis,s),a=jt.normalizeAxis(t.quantizeAxis,s),o=n.slice(0);o.splice(i,1,...r);let l=jt.size(o),u=e[2].dataType,c=22===e[0].dataType,d=[{type:12,data:l},{type:12,data:a},{type:12,data:i},{type:12,data:t.blockSize},...xn(...e.map((e,t)=>e.dims),o)];return{name:"GatherBlockQuantized",shaderCache:{hint:`${t.cacheKey};${e.filter((e,t)=>1!==t).map(e=>e.dims.join("_")).join(";")}`,inputDependencies:Array.from({length:e.length},(e,t)=>"rank")},getRunData:()=>({outputs:[{dims:o,dataType:u}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:d}),getShaderSource:t=>{let s=Cn("data",e[0].dataType,e[0].dims.length),a=Cn("inputIndices",e[1].dataType,e[1].dims.length),l=Cn("scales",e[2].dataType,e[2].dims.length),d=e.length>3?Cn("zeroPoint",e[3].dataType,e[3].dims.length):void 0,p=En("output",u,o.length),h=[s,a,l];return d&&h.push(d),`\n        ${t.registerUniforms([{name:"output_size",type:"u32"},{name:"quantize_axis",type:"u32"},{name:"gather_axis",type:"u32"},{name:"block_size",type:"u32"}]).declareVariables(...h,p)}\n        ${t.mainStart()}\n        let output_indices = ${p.offsetToIndices("global_idx")};\n        var indices_indices = ${a.type.indices}(0);\n        ${r.length>1?`\n          for (var i: u32 = 0; i < ${r.length}; i++) {\n            let index = ${p.indicesGet("output_indices","uniforms.gather_axis + i")};\n            ${a.indicesSet("indices_indices","i","index")};\n          }`:`indices_indices = ${p.indicesGet("output_indices","uniforms.gather_axis")};`};\n        var data_indices = ${s.type.indices}(0);\n        for (var i: u32 = 0; i < uniforms.gather_axis; i++) {\n          let index = ${p.indicesGet("output_indices","i")};\n          ${s.indicesSet("data_indices","i","index")};\n        }\n        var index_from_indices = ${a.getByIndices("indices_indices")};\n        if (index_from_indices < 0) {\n          index_from_indices += ${n[i]};\n        }\n        ${s.indicesSet("data_indices","uniforms.gather_axis","u32(index_from_indices)")};\n        for (var i = uniforms.gather_axis + 1; i < ${o.length}; i++) {\n          let index = ${p.indicesGet("output_indices",`i + ${r.length} - 1`)};\n          ${s.indicesSet("data_indices","i","index")};\n        }\n        let data_offset = ${s.indicesToOffset("data_indices")};\n        let data_index = data_offset % 8;\n        // Convert 4-bit packed data to 8-bit packed data.\n        let packed_4bit_quantized_data = ${s.getByOffset("data_offset / 8")};\n        let packed_8bit_quantized_data = (packed_4bit_quantized_data >> (4 * (data_index % 2))) & 0x0f0f0f0f;\n        let quantized_data_vec = ${c?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_quantized_data));\n        let quantized_data = quantized_data_vec[data_index / 2];\n        var scale_indices = data_indices;\n        let quantize_axis_index = ${l.indicesGet("data_indices","uniforms.quantize_axis")} / uniforms.block_size;\n        ${l.indicesSet("scale_indices","uniforms.quantize_axis","quantize_axis_index")};\n        var scale = ${l.getByIndices("scale_indices")};\n        ${d?`\n              let zero_point_indices = scale_indices;\n              let zero_point_offset = ${d.indicesToOffset("zero_point_indices")};\n              let zero_point_index = zero_point_offset % 8;\n              let packed_4bit_zero_points = ${d.getByOffset("zero_point_offset / 8")};\n              let packed_8bit_zero_points = (packed_4bit_zero_points >> (4 * (zero_point_index % 2))) & 0x0f0f0f0f;\n              let zero_point_vec = ${c?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_zero_points));\n              let zero_point = zero_point_vec[zero_point_index / 2];`:"var zero_point = 0"};\n        let dequantized_data = ${bn(u)}(quantized_data - zero_point) * scale;\n        ${p.setByOffset("global_idx","dequantized_data")};\n    }`}}},Va=(e,t)=>{let n=e.inputs;ja(n,t),e.compute(Ra(e.inputs,t))},Ga=e=>_n({blockSize:e.blockSize,gatherAxis:e.gatherAxis,quantizeAxis:e.quantizeAxis})}),yc=ue(()=>{Iu(),Ou(),Ru(),Vu(),Ua=e=>{if(!e||2!==e.length)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error("GatherElements requires that the data input and\n                     indices input tensors be of same rank.")},qa=(e,t)=>{let n=e[0].dims,r=e[0].dataType,s=n.length,i=e[1].dims,a=e[1].dataType,o=jt.normalizeAxis(t.axis,s),l=n[o],u=i.slice(0),c=jt.size(u),d=Cn("input",r,s),p=Cn("indicesInput",a,i.length),h=En("output",r,u.length),m=[{type:12,data:c},{type:6,data:l},{type:12,data:o}];return m.push(...xn(n,i,u)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:u,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:m}),getShaderSource:e=>`\n      ${e.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(d,p,h)}\n      ${e.mainStart()}\n      ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n      let outputIndices = ${h.offsetToIndices("global_idx")};\n\n      var idx = ${p.getByOffset("global_idx")};\n      if (idx < 0) {\n        idx = idx + uniforms.axisDimLimit;\n      }\n      var inputIndices = ${d.type.indices}(outputIndices);\n      ${d.indicesSet("inputIndices","uniforms.axis","u32(idx)")};\n      let value = ${d.getByIndices("inputIndices")};\n\n      ${h.setByOffset("global_idx","value")};\n  }`}},Wa=e=>_n({axis:e.axis}),Ha=(e,t)=>{let n=e.inputs;Ua(n),e.compute(qa(e.inputs,t))}}),bc=ue(()=>{Iu(),Ou(),Vu(),Ka=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(3===e.length&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||3===e.length&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},Qa=(e,t)=>{let n=e[0].dims.slice(),r=e[1].dims.slice(),[s,i,a]=Vt.getShapeOfGemmResult(n,t.transA,r,t.transB,3===e.length?e[2].dims:void 0),o=[s,i];if(!o)throw new Error("Can't use gemm on the given tensors");let l=Math.ceil(i/16),u=Math.ceil(s/16),c=(jt.size(o),[{type:12,data:l},{type:12,data:s},{type:12,data:i},{type:12,data:a},{type:1,data:t.alpha},{type:1,data:t.beta}]),d=["type","type"];return 3===e.length&&(c.push(...xn(e[2].dims)),d.push("rank")),c.push(...xn(o)),{name:"GemmShared",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:l*u},programUniforms:c}),getShaderSource:n=>{let r=Cn("a",e[0].dataType,e[0].dims),s=Cn("b",e[1].dataType,e[1].dims),i=null,a=[r,s];3===e.length&&(i=Cn("c",e[2].dataType,e[2].dims.length),a.push(i));let l=En("output",e[0].dataType,o.length);a.push(l);let u="",c="";t.transA&&t.transB?(c=`\n      var col = tile_row_start + local_id.x;\n      var row = k_start + local_id.y;\n      if (col < uniforms.M && row < uniforms.K) {\n        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];\n      } else {\n        tile_a[local_id.y][local_id.x] = ${r.type.value}(0);\n      }\n\n      col = k_start + local_id.x;\n      row = tile_col_start + local_id.y;\n      if (col < uniforms.K && row < uniforms.N) {\n        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];\n      } else {\n        tile_b[local_id.y][local_id.x] = ${s.type.value}(0);\n      }\n      `,u="value += tile_a[k][local_id.y] * tile_b[local_id.x][k];"):t.transA&&!t.transB?(c=`\n      var col = tile_row_start + local_id.x;\n      var row = k_start + local_id.y;\n      if (col < uniforms.M && row < uniforms.K) {\n        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];\n      } else {\n        tile_a[local_id.y][local_id.x] = ${r.type.value}(0);\n      }\n\n      col = tile_col_start + local_id.x;\n      row = k_start + local_id.y;\n      if (col < uniforms.N && row < uniforms.K) {\n        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];\n      } else {\n        tile_b[local_id.y][local_id.x] = ${s.type.value}(0);\n      }\n      `,u="value += tile_a[k][local_id.y] * tile_b[k][local_id.x];"):!t.transA&&t.transB?(c=`\n      var col = k_start + local_id.x;\n      var row = tile_row_start + local_id.y;\n      if (col < uniforms.K && row < uniforms.M) {\n        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];\n      } else {\n        tile_a[local_id.y][local_id.x] = ${r.type.value}(0);\n      }\n\n      col = k_start + local_id.x;\n      row = tile_col_start + local_id.y;\n      if (col < uniforms.K && row < uniforms.N) {\n        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];\n      } else {\n        tile_b[local_id.y][local_id.x] = ${s.type.value}(0);\n      }\n      `,u="value += tile_a[local_id.y][k] * tile_b[local_id.x][k];"):!t.transA&&!t.transB&&(c=`\n      var col = k_start + local_id.x;\n      var row = tile_row_start + local_id.y;\n      if (col < uniforms.K && row < uniforms.M) {\n        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];\n      } else {\n        tile_a[local_id.y][local_id.x] = ${r.type.value}(0);\n      }\n\n      col = tile_col_start + local_id.x;\n      row = k_start + local_id.y;\n      if (col < uniforms.N && row < uniforms.K) {\n        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];\n      } else {\n        tile_b[local_id.y][local_id.x] = ${s.type.value}(0);\n      }\n      `,u="value += tile_a[local_id.y][k] * tile_b[k][local_id.x];");let d=1===t.alpha?"":"value *= uniforms.alpha;";return`\n  ${n.registerUniforms([{name:"num_tile_n",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}]).declareVariables(...a)}\n  var<workgroup> tile_a: array<array<${r.type.storage}, 16>, 16>;\n  var<workgroup> tile_b: array<array<${s.type.storage}, 16>, 16>;\n  ${n.mainStart([16,16,1])}\n    let tile_col_start = (workgroup_index % uniforms.num_tile_n) * 16;\n    let tile_row_start = (workgroup_index / uniforms.num_tile_n) * 16;\n    let num_tiles = (uniforms.K - 1) / 16 + 1;\n    var k_start = 0u;\n    var value = ${l.type.value}(0);\n    for (var t: u32 = 0u; t < num_tiles; t++) {\n      ${c}\n      k_start = k_start + 16;\n      workgroupBarrier();\n\n      for (var k: u32 = 0u; k < 16; k++) {\n        ${u}\n      }\n      workgroupBarrier();\n    }\n\n    ${d}\n    let m = tile_row_start + local_id.y;\n    let n = tile_col_start + local_id.x;\n    ${null!=i?`let cOffset = ${i.broadcastedIndicesToOffset("vec2(m, n)",l)}; value += ${l.type.value}(uniforms.beta) * ${i.getByOffset("cOffset")};`:""}\n    if (m < uniforms.M && n < uniforms.N) {\n      output[m * uniforms.N + n] = value;\n    }\n  }`}}},Xa=e=>({transA:e.transA,transB:e.transB,alpha:e.alpha,beta:e.beta,cacheKey:`${e.transA};${e.transB};${1===e.alpha}`}),Ja=(e,t)=>{Ka(e.inputs),e.compute(Qa(e.inputs,t))}}),xc=ue(()=>{Iu(),Ou(),Ru(),Vu(),[Ya,Za,eo,to]=[0,1,2,3],no=e=>{if(4!==e[0].dims.length)throw new Error("only 4-D tensor is supported.");if(e[0].dims.length!==e[1].dims.length)throw new Error("input dimensions must be equal to grid dimensions");if(e[0].dims.length-2!==e[1].dims[e[1].dims.length-1])throw new Error("last dimension of grid must be equal to "+(e[0].dims.length-2));if(e[0].dims[0]!==e[1].dims[0])throw new Error("grid batch size must match input batch size")},ro=e=>`\n  fn gs_bicubic_interpolate(p: mat4x4<${e}>, x: f32, y: f32) -> ${e} {\n    var v: vec4<f32>;\n    var coeffs = gs_get_cubic_coeffs(x);\n    for (var i = 0; i < 4; i++) {\n      v[i] = coeffs[0] * p[i][0] + coeffs[1] * p[i][1] + coeffs[2] * p[i][2] + coeffs[3] * p[i][3];\n    }\n    coeffs = gs_get_cubic_coeffs(y);\n    let pixel = ${e}(coeffs[0] * v[0] + coeffs[1] * v[1] + coeffs[2] * v[2] + coeffs[3] * v[3]);\n    return pixel;\n  }\n`,so=e=>`\n  fn gs_denormalize(n: f32, length: i32) -> f32 {\n    ${0===e.alignCorners?"\n    // alignCorners: false => [-1, 1] to [-0.5, length - 0.5]\n    return ((n + 1.0) * f32(length) - 1.0) / 2.0;\n    ":"\n    // alignCorners: true => [-1, 1] to [0, length - 1]\n    return (n + 1.0) / 2.0 * (f32(length - 1));\n    "}\n  }\n`,io=e=>`\n  ${"reflection"===e.paddingMode?"\n      fn gs_reflect(x: i32, x_min: f32, x_max: f32) -> u32 {\n        var dx = 0.0;\n        var fx = f32(x);\n        let range = x_max - x_min;\n        if (fx < x_min) {\n          dx = x_min - fx;\n          let n = u32(dx / range);\n          let r = dx - f32(n) * range;\n          if (n % 2 == 0) {\n            fx = x_min + r;\n          } else {\n            fx = x_max - r;\n          }\n        } else if (fx > x_max) {\n          dx = fx - x_max;\n          let n = u32(dx / range);\n          let r = dx - f32(n) * range;\n          if (n % 2 == 0) {\n            fx = x_max - r;\n          } else {\n            fx = x_min + r;\n          }\n        }\n        return u32(fx);\n      }":""}\n`,ao=(e,t,n)=>`\n  fn pixel_at_grid(r: i32, c: i32, H: i32, W: i32, batch: u32, channel: u32, border: vec4<f32>) -> ${t} {\n     var pixel = ${t}(0);\n     var indices = vec4<u32>(0);\n     indices[${Ya}] = batch;\n     indices[${Za}] = channel;`+(()=>{switch(n.paddingMode){case"zeros":return`\n          if (r >= 0 && r < H && c >=0 && c < W) {\n            indices[${eo}] = u32(r);\n            indices[${to}] = u32(c);\n          } else {\n            return ${t}(0);\n          }\n        `;case"border":return`\n          indices[${eo}] = u32(clamp(r, 0, H - 1));\n          indices[${to}] = u32(clamp(c, 0, W - 1));\n        `;case"reflection":return`\n          indices[${eo}] = gs_reflect(r, border[1], border[3]);\n          indices[${to}] = gs_reflect(c, border[0], border[2]);\n        `;default:throw new Error(`padding mode ${n.paddingMode} is not supported`)}})()+`\n    return ${e.getByIndices("indices")};\n  }\n`,oo=(e,t,n)=>(()=>{switch(n.mode){case"nearest":return`\n          let result = pixel_at_grid(i32(round(y)), i32(round(x)), H_in, W_in, indices[${Ya}], indices[${Za}], border);\n        `;case"bilinear":return`\n          let x1 = i32(floor(x));\n          let y1 = i32(floor(y));\n          let x2 = x1 + 1;\n          let y2 = y1 + 1;\n\n          let p11 = pixel_at_grid(y1, x1, H_in, W_in, indices[${Ya}], indices[${Za}], border);\n          let p12 = pixel_at_grid(y1, x2, H_in, W_in, indices[${Ya}], indices[${Za}], border);\n          let p21 = pixel_at_grid(y2, x1, H_in, W_in, indices[${Ya}], indices[${Za}], border);\n          let p22 = pixel_at_grid(y2, x2, H_in, W_in, indices[${Ya}], indices[${Za}], border);\n\n          let dx2 = ${t}(f32(x2) - x);\n          let dx1 = ${t}(x - f32(x1));\n          let dy2 = ${t}(f32(y2) - y);\n          let dy1 = ${t}(y - f32(y1));\n          let result = dy2 * (dx2 * p11 + dx1 * p12) + dy1 * (dx2 * p21 + dx1 * p22);\n        `;case"bicubic":return`\n          let x0 = i32(floor(x)) - 1;\n          let y0 = i32(floor(y)) - 1;\n          var p: mat4x4<${t}>;\n          for (var h = 0; h < 4; h++) {\n            for (var w = 0; w < 4; w++) {\n              p[h][w] = pixel_at_grid(h + y0, w + x0, H_in, W_in, indices[${Ya}], indices[${Za}], border);\n            }\n          }\n\n          let dx = x - f32(x0 + 1);\n          let dy = y - f32(y0 + 1);\n          let result = gs_bicubic_interpolate(p, dx, dy);\n        `;default:throw new Error(`mode ${n.mode} is not supported`)}})()+`${e.setByOffset("global_idx","result")}`,lo=(e,t)=>{let n=Cn("x",e[0].dataType,e[0].dims.length),r=[e[1].dims[0],e[1].dims[1],e[1].dims[2]],s=Cn("grid",e[1].dataType,r.length,2),i=[e[0].dims[0],e[0].dims[1],e[1].dims[1],e[1].dims[2]];"NHWC"===t.format&&(i=[e[0].dims[0],e[1].dims[1],e[1].dims[2],e[0].dims[3]],[Ya,Za,eo,to]=[0,3,1,2]);let a=En("output",e[0].dataType,i.length),o=n.type.value,l=[{type:12,data:jt.size(i)},...xn(e[0].dims,r,i)];return{name:"GridSample",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:["type","type"]},getRunData:e=>{let t=jt.size(i);return{outputs:[{dims:i,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(t/64)},programUniforms:l}},getShaderSource:e=>`\n  ${e.registerUniform("output_size","u32").declareVariables(n,s,a)}\n  \n  fn gs_get_cubic_coeffs(x: f32) -> vec4<f32> {\n    let cubic_alpha = -0.75f;\n    let x_abs = abs(x);\n    var coeffs: vec4<f32>;\n    coeffs[0] = (((cubic_alpha * (x_abs + 1) - 5 * cubic_alpha) * (x_abs + 1) + 8 * cubic_alpha) * (x_abs + 1) - 4 * cubic_alpha);\n    coeffs[1] = (((cubic_alpha + 2) * x_abs - (cubic_alpha + 3)) * x_abs * x_abs + 1);\n    coeffs[2] = (((cubic_alpha + 2) * (1 - x_abs) - (cubic_alpha + 3)) * (1 - x_abs) * (1 - x_abs) + 1);\n    coeffs[3] = (((cubic_alpha * (2 - x_abs) - 5 * cubic_alpha) * (2 - x_abs) + 8 * cubic_alpha) * (2 - x_abs) - 4 * cubic_alpha);\n    return coeffs;\n  }\n\n  ${ro(o)}\n  ${so(t)}\n  ${io(t)}\n  ${ao(n,o,t)}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n      let H_in = i32(uniforms.x_shape[${eo}]);\n      let W_in = i32(uniforms.x_shape[${to}]);\n\n      ${0===t.alignCorners?"\n      let x_min = -0.5;\n      let x_max = f32(W_in) - 0.5;\n      let y_min = -0.5;\n      let y_max = f32(H_in) - 0.5;\n      ":"\n      let x_min = 0.0;\n      let x_max = f32(W_in) - 1.0;\n      let y_min = 0.0;\n      let y_max = f32(H_in) - 1.0;\n      "};\n      let border = vec4<f32>(x_min, y_min, x_max, y_max);\n\n      let indices = ${a.offsetToIndices("global_idx")};\n      var grid_indices = vec3<u32>(indices[${Ya}], indices[${eo}], indices[${to}]);\n      let nxy = ${s.getByIndices("grid_indices")};\n      var x = gs_denormalize(f32(nxy[0]), W_in);\n      var y = gs_denormalize(f32(nxy[1]), H_in);\n\n      ${oo(a,o,t)}\n  }`}},uo=(e,t)=>{no(e.inputs),e.compute(lo(e.inputs,t))},co=e=>_n({alignCorners:e.align_corners,mode:e.mode,paddingMode:e.padding_mode,format:e.format})}),vc=ue(()=>{Iu(),Ou(),Ru(),Nu(),Hu(),Vu(),Gu(),po=(e,t)=>e.length>t&&e[t].dims.length>0?e[t]:void 0,ho=(e,t)=>{let n=e[0],r=po(e,1),s=po(e,2),i=po(e,3),a=po(e,4),o=po(e,5),l=po(e,6),u=po(e,7);if(3!==n.dims.length&&5!==n.dims.length)throw new Error("Input query is expected to have 3 or 5 dimensions");let c,d=n.dims[0],p=n.dims[1],h=3===n.dims.length?n.dims[2]:t.numHeads*n.dims[4],m=p,f=0,_=0,g=Math.floor(h/t.numHeads);if(l&&u&&jt.size(l.dims)&&jt.size(u.dims)){if(4!==l.dims.length)throw new Error('Input "past_key" is expected to have 4 dimensions');if(l.dims[0]!==d||l.dims[1]!==t.numHeads||l.dims[3]!==g)throw new Error('Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)');if(u.dims[0]!==d||u.dims[1]!==t.numHeads||u.dims[3]!==g)throw new Error('Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)');if(l.dims[2]!==u.dims[2])throw new Error('Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)');if(4!==u.dims.length)throw new Error('Input "past_value" is expected to have 4 dimensions');f=l.dims[2],_=l.dims[2]}else if(l&&jt.size(l.dims)||u&&jt.size(u.dims))throw new Error('Input "past_key" and "past_value" shall be both present or both absent');if(r&&jt.size(r.dims)>0){if(3!==n.dims.length)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(r.dims.length<3||r.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(n.dims[0]!==r.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(3===r.dims.length){if(r.dims[2]!==n.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');c=2,m=r.dims[1]}else if(5===r.dims.length){if(r.dims[2]!==t.numHeads||2!==r.dims[3]||r.dims[4]!==g)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(s)throw new Error('Expect "value" be none when "key" has packed kv format.');c=5,m=r.dims[1]}else{if(r.dims[1]!==t.numHeads||r.dims[3]!==g)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');c=0,m=r.dims[2]}}else{if(5!==n.dims.length)throw new Error('Input "query" is expected to have 5 dimensions when key is empty');if(n.dims[2]!==t.numHeads||3!==n.dims[3])throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');c=3}if(i&&jt.size(i.dims)>0){if(1!==i.dims.length)throw new Error('Input "bias" is expected to have 1 dimension');if(r&&5===r.dims.length&&2===r.dims[3])throw new Error("bias is not allowed for packed kv.")}let w=f+m,y=0;if(a&&jt.size(a.dims)>0){y=8;let e=a.dims;throw 1===e.length?e[0]===d?y=1:e[0]===3*d+2&&(y=3):2===e.length&&e[0]===d&&e[1]===w&&(y=5),8===y?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, total_sequence_length)'):new Error("Mask not supported")}let b=!1,x=h;if(s&&jt.size(s.dims)>0){if(3!==s.dims.length&&4!==s.dims.length)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(n.dims[0]!==s.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(3===s.dims.length){if(m!==s.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');x=s.dims[2]}else{if(m!==s.dims[2])throw new Error('Input "key" and "value" shall have the same dim 2 (kv_sequence_length)');x=s.dims[1]*s.dims[3],b=!0}}if(a&&jt.size(a.dims)>0)throw new Error("Key padding mask is not supported");if(o&&jt.size(o.dims)>0){if(4!==o.dims.length)throw new Error('Input "attention_bias" is expected to have 4 dimensions');if(o.dims[0]!==d||o.dims[1]!==t.numHeads||o.dims[2]!==p||o.dims[3]!==w)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:d,sequenceLength:p,pastSequenceLength:f,kvSequenceLength:m,totalSequenceLength:w,maxSequenceLength:_,inputHiddenSize:0,hiddenSize:h,vHiddenSize:x,headSize:g,vHeadSize:Math.floor(x/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:y,scale:t.scale,broadcastResPosBias:!1,passPastInKv:b,qkvFormat:c}},mo=e=>_n({...e}),fo=_n({perm:[0,2,1,3]}),_o=(e,t,n,r,s,i,a)=>{let o=[r,s,i],l=jt.size(o),u=[{type:12,data:l},{type:12,data:a},{type:12,data:i}];return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:o,dataType:t.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:u}),getShaderSource:e=>{let r=En("qkv_with_bias",t.dataType,o),s=Cn("qkv",t.dataType,o),i=Cn("bias",n.dataType,o);return`\n  ${e.registerUniforms([{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}]).declareVariables(s,i,r)}\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;\n\n    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];\n  }`}},{inputs:[t,n],outputs:[-1]})[0]},go=(e,t,n,r,s,i,a,o)=>{let l=i;if(a&&jt.size(a.dims)>0){if(1===r)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return l=_o(e,i,a,t,r,n*s,o),l=l.reshape([t,r,n,s]),1===n||1===r?l:e.compute(jn(l,fo.perm),{inputs:[l],outputs:[-1]})[0]}return 3===i.dims.length&&(l=i.reshape([t,r,n,s])),1===n||1===r?l:e.compute(jn(l,fo.perm),{inputs:[l],outputs:[-1]})[0]},wo=(e,t)=>{let n=ho(e.inputs,t),r=e.inputs[0],s=po(e.inputs,1),i=po(e.inputs,2),a=po(e.inputs,3),o=po(e.inputs,4),l=po(e.inputs,5),u=po(e.inputs,6),c=po(e.inputs,7);if(5===r.dims.length)throw new Error("Packed QKV is not implemented");if(5===s?.dims.length)throw new Error("Packed KV is not implemented");let d=s&&i&&4===s.dims.length&&4===i.dims.length,p=go(e,n.batchSize,n.numHeads,n.sequenceLength,n.headSize,r,a,0);if(d)return qr(e,p,s,i,o,void 0,u,c,l,n);if(!s||!i)throw new Error("key and value must be provided");let h=go(e,n.batchSize,n.numHeads,n.kvSequenceLength,n.headSize,s,a,n.hiddenSize),m=go(e,n.batchSize,n.numHeads,n.kvSequenceLength,n.vHeadSize,i,a,2*n.hiddenSize);qr(e,p,h,m,o,void 0,u,c,l,n)}}),Mc=ue(()=>{Iu(),Ou(),Ru(),Vu(),yo=e=>{if(!e||e.length<1)throw new Error("too few inputs")},bo=(e,t)=>{let n=[],r=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(e=>n.push(Number(e))),r=n.length),_n({numOutputs:r,axis:t.axis,splitSizes:n})},xo=e=>`\nfn calculateOutputIndex(index: u32) -> u32 {\n    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {\n    if (index < ${$n("uniforms.size_in_split_axis","i",e)}) {\n        return i;\n    }\n    }\n    return ${e}u;\n}`,vo=e=>{let t=e.length,n=[];for(let r=0;r<t;++r){let s=e[r].setByIndices("indices","input[global_idx]");1===t?n.push(s):0===r?n.push(`if (output_number == ${r}u) { ${s} }`):r===t-1?n.push(`else { ${s} }`):n.push(`else if (output_number == ${r}) { ${s} }`)}return`\n      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {\n        ${n.join("\n")}\n      }`},Mo=(e,t)=>{let n=e[0].dims,r=jt.size(n),s=e[0].dataType,i=jt.normalizeAxis(t.axis,n.length),a=new Array(t.numOutputs),o=Cn("input",s,n.length),l=new Array(t.numOutputs),u=[],c=[],d=0,p=[{type:12,data:r}];for(let r=0;r<t.numOutputs;r++){d+=t.splitSizes[r],l[r]=d;let o=n.slice();o[i]=t.splitSizes[r],c.push(o),a[r]=En(`output${r}`,s,o.length),u.push({dims:c[r],dataType:e[0].dataType})}return p.push({type:12,data:l},...xn(n,...c)),{name:"Split",shaderCache:{hint:t.cacheKey,inputDependencies:["rank"]},getShaderSource:e=>`\n  ${e.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",l.length).declareVariables(o,...a)}\n  ${xo(l.length)}\n  ${vo(a)}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}\n\n    var indices = ${o.offsetToIndices("global_idx")};\n    var index = ${o.indicesGet("indices",i)};\n    let output_number = calculateOutputIndex(index);\n    if (output_number != 0) {\n      index -= ${$n("uniforms.size_in_split_axis","output_number - 1u",l.length)};\n      ${o.indicesSet("indices",i,"index")};\n    }\n    writeBufferData(output_number, indices, global_idx);\n  }`,getRunData:()=>({outputs:u,dispatchGroup:{x:Math.ceil(r/64)},programUniforms:p})}},ko=(e,t)=>{yo(e.inputs);let n=1===e.inputs.length?t:bo(e.inputs,t);e.compute(Mo(e.inputs,n),{inputs:[0]})},To=e=>{let t=e.axis,n=e.splitSizes,r=e.numOutputs<0?n.length:e.numOutputs;if(r!==n.length)throw new Error("numOutputs and splitSizes lengh must be equal");return _n({axis:t,numOutputs:r,splitSizes:n})}}),kc=ue(()=>{Iu(),Ou(),Ru(),Vu(),$o=(e,t)=>{let[n,r,s,i]=e,{numHeads:a,rotaryEmbeddingDim:o}=t;if(3!==n.dims.length&&4!==n.dims.length)throw new Error(`Input 'x' is expected to have 3 or 4 dimensions, got ${n.dims.length}`);if(!jt.areEqual(r.dims,[])&&!jt.areEqual(r.dims,[1])&&2!==r.dims.length)throw new Error(`Input 'position_ids' is expected to have 0, 1, or 2 dimensions, got ${r.dims.length}`);if(2!==s.dims.length)throw new Error(`Input 'cos_cache' is expected to have 2 dimensions, got ${s.dims.length}`);if(2!==i.dims.length)throw new Error(`Input 'sin_cache' is expected to have 2 dimensions, got ${i.dims.length}`);if(!jt.areEqual(s.dims,i.dims))throw new Error("Inputs 'cos_cache' and 'sin_cache' are expected to have the same shape");if(o>0&&0===a)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let l=n.dims[0],u=n.dims[n.dims.length-2],c=s.dims[0],d=jt.sizeFromDimension(n.dims,1)/u,p=0===o?2*s.dims[1]:d/a;if(o>p)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(2===r.dims.length){if(l!==r.dims[0])throw new Error(`Input 'position_ids' dimension 0 should be of size batch_size, got ${r.dims[0]}`);if(u!==r.dims[1])throw new Error(`Input 'position_ids' dimension 1 should be of size sequence_length, got ${r.dims[1]}`)}if(p/2!==s.dims[1]&&o/2!==s.dims[1])throw new Error(`Input 'cos_cache' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${s.dims[1]}`);if(u>c)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},So=(e,t)=>{let{interleaved:n,numHeads:r,rotaryEmbeddingDim:s,scale:i}=t,a=e[0].dims[0],o=jt.sizeFromDimension(e[0].dims,1),l=e[0].dims[e[0].dims.length-2],u=o/l,c=e[2].dims[1],d=0===s?2*c:u/r,p=new Array(a,l,u/d,d-c),h=jt.computeStrides(p),m=[{type:1,data:i},{type:12,data:p},{type:12,data:h},...3===e[0].dims.length?new Array({type:12,data:[o,u,d,1]}):[],...4===e[0].dims.length?new Array({type:12,data:[o,d,l*d,1]}):[],...xn(e[0].dims,e[1].dims,e[2].dims,e[3].dims,e[0].dims)];return{name:"RotaryEmbedding",shaderCache:{hint:_n({interleaved:n}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:t=>{let r=Cn("input",e[0].dataType,e[0].dims.length),s=Cn("position_ids",e[1].dataType,e[1].dims.length),i=Cn("cos_cache",e[2].dataType,e[2].dims.length),a=Cn("sin_cache",e[3].dataType,e[3].dims.length),o=En("output",e[0].dataType,e[0].dims.length);return t.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:p.length},{name:"global_strides",type:"u32",length:h.length},{name:"input_output_strides",type:"u32",length:h.length}]),`\n        ${t.declareVariables(r,s,i,a,o)}\n\n        ${t.mainStart(gn)}\n          let half_rotary_emb_dim = uniforms.${i.name}_shape[1];\n          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;\n          let size = uniforms.global_shape[0] * uniforms.global_strides[0];\n          ${t.guardAgainstOutOfBoundsWorkgroupSizes("size")}\n\n          if (bsnh[3] < half_rotary_emb_dim) {\n            let position_ids_idx =\n                ${s.broadcastedIndicesToOffset("bsnh.xy",En("",s.type.tensor,2))};\n            let position_id =\n                u32(${s.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);\n            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${n});\n            let j = i + select(half_rotary_emb_dim, 1, ${n});\n            let re = ${r.getByOffset("i")} * ${i.get("position_id","bsnh[3]")} -\n                ${r.getByOffset("j")} * ${a.get("position_id","bsnh[3]")};\n            ${o.setByOffset("i","re")}\n            let im = ${r.getByOffset("i")} * ${a.get("position_id","bsnh[3]")} +\n                ${r.getByOffset("j")} * ${i.get("position_id","bsnh[3]")};\n            ${o.setByOffset("j","im")}\n          } else {\n            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;\n            ${o.setByOffset("k",r.getByOffset("k"))}\n          }\n        }`},getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(jt.size(p)/gn)},programUniforms:m})}},Co=(e,t)=>{$o(e.inputs,t),e.compute(So(e.inputs,t))}}),Tc=ue(()=>{Ru(),Iu(),Hu(),vc(),Mc(),Gu(),kc(),Vu(),Eo=(e,t)=>{if(t.doRotary&&e.length<=7)throw new Error("cos_cache and sin_cache inputs are required if do_rotary is specified");let n=e[0],r=e[1],s=e[2],i=e[3],a=e[4];if(0!==t.doRotary&&e.length<=7)throw new Error("cos_cast and sin_cache are expected if do_rotary attribute is non-zero");if(-1!==t.localWindowSize)throw new Error("Local attention is not supported");if(0!==t.softcap)throw new Error("Softcap is not supported");if(0!==t.rotaryInterleaved)throw new Error("Rotary interleaved is not supported");if(t.smoothSoftmax)throw new Error("Smooth softmax is not supported");if(3!==n.dims.length&&5!==n.dims.length)throw new Error("Input query is expected to have 3 or 5 dimensions");let o=n.dims[0],l=n.dims[1],u=3===n.dims.length?n.dims[2]:t.numHeads*n.dims[4],c=l,d=0,p=!r||0===r.dims.length,h=Math.floor(p?u/(t.numHeads+2*t.kvNumHeads):u/t.numHeads);p&&(u=h*t.numHeads);let m=i&&0!==i.dims.length,f=a&&0!==a.dims.length;if(m&&4===i.dims.length&&i.dims[0]===o&&i.dims[1]!==t.kvNumHeads&&i.dims[2]===t.kvNumHeads&&i.dims[3]===h)throw new Error("BSNH pastKey/pastValue is not supported");if(m&&f){if(4!==i.dims.length)throw new Error('Input "past_key" is expected to have 4 dimensions');if(4!==a.dims.length)throw new Error('Input "past_value" is expected to have 4 dimensions');d=i.dims[2]}else if(m||f)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let _=1;if(r&&r.dims.length>0){if(3!==n.dims.length)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(r.dims.length<3||r.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(n.dims[0]!==r.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(3===r.dims.length){if(n.dims[2]%r.dims[2]!==0)throw new Error('Dimension 2 of "query" should be a multiple of "key"');c=r.dims[1]}else if(5===r.dims.length){if(r.dims[2]!==t.numHeads||2!==r.dims[3]||r.dims[4]!==h)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(s)throw new Error('Expect "value" be none when "key" has packed kv format.');c=r.dims[1]}else{if(r.dims[1]!==t.numHeads||r.dims[3]!==h)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');c=r.dims[2]}}else{if(3!==n.dims.length&&5!==n.dims.length)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(5===n.dims.length&&(n.dims[2]!==t.numHeads||3!==n.dims[3]))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');_=3}let g=!1,w=t.kvNumHeads?h*t.kvNumHeads:u;if(s&&s.dims.length>0){if(3!==s.dims.length&&4!==s.dims.length)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(n.dims[0]!==s.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(3===s.dims.length){if(c!==s.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');w=s.dims[2]}else{if(c!==s.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');w=s.dims[1]*s.dims[3],g=!0}}let y=e.length>4?e[5]:void 0;if(y&&1!==y.dims.length&&y.dims[0]!==o)throw new Error('Input "seqlens" is expected to have 1 dimension and the same dim 0 as batch_size');return{batchSize:o,sequenceLength:l,pastSequenceLength:d,kvSequenceLength:c,totalSequenceLength:-1,maxSequenceLength:-1,inputHiddenSize:0,hiddenSize:u,vHiddenSize:w,headSize:h,vHeadSize:Math.floor(w/t.kvNumHeads),numHeads:t.numHeads,kvNumHeads:t.kvNumHeads,nReps:t.numHeads/t.kvNumHeads,pastPresentShareBuffer:!1,maskType:0,scale:t.scale,broadcastResPosBias:!1,passPastInKv:g,qkvFormat:_}},Po=_n({perm:[0,2,1,3]}),Ao=(e,t,n)=>{let r=t,s=n.kvNumHeads;return 3===t.dims.length&&0!==n.kvSequenceLength&&(r=t.reshape([n.batchSize,n.kvSequenceLength,s,n.headSize]),r=e.compute(jn(r,Po.perm),{inputs:[r],outputs:[-1]})[0]),r},Io=(e,t,n,r)=>{let s=[e*t],i=e*t,a=[{type:12,data:i},{type:12,data:t},{type:12,data:e}];return{name:"GeneratePositionIds",shaderCache:{hint:`${e};${t}`,inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:s,dataType:7}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:a}),getShaderSource:e=>{let t=Cn("seq_lens",n.dataType,n.dims),i=Cn("total_seq_lens",r.dataType,r.dims),a=En("pos_ids",7,s);return`\n  ${e.registerUniforms([{name:"output_size",type:"u32"},{name:"sequence_length",type:"u32"},{name:"batch_size",type:"u32"}]).declareVariables(t,i,a)}\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let total_sequence_length = u32(${i.getByOffset("0")});\n    let is_subsequent_prompt = uniforms.sequence_length > 1 && uniforms.sequence_length != total_sequence_length;\n    let is_first_prompt = !is_subsequent_prompt && uniforms.sequence_length == total_sequence_length;\n    let batch_idx = global_idx / uniforms.sequence_length;\n    let sequence_idx = i32(global_idx % uniforms.sequence_length);\n    var pos_id: i32 = 0;\n    let seqlen = ${t.getByOffset("batch_idx")};\n    let total_seqlen = seqlen + 1;\n    if (is_first_prompt) {\n      if (sequence_idx < total_seqlen) {\n        pos_id = sequence_idx;\n      } else {\n        pos_id = 1;\n      }\n      ${a.setByOffset("global_idx","pos_id")}\n    } else if (is_subsequent_prompt) {\n      let past_seqlen = total_seqlen - i32(uniforms.sequence_length);\n      if (past_seqlen + sequence_idx < total_seqlen) {\n        pos_id = past_seqlen + sequence_idx;\n      } else {\n        pos_id = 1;\n      }\n      ${a.setByOffset("global_idx","pos_id")}\n    } else if (global_idx < uniforms.batch_size) {\n      ${a.setByOffset("global_idx","seqlen")}\n    };\n  }\n  `}}},Fo=(e,t)=>{let n=Eo(e.inputs,t);if(5===e.inputs[0].dims.length)throw new Error("Packed QKV is not implemented");if(5===e.inputs[1]?.dims.length)throw new Error("Packed KV is not implemented");let r,s,i=e.inputs[0],a=e.inputs[1]&&e.inputs[1].dims.length>0?e.inputs[1]:void 0,o=e.inputs[2]&&e.inputs[2].dims.length>0?e.inputs[2]:void 0,l=e.inputs[3]&&0!==e.inputs[3].dims.length?e.inputs[3]:void 0,u=e.inputs[4]&&0!==e.inputs[4].dims.length?e.inputs[4]:void 0,c=e.inputs.length>4?e.inputs[5]:void 0,d=e.inputs.length>5?e.inputs[6]:void 0,p=n.kvNumHeads?n.kvNumHeads:n.numHeads,h=_n({axis:2,numOutputs:3,splitSizes:[n.numHeads*n.headSize,p*n.headSize,p*n.headSize]}),[m,f,_]=a||o?[i,a,o]:e.compute(Mo([i],h),{inputs:[i],outputs:[-1,-1,-1]});if(t.doRotary){let i=e.compute(Io(n.batchSize,n.sequenceLength,c,d),{inputs:[c,d],outputs:[-1]})[0],a=e.inputs[7],o=e.inputs[8],l=_n({interleaved:0!==t.rotaryInterleaved,numHeads:n.numHeads,rotaryEmbeddingDim:0,scale:t.scale}),u=[m,i,a,o],p=[-1];r=e.compute(So(u,l),{inputs:u,outputs:p})[0],u.splice(0,1,f);let h=_n({interleaved:0!==t.rotaryInterleaved,numHeads:n.kvNumHeads,rotaryEmbeddingDim:0,scale:t.scale});s=e.compute(So(u,h),{inputs:u,outputs:p})[0]}let g=go(e,n.batchSize,n.numHeads,n.sequenceLength,n.headSize,t.doRotary?r:m,void 0,0),w=Ao(e,t.doRotary?s:f,n),y=Ao(e,_,n);qr(e,g,w,y,void 0,void 0,l,u,void 0,n,c,d)}}),$c=ue(()=>{Iu(),Ou(),Gu(),Vu(),zo=(e,t,n,r,s,i,a,o)=>{let l=vn(i),u=1===l?"f32":`vec${l}f`,c=1===l?"vec2f":`mat2x${l}f`,d=s*a,p=64;1===d&&(p=256);let h=[s,a,i/l],m=[s,a,2],f=[];return f.push(...xn(h,m)),e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${l};${o};${p}`,inputDependencies:["rank","type","type"]},getRunData:()=>({outputs:[{dims:m,dataType:1}],dispatchGroup:{x:d},programUniforms:f}),getShaderSource:e=>{let s=Cn("x",t.dataType,3,l),i=[s,Cn("scale",n.dataType,n.dims),Cn("bias",r.dataType,r.dims),En("output",1,3,2)];return`\n  var<workgroup> workgroup_shared : array<${c}, ${p}>;\n  const workgroup_size = ${p}u;\n  ${e.declareVariables(...i)}\n  ${e.mainStart(p)}\n    let batch = workgroup_index / uniforms.x_shape[1];\n    let channel = workgroup_index % uniforms.x_shape[1];\n    let hight = uniforms.x_shape[2];\n    // initialize workgroup memory\n    var sum = ${u}(0);\n    var squared_sum = ${u}(0);\n    for (var h = local_idx; h < hight; h += workgroup_size) {\n      let value = ${u}(${s.get("batch","channel","h")});\n      sum += value;\n      squared_sum += value * value;\n    }\n    workgroup_shared[local_idx] = ${c}(sum, squared_sum);\n    workgroupBarrier();\n\n    for (var currSize = workgroup_size >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (local_idx < currSize) {\n        workgroup_shared[local_idx] = workgroup_shared[local_idx] + workgroup_shared[local_idx + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (local_idx == 0) {\n      let sum_final = ${Tn("workgroup_shared[0][0]",l)} / f32(hight * ${l});\n      let squared_sum_final = ${Tn("workgroup_shared[0][1]",l)} / f32(hight * ${l});\n\n      let inv_std_dev = inverseSqrt(squared_sum_final - sum_final * sum_final + f32(${o}));\n      let channel_scale = inv_std_dev * f32(scale[channel]);\n      let channel_shift = f32(bias[channel]) - sum_final * channel_scale;\n      output[workgroup_index] = vec2f(channel_scale, channel_shift);\n    }\n  }`}},{inputs:[t,n,r],outputs:[-1]})[0]},Oo=(e,t,n)=>{let r=t[0].dims,s=r,i=r[0],a=r[1],o=jt.sizeFromDimension(r,2),l=vn(o),u=jt.size(s)/l,c=zo(e,t[0],t[1],t[2],i,o,a,n.epsilon),d=[i,a,o/l],p=[i,a];e.compute({name:"InstanceNormalization",shaderCache:{hint:`${l}`,inputDependencies:["type","none"]},getRunData:()=>({outputs:[{dims:s,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:[{type:12,data:u},...xn(d,p,d)]}),getShaderSource:e=>{let n=Cn("x",t[0].dataType,d.length,l),r=Cn("scale_shift",1,p.length,2),s=En("output",t[0].dataType,d.length,l),i=[n,r,s];return`\n  ${e.registerUniform("output_size","u32").declareVariables(...i)}\n  ${e.mainStart()}\n  ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n      let outputIndices = ${s.offsetToIndices("global_idx")};\n      let batch = outputIndices[0];\n      let channel = outputIndices[1];\n      let scale_shift = ${r.getByIndices("vec2<u32>(batch, channel)")};\n      let value = ${n.getByOffset("global_idx")} * ${s.type.value}(scale_shift.x) + ${s.type.value}(scale_shift.y);\n      ${s.setByOffset("global_idx","value")};\n  }`}},{inputs:[t[0],c]})},Lo=(e,t,n)=>{let r=t[0].dims,s=r,i=r[0],a=r[r.length-1],o=jt.sizeFromDimension(r,1)/a,l=vn(a),u=jt.size(s)/l,c=[{type:12,data:o},{type:12,data:Math.floor(a/l)}],d=!1,p=[0,r.length-1];for(let e=0;e<r.length-2;e++)d=d||1!==r[e+1],p.push(e+1);d=d&&1!==r[r.length-1];let h=d?e.compute(jn(e.inputs[0],p),{inputs:[e.inputs[0]],outputs:[-1]})[0]:e.inputs[0].reshape(Array.from({length:r.length},(e,t)=>r[p[t]])),m=zo(e,h,t[1],t[2],i,o,a,n.epsilon);e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${l}`,inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:s,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:c}),getShaderSource:e=>{let n=yn(t[0].dataType),r=1===l?"vec2f":`mat${l}x2f`,i=e=>{let t=0===e?"x":"y",r=1===l?"f32":`vec${l}f`;switch(l){case 1:return`${n}(${r}(scale.${t}))`;case 2:return`vec2<${n}>(${r}(scale[0].${t}, scale[1].${t}))`;case 4:return`vec4<${n}>(${r}(scale[0].${t}, scale[1].${t}, scale[2].${t}, scale[3].${t}))`;default:throw new Error(`Not supported compoents ${l}`)}},a=Cn("input",t[0].dataType,t[0].dims,l),o=En("output",t[0].dataType,s,l);return`\n  @group(0) @binding(0) var<storage, read> input : array<${a.type.storage}>;\n  @group(0) @binding(1) var<storage, read> scale_input : array<${r}>;\n  @group(0) @binding(2) var<storage, read_write> output : array<${o.type.storage}>;\n  struct Uniforms {H: u32, C : u32};\n  @group(0) @binding(3) var<uniform> uniforms: Uniforms;\n\n  ${e.mainStart()}\n    let current_image_number = global_idx / (uniforms.C * uniforms.H);\n    let current_channel_number = global_idx % uniforms.C;\n\n    let scale_offset = current_image_number * uniforms.C + current_channel_number;\n    let scale = scale_input[scale_offset];\n    output[global_idx] = fma(input[global_idx], ${i(0)}, ${i(1)});\n  }`}},{inputs:[t[0],m]})},Bo=(e,t)=>{"NHWC"===t.format?Lo(e,e.inputs,t):Oo(e,e.inputs,t)}}),Sc=ue(()=>{Iu(),Ou(),Vu(),Do=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},No=(e,t,n)=>{let r=t.simplified,s=e[0].dims,i=e[1],a=!r&&e[2],o=s,l=jt.normalizeAxis(t.axis,s.length),u=jt.sizeToDimension(s,l),c=jt.sizeFromDimension(s,l),d=jt.size(i.dims),p=a?jt.size(a.dims):0;if(d!==c||a&&p!==c)throw new Error(`Size of X.shape()[axis:] == ${c}.\n       Size of scale and bias (if provided) must match this.\n       Got scale size of ${d} and bias size of ${p}`);let h=[];for(let e=0;e<s.length;++e)e<l?h.push(s[e]):h.push(1);let m=vn(c),f=["type","type"],_=[{type:12,data:u},{type:1,data:c},{type:12,data:Math.floor(c/m)},{type:1,data:t.epsilon}];a&&f.push("type");let g=n>1,w=n>2,y=[{dims:o,dataType:e[0].dataType}];return g&&y.push({dims:h,dataType:1}),w&&y.push({dims:h,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${m};${n};${r}`,inputDependencies:f},getRunData:()=>({outputs:y,dispatchGroup:{x:Math.ceil(u/64)},programUniforms:_}),getShaderSource:t=>{let n=yn(e[0].dataType),s=[Cn("x",e[0].dataType,e[0].dims,m),Cn("scale",i.dataType,i.dims,m)];return a&&s.push(Cn("bias",a.dataType,a.dims,m)),s.push(En("output",e[0].dataType,o,m)),g&&s.push(En("mean_data_output",1,h)),w&&s.push(En("inv_std_output",1,h)),`\n  ${t.registerUniforms([{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}]).declareVariables(...s)}\n  ${t.mainStart()}\n    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}\n    let offset = global_idx * uniforms.norm_size_vectorized;\n    var mean_vector = ${Mn("f32",m)};\n    var mean_square_vector = ${Mn("f32",m)};\n\n    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {\n      let value = ${kn(n,m,"x[h + offset]")};\n      mean_vector += value;\n      mean_square_vector += value * value;\n    }\n    let mean = ${Tn("mean_vector",m)} / uniforms.norm_size;\n    let inv_std_dev = inverseSqrt(${Tn("mean_square_vector",m)} / uniforms.norm_size ${r?"":"- mean * mean"} + uniforms.epsilon);\n\n    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {\n      let f32input = ${kn(n,m,"x[j + offset]")};\n      let f32scale = ${kn(n,m,"scale[j]")};\n      output[j + offset] = ${s[0].type.value}((f32input ${r?"":"- mean"}) * inv_std_dev * f32scale\n        ${a?`+ ${kn(n,m,"bias[j]")}`:""}\n      );\n    }\n\n    ${g?"mean_data_output[global_idx] = mean":""};\n    ${w?"inv_std_output[global_idx] = inv_std_dev":""};\n  }`}}},jo=(e,t)=>{Do(e.inputs),e.compute(No(e.inputs,t,e.outputCount))}}),Cc=ue(()=>{Ou(),rc(),sc(),Ro=e=>{if(!e||2!==e.length)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},Vo=e=>{Ro(e.inputs);let t=Nt.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!t)throw new Error("Can't use matmul on the given tensors");let n=t[t.length-1],r=e.inputs[0].dims[e.inputs[0].dims.length-1];if(n<8&&r<8)e.compute(vi(e.inputs,{activation:""},t));else{let s=t[t.length-2],i=jt.size(e.inputs[0].dims.slice(0,-2)),a=jt.size(e.inputs[1].dims.slice(0,-2));if(1!==i&&1===s&&1===a){let s=[1,i,n],a=[e.inputs[0].reshape([1,i,r]),e.inputs[1].reshape([1,r,n])];e.compute(Pi(a,{activation:""},t,s),{inputs:a})}else e.compute(Pi(e.inputs,{activation:""},t))}}}),Ec=ue(()=>{Iu(),Ou(),Ru(),Vu(),Go=(e,t)=>{if(e.length<3||e.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let n=e[0],r=n.dims.length;if(n.dims[r-1]!==t.k)throw new Error("The last dim of input shape does not match the k value");let s=Math.floor((t.k+t.blockSize-1)/t.blockSize),i=t.blockSize/8*t.bits,a=e[1];if(!jt.areEqual(a.dims,[t.n,s,i]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let o=e[2].dims;if(jt.size(o)!==t.n*s)throw new Error("scales input size error.");if(4===e.length){let n=e[3].dims,r=t.bits>4?t.n*s:t.n*Math.floor((s+1)/2);if(jt.size(n)!==r)throw new Error("zeroPoints input size error.")}},Uo=(e,t)=>{let n=e[0].dims,r=n.length,s=n[r-2],i=t.k,a=t.n,o=n.slice(0,r-2),l=jt.size(o),u=e[1].dims[2]/4,c=e[0].dataType,d=vn(t.k),p=vn(u),h=vn(a),m=o.concat([s,a]),f=s>1&&a/h%2==0?2:1,_=jt.size(m)/h/f,g=[],w=[l,s,i/d],y=jt.convertShape(e[1].dims).slice();y.splice(-1,1,u/p),g.push(...xn(w)),g.push(...xn(y)),g.push(...xn(e[2].dims)),4===e.length&&g.push(...xn(jt.convertShape(e[3].dims)));let b=[l,s,a/h];return g.push(...xn(b)),{name:"MatMulNBits",shaderCache:{hint:`${t.blockSize};${t.bits};${d};${p};${h};${f};64`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:m,dataType:c}],dispatchGroup:{x:_},programUniforms:g}),getShaderSource:n=>{let r=w.length,s=Cn("a",e[0].dataType,r,d),i=Cn("b",12,y.length,p),a=Cn("scales",e[2].dataType,e[2].dims.length),o=[s,i,a],l=4===e.length?Cn("zero_points",12,e[3].dims.length):void 0;l&&o.push(l);let c=b.length,m=En("output",e[0].dataType,c,h),_=yn(e[0].dataType),g=(()=>{switch(d){case 1:return`array<${_}, 8>`;case 2:return`mat4x2<${_}>`;case 4:return`mat2x4<${_}>`;default:throw new Error(`${d}-component is not supported.`)}})();return`\n        var<workgroup> workgroup_shared: array<${m.type.value}, ${64*f}>;\n        ${n.declareVariables(...o,m)}\n        ${n.mainStart([64,1,1])}\n          let output_indices = ${m.offsetToIndices(`(global_idx / 64) * ${f}`)};\n          let col = output_indices[2];\n          let row = output_indices[1];\n          let batch = output_indices[0];\n          let nBlocksPerCol = uniforms.b_shape[1];\n\n          for (var block = local_id.x; block < nBlocksPerCol; block += 64) {\n            //process one block\n            var word_offset: u32 = block * ${t.blockSize/d};\n            ${(()=>{let e=`\n            var col_index = col * ${h};\n            ${l?"\n            let zero_point_bytes_per_col = (nBlocksPerCol + 1) / 2;\n            var zero_point_byte_count: u32;\n            var zero_point_word_index: u32;\n            var zero_point_byte_offset: u32;\n            let zero_point_nibble_offset: u32 = block & 0x1u;\n            var zero_point_bits_offset: u32;\n            var zero_point_word: u32;":`\n            // The default zero point is 8 for unsigned 4-bit quantization.\n            let zero_point = ${_}(8);`}\n            `;for(let t=0;t<h*f;t++)e+=`\n            let scale${t} = ${a.getByOffset("col_index * nBlocksPerCol + block")};\n            ${l?`\n            zero_point_byte_count = col_index * zero_point_bytes_per_col + (block >> 0x1u);\n            zero_point_word_index = zero_point_byte_count >> 0x2u;\n            zero_point_byte_offset = zero_point_byte_count & 0x3u;\n            zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);\n            zero_point_word = ${l.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;\n            let zero_point${t} = ${_}((zero_point_word) & 0xFu);`:""}\n            col_index += 1;`;return e})()}\n            for (var word: u32 = 0; word < ${u}; word += ${p}) {\n              ${(()=>{let e=`col_index = col * ${h};`;for(let t=0;t<h*f;t++)e+=`\n            let b${t}_data = ${i.getByIndices(`${i.type.indices}(col_index, block, word)`)};\n            col_index += 1;`;return e+=`\n            var b_value: u32;\n            let b_mask: u32 = 0x0F0F0F0Fu;\n            var b_value_lower: vec4<u32>;\n            var b_value_upper: vec4<u32>;\n            var b_quantized_values: ${g};\n            var b_dequantized_values: ${g};`,e})()}\n              for (var i: u32 = 0; i < ${p}; i++) {\n                ${(()=>{let e=`\n          // reuse a data\n            var input_offset = ${s.indicesToOffset(`${s.type.indices}(batch, row, word_offset)`)};\n            var a_data: ${g};\n            for (var j: u32 = 0; j < ${8/d}; j++) {\n              a_data[j] = ${s.getByOffset("input_offset")};\n              input_offset++;\n            }\n          `;for(let t=0;t<h*f;t++)e+=`\n            b_value = ${1===p?`b${t}_data`:`b${t}_data[i]`};\n            b_value_lower = unpack4xU8(b_value & b_mask);\n            b_value_upper = unpack4xU8((b_value >> 4) & b_mask);\n            b_quantized_values = ${g}(${Array.from({length:4},(e,t)=>`${_}(b_value_lower[${t}]), ${_}(b_value_upper[${t}])`).join(", ")});\n            b_dequantized_values = ${1===d?`${g}(${Array.from({length:8},(e,n)=>`(b_quantized_values[${n}] - ${l?`zero_point${t}`:"zero_point"}) * scale${t}`).join(", ")});`:`(b_quantized_values - ${g}(${Array(8).fill(l?`zero_point${t}`:"zero_point").join(",")})) * scale${t};`};\n            workgroup_shared[local_id.x * ${f} + ${Math.floor(t/h)}]${h>1?`[${t%h}]`:""} += ${Array.from({length:8/d},(e,t)=>1===d?`a_data[${t}] * b_dequantized_values[${t}]`:`dot(a_data[${t}], b_dequantized_values[${t}])`).join(" + ")};\n          `;return e})()}\n                word_offset += ${8/d};\n              }\n            }\n          }\n          workgroupBarrier();\n\n          if (local_id.x < ${f}) {\n            var output_value: ${m.type.value} = ${m.type.value}(0);\n            var workgroup_shared_offset: u32 = local_id.x;\n            for (var b: u32 = 0u; b < 64u; b++) {\n              output_value += workgroup_shared[workgroup_shared_offset];\n              workgroup_shared_offset += ${f};\n            }\n            ${m.setByIndices(`${m.type.indices}(batch, row, col + local_id.x)`,"output_value")};\n          }\n        }`}}},qo=(e,t)=>{let n=e[0].dims,r=n.length,s=n[r-2],i=t.k,a=t.n,o=n.slice(0,r-2),l=jt.size(o),u=e[1].dims[2]/4,c=e[0].dataType,d=vn(t.k),p=vn(u),h=o.concat([s,a]),m=a%8==0?8:a%4==0?4:1,f=128/m,_=f*p*8,g=_/d,w=_/t.blockSize,y=jt.size(h)/m,b=[],x=[l,s,i/d],v=jt.convertShape(e[1].dims).slice();v.splice(-1,1,u/p),b.push(...xn(x)),b.push(...xn(v)),b.push(...xn(e[2].dims)),4===e.length&&b.push(...xn(jt.convertShape(e[3].dims)));let M=[l,s,a];return b.push(...xn(M)),{name:"BlockwiseMatMulNBits32",shaderCache:{hint:`${t.blockSize};${d};${p};${f};${m}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:h,dataType:c}],dispatchGroup:{x:y},programUniforms:b}),getShaderSource:n=>{let r=x.length,s=Cn("a",e[0].dataType,r,d),i=Cn("b",12,v.length,p),a=Cn("scales",e[2].dataType,e[2].dims.length),o=[s,i,a],l=4===e.length?Cn("zero_points",12,e[3].dims.length):void 0;l&&o.push(l);let u=M.length,c=En("output",e[0].dataType,u),h=yn(e[0].dataType);return`\n        var<workgroup> sub_a: array<${s.type.value}, ${g}>;\n        var<workgroup> inter_results: array<array<${c.type.value}, ${f}>, ${m}>;\n        ${n.declareVariables(...o,c)}\n        ${n.mainStart([f,m,1])}\n          let output_indices = ${c.offsetToIndices(`workgroup_index * ${m}`)};\n          let col = output_indices[2];\n          let row = output_indices[1];\n          let batch = output_indices[0];\n          let n_blocks_per_col = uniforms.b_shape[1];\n          let num_tiles =  (n_blocks_per_col - 1) / ${w} + 1;\n\n          // Loop over shared dimension.\n          for (var tile: u32 = 0; tile < num_tiles; tile += 1) {\n            let a_col_start = tile * ${g};\n            // load one tile A data into shared memory.\n            for (var a_offset = local_idx; a_offset < ${g}; a_offset += 128)\n            {\n              let a_col = a_col_start + a_offset;\n              if (a_col < uniforms.a_shape[2])\n              {\n                sub_a[a_offset] = ${s.getByIndices(`${s.type.indices}(batch, row, a_col)`)};\n              } else {\n                sub_a[a_offset] = ${s.type.value}(0);\n              }\n            }\n            workgroupBarrier();\n\n            // each thread process one block\n            let b_row = col + local_id.y;\n            let block = tile * ${w} + local_id.x;\n            ${l?`\n            let zero_point_bytes_per_col = (n_blocks_per_col + 1) / 2;\n            let zero_point_byte_count = b_row * zero_point_bytes_per_col + (block >> 0x1u);\n            let zero_point_word_index = zero_point_byte_count >> 0x2u;\n            let zero_point_byte_offset = zero_point_byte_count & 0x3u;\n            let zero_point_nibble_offset: u32 = block & 0x1u;\n            let zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);\n            let zero_point_word = ${l.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;\n            let zero_point = ${h}((zero_point_word) & 0xFu);`:`\n            // The default zero point is 8 for unsigned 4-bit quantization.\n            let zero_point = ${h}(8);`}\n            let scale = ${a.getByOffset("b_row * n_blocks_per_col + block")};\n            let b_data = ${i.getByIndices(`${i.type.indices}(b_row, block, 0)`)};\n            var word_offset = local_id.x * ${t.blockSize/d};\n            for (var i: u32 = 0; i < ${p}; i++) {\n              ${(()=>{switch(d){case 1:return`\n          let a_data0 = vec4<${h}>(sub_a[word_offset], sub_a[word_offset + 1], sub_a[word_offset + 2], sub_a[word_offset + 3]);\n          let a_data1 = vec4<${h}>(sub_a[word_offset + 4], sub_a[word_offset + 5], sub_a[word_offset + 6], sub_a[word_offset + 7]);`;case 2:return`\n          let a_data0 = vec4<${h}>(sub_a[word_offset], sub_a[word_offset + 1]);\n          let a_data1 = vec4<${h}>(sub_a[word_offset + 2], sub_a[word_offset + 3]);`;case 4:return"\n          let a_data0 = sub_a[word_offset];\n          let a_data1 = sub_a[word_offset + 1];";default:throw new Error(`${d}-component is not supported.`)}})()}\n              let b_value = ${1===p?"b_data":"b_data[i]"};\n              let b_value_lower = unpack4xU8(b_value & 0x0F0F0F0Fu);\n              let b_value_upper = unpack4xU8((b_value >> 4) & 0x0F0F0F0Fu);\n              let b_quantized_values = mat2x4<${h}>(${Array.from({length:4},(e,t)=>`${h}(b_value_lower[${t}]), ${h}(b_value_upper[${t}])`).join(", ")});\n              let b_dequantized_values = (b_quantized_values - mat2x4<${h}>(${Array(8).fill("zero_point").join(",")})) * scale;\n              inter_results[local_id.y][local_id.x] += ${Array.from({length:2},(e,t)=>`dot(a_data${t}, b_dequantized_values[${t}])`).join(" + ")};\n              word_offset += ${8/d};\n            }\n            workgroupBarrier();\n          }\n\n          if (local_idx < ${m}) {\n            var output_value: ${c.type.value} = ${c.type.value}(0);\n            for (var b = 0u; b < ${f}; b++) {\n              output_value += inter_results[local_idx][b];\n            }\n            if (col + local_idx < uniforms.output_shape[2])\n            {\n              ${c.setByIndices(`${c.type.indices}(batch, row, col + local_idx)`,"output_value")}\n            }\n          }\n        }`}}},Wo=(e,t)=>{Go(e.inputs,t),32===t.blockSize&&e.adapterInfo.isVendor("intel")&&e.adapterInfo.isArchitecture("gen-12lp")?e.compute(qo(e.inputs,t)):e.compute(Uo(e.inputs,t))},Ho=e=>_n(e)}),Pc=ue(()=>{Iu(),Ou(),Vu(),Ko=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(1!==e[0].dataType&&10!==e[0].dataType)throw new Error("Input type must be float or float16.");if(e.length>=2){let t=2*e[0].dims.length===e[1].dims[0];if(4===e.length&&(t=2*e[3].dims[0]===e[1].dims[0]),!t)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},Qo=(e,t,n)=>{let r="";for(let s=t-1;s>=0;--s)r+=`\n            k = i32(${e.indicesGet("indices",s)}) - ${$n("uniforms.pads",s,n)};\n            if (k < 0) {\n              break;\n            }\n            if (k >= i32(${$n("uniforms.x_shape",s,t)})) {\n              break;\n            }\n            offset += k * i32(${$n("uniforms.x_strides",s,t)});\n        `;return`\n          value = ${e.type.value}(uniforms.constant_value);\n          for (var i = 0; i < 1; i++) {\n            var offset = 0;\n            var k = 0;\n            ${r}\n            value = x[offset];\n          }\n      `},Xo=(e,t,n)=>{let r="";for(let s=t-1;s>=0;--s)r+=`\n                k = i32(${e.indicesGet("indices",s)}) - ${$n("uniforms.pads",s,n)};\n                if (k < 0) {\n                  k = -k;\n                }\n                {\n                  let _2n_1 = 2 * (i32(${$n("uniforms.x_shape",s,t)}) - 1);\n                  k = k % _2n_1;\n                  if(k >= i32(${$n("uniforms.x_shape",s,t)})) {\n                    k = _2n_1 - k;\n                  }\n                }\n                offset += k * i32(${$n("uniforms.x_strides",s,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${r}\n              value = x[offset];\n          `},Jo=(e,t,n)=>{let r="";for(let s=t-1;s>=0;--s)r+=`\n                k = i32(${e.indicesGet("indices",s)}) - ${$n("uniforms.pads",s,n)};\n                if (k < 0) {\n                  k = 0;\n                }\n                if (k >= i32(${$n("uniforms.x_shape",s,t)})) {\n                  k = i32(${$n("uniforms.x_shape",s,t)}) - 1;\n                }\n                offset += k * i32(${$n("uniforms.x_strides",s,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${r}\n              value = x[offset];\n          `},Yo=(e,t,n)=>{let r="";for(let s=t-1;s>=0;--s)r+=`\n                k = i32(${e.indicesGet("indices",s)}) - ${$n("uniforms.pads",s,n)};\n                if (k < 0)  {\n                  k += i32(${$n("uniforms.x_shape",s,t)}]);\n                }\n                if (k >= i32(${$n("uniforms.x_shape",s,t)})) {\n                  k -= i32(${$n("uniforms.x_shape",s,t)});\n                }\n                offset += k * i32(${$n("uniforms.x_strides",s,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${r}\n              value = x[offset];\n          `},Zo=(e,t,n)=>{switch(n.mode){case 0:return Qo(e,t,n.pads.length);case 1:return Xo(e,t,n.pads.length);case 2:return Jo(e,t,n.pads.length);case 3:return Yo(e,t,n.pads.length);default:throw new Error("Invalid mode")}},el=(e,t)=>{let n=jt.padShape(e[0].dims.slice(),t.pads),r=e[0].dims,s=[{type:12,data:jt.size(n)},{type:6,data:t.pads}],i=e.length>=3&&e[2].data;return 0===t.mode&&s.push({type:i?e[2].dataType:1,data:t.value}),s.push(...xn(e[0].dims,n)),{name:"Pad",shaderCache:{hint:`${t.mode}${i}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(jt.size(n)/64)},programUniforms:s}),getShaderSource:s=>{let a=En("output",e[0].dataType,n.length),o=Cn("x",e[0].dataType,r.length),l=o.type.value,u=Zo(a,r.length,t),c=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:t.pads.length}];return 0===t.mode&&c.push({name:"constant_value",type:i?l:"f32"}),`\n            ${s.registerUniforms(c).declareVariables(o,a)}\n            ${s.mainStart()}\n            ${s.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n            let indices = ${a.offsetToIndices("global_idx")};\n\n            var value = ${l}(0);\n            ${u}\n            output[global_idx] = value;\n        }`}}},tl=(e,t)=>{if(e.length>1){let n=e[1].getBigInt64Array(),r=e.length>=3&&e[2].data?10===e[2].dataType?e[2].getUint16Array()[0]:e[2].getFloat32Array()[0]:0,s=e[0].dims.length,i=new Int32Array(2*s).fill(0);if(e.length>=4){let t=e[3].getBigInt64Array();for(let e=0;e<t.length;e++)i[Number(t[e])]=Number(n[e]),i[Number(t[e])+s]=Number(n[e+t.length])}else n.forEach((e,t)=>i[Number(t)]=Number(e));let a=[];return i.forEach(e=>a.push(e)),{mode:t.mode,value:r,pads:a}}return t},nl=(e,t)=>{Ko(e.inputs);let n=tl(e.inputs,t);e.compute(el(e.inputs,n),{inputs:[0]})}}),Ac=ue(()=>{Ae(),Iu(),Ou(),Vu(),rl=e=>{if(z.webgpu.validateInputContent&&(!e||1!==e.length))throw new Error("Pool ops requires 1 input.")},sl=(e,t,n)=>{let r="NHWC"===t.format,s=e.dims.slice();r&&s.splice(1,0,s.pop());let i=Object.hasOwnProperty.call(t,"dilations"),a=t.kernelShape.slice(),o=t.strides.slice(),l=i?t.dilations.slice():[],u=t.pads.slice();Rt.adjustPoolAttributes(n,s,a,o,l,u);let c=Rt.computePoolOutputShape(n,s,o,l,a,u,t.autoPad),d=Object.assign({},t);i?Object.assign(d,{kernelShape:a,strides:o,pads:u,dilations:l,cacheKey:t.cacheKey}):Object.assign(d,{kernelShape:a,strides:o,pads:u,cacheKey:t.cacheKey});let p=c.slice();return p.push(p.splice(1,1)[0]),[d,r?p:c]},il=(e,t)=>{let n="NHWC"===t.format,r=[{type:12,data:jt.size(e)},{type:12,data:jt.size(t.kernelShape)}],s=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(t.kernelShape.length<=2){let e=t.kernelShape[t.kernelShape.length-1],n=t.strides[t.strides.length-1],i=t.pads[t.pads.length/2-1],a=t.pads[t.pads.length-1],o=!!(i+a);r.push({type:12,data:e},{type:12,data:n},{type:12,data:i},{type:12,data:a}),s.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let l=!1;if(2===t.kernelShape.length){let e=t.kernelShape[t.kernelShape.length-2],n=t.strides[t.strides.length-2],i=t.pads[t.pads.length/2-2],a=t.pads[t.pads.length-2];l=!!(i+a),r.push({type:12,data:e},{type:12,data:n},{type:12,data:i},{type:12,data:a}),s.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[r,s,!0,o,l]}{if(n)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let e=jt.computeStrides(t.kernelShape);return r.push({type:12,data:e},{type:12,data:t.pads},{type:12,data:t.strides}),s.push({name:"kernelStrides",type:"u32",length:e.length},{name:"pads",type:"u32",length:t.pads.length},{name:"strides",type:"u32",length:t.strides.length}),[r,s,!!t.pads.reduce((e,t)=>e+t),!1,!1]}},al=(e,t,n,r,s,i,a,o,l,u,c,d)=>{let p="NHWC"===s.format,h=t.type.value,m=En("output",t.type.tensor,r);if(s.kernelShape.length<=2){let r="",u="",f="",_=n-(p?2:1);if(r=c?`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${_}] = indices[${_}] * uniforms.sw - uniforms.pwStart + i;\n                  if (xIndices[${_}] < 0 || xIndices[${_}]\n                      >= uniforms.x_shape[${_}]) {\n                    pad++;\n                    continue;\n                  }\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${i}\n                }`:`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${_}] = indices[${_}] * uniforms.sw - uniforms.pwStart + i;\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${i}\n                }`,2===s.kernelShape.length){let e=n-(p?3:2);u=d?`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${e}] = indices[${e}] * uniforms.sh - uniforms.phStart + j;\n                  if (xIndices[${e}] < 0 || xIndices[${e}] >= uniforms.x_shape[${e}]) {\n                    pad += i32(uniforms.kw);\n                    continue;\n                  }\n              `:`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${e}] = indices[${e}] * uniforms.sh - uniforms.phStart + j;\n                `,f="\n              }\n            "}return`\n            ${e.registerUniforms(l).declareVariables(t,m)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n              let indices = ${m.offsetToIndices("global_idx")};\n              var xIndices = ${m.offsetToIndices("global_idx")};\n\n              var value = ${h}(${o});\n              var pad = 0;\n              ${u}\n              ${r}\n              ${f}\n              ${a}\n\n              output[global_idx] = value;\n            }`}{if(p)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let r=s.kernelShape.length,c=s.pads.length,d="";return d=u?`\n                if (xIndices[j] >= uniforms.x_shape[j]) {\n                  pad++;\n                  isPad = true;\n                  break;\n                }\n              }\n              if (!isPad) {\n                let x_val = x[${t.indicesToOffset("xIndices")}];\n                ${i}\n              }`:`\n              }\n              let x_val = x[${t.indicesToOffset("xIndices")}];\n              ${i}\n            `,`\n            ${e.registerUniforms(l).declareVariables(t,m)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n              let indices = ${m.offsetToIndices("global_idx")};\n              var xIndices = ${m.offsetToIndices("global_idx")};\n\n              var offsets: array<u32, ${r}>;\n\n              var value = ${h}(${o});\n              var pad = 0;\n              var isPad = false;\n\n              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {\n                var offset = i;\n                for (var j = 0u; j < ${r-1}u; j++) {\n                  offsets[j] = offset / ${$n("uniforms.kernelStrides","j",r)};\n                  offset -= offsets[j] * ${$n("uniforms.kernelStrides","j",r)};\n                }\n                offsets[${r-1}] = offset;\n\n                isPad = false;\n                for (var j = ${n-r}u; j < ${n}u; j++) {\n                  xIndices[j] = indices[j] * ${$n("uniforms.strides",`j - ${n-r}u`,r)}\n                    + offsets[j - ${n-r}u] - ${$n("uniforms.pads","j - 2u",c)};\n                  ${d}\n              }\n              ${a}\n\n              output[global_idx] = value;\n            }`}},ol=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,ll=e=>`${ol(e)};${e.countIncludePad}`,ul=e=>`${ol(e)};${e.storageOrder};${e.dilations}`,cl=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),dl=(e,t,n,r)=>{let[s,i]=sl(t,r,n),a=Cn("x",t.dataType,t.dims.length),o=a.type.value,l="";s.countIncludePad?l+=`value /= ${o}(uniforms.kernelSize);`:l+=`value /= ${o}(i32(uniforms.kernelSize) - pad);`;let[u,c,d,p,h]=il(i,s);return u.push(...xn(t.dims,i)),{name:e,shaderCache:{hint:`${r.cacheKey};${d};${p};${h}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:i,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(jt.size(i)/64)},programUniforms:u}),getShaderSource:e=>al(e,a,t.dims.length,i.length,s,"value += x_val;",l,0,c,d,p,h)}},pl=e=>{let t=0!==e.count_include_pad,n=cl(e);if(0!==n.ceilMode)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let r={countIncludePad:t,...n,cacheKey:""};return{...r,cacheKey:ll(r)}},hl=(e,t)=>{rl(e.inputs),e.compute(dl("AveragePool",e.inputs[0],!1,t))},ml={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},fl=e=>{let t=e.format;return{format:t,...ml,cacheKey:t}},_l=(e,t)=>{rl(e.inputs),e.compute(dl("GlobalAveragePool",e.inputs[0],!0,t))},gl=(e,t,n,r)=>{let[s,i]=sl(t,r,n),a=Cn("x",t.dataType,t.dims.length),[o,l,u,c,d]=il(i,s);return o.push(...xn(t.dims,i)),{name:e,shaderCache:{hint:`${r.cacheKey};${u};${c};${d}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:i,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(jt.size(i)/64)},programUniforms:o}),getShaderSource:e=>al(e,a,t.dims.length,i.length,s,"\n      value = max(x_val, value);\n    ","",10===t.dataType?-65504:-1e5,l,u,c,d)}},wl=(e,t)=>{rl(e.inputs),e.compute(gl("MaxPool",e.inputs[0],!1,t))},yl=e=>{let t=e.storage_order,n=e.dilations,r=cl(e);if(0!==t)throw new Error("column major storage order is not yet supported for MaxPool");if(0!==r.ceilMode)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let s={storageOrder:t,dilations:n,...r,cacheKey:""};return{...s,cacheKey:ul(s)}},bl=e=>{let t=e.format;return{format:t,...ml,cacheKey:t}},xl=(e,t)=>{rl(e.inputs),e.compute(gl("GlobalMaxPool",e.inputs[0],!0,t))}}),Ic=ue(()=>{Iu(),Ou(),Ru(),Vu(),vl=(e,t)=>{if(e.length<2||e.length>3)throw new Error("DequantizeLinear requires 2 or 3 inputs.");if(3===e.length&&e[1].dims===e[2].dims)throw new Error("x-scale and x-zero-point must have the same shape.");if(3===e.length&&e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(6===e[0].dataType&&e.length>2)throw new Error("In the case of dequantizing int32 there is no zero point.");if(0!==e[1].dims.length&&1!==e[1].dims.length&&e[1].dims.length!==e[0].dims.length)throw new Error("scale input must be a scalar, a 1D tensor, or have the same rank as the input tensor.");if(e.length>2){if(e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[1].dims.length!==e[2].dims.length)throw new Error("scale and zero-point inputs must have the same rank.");if(!e[1].dims.map((t,n)=>t===e[2].dims[n]).reduce((e,t)=>e&&t,!0))throw new Error("scale and zero-point inputs must have the same shape.")}if(t.blockSize>0){if(0===e[1].dims.length||1===e[1].dims.length&&1===e[1].dims[0])throw new Error("blockSize must be set only for block quantization.");if(!e[1].dims.map((n,r)=>r===t.axis||n===e[0].dims[r]).reduce((e,t)=>e&&t,!0))throw new Error("For block qunatization, scale input shape to match the input shape except for the axis");if(e[1].dims.length!==e[0].dims.length)throw new Error("For block qunatization the scale input rank must be the same as the x rank.");let n=e[0].dims[t.axis],r=e[1].dims[t.axis];if(t.blockSize<Math.ceil(n/r)||t.blockSize>Math.ceil(n/(r-1)-1))throw new Error("blockSize must be with in the range [ceil(dI / Si), ceil(dI / (Si - 1) - 1)].")}},Ml=(e,t)=>{let n=jt.normalizeAxis(t.axis,e[0].dims.length),r=e[0].dataType,s=3===r,i=e[0].dims,a=e[1].dataType,o=jt.size(i),l=3===r||2===r,u=l?[Math.ceil(jt.size(e[0].dims)/4)]:e[0].dims,c=e[1].dims,d=e.length>2?e[2]:void 0,p=d?l?[Math.ceil(jt.size(d.dims)/4)]:d.dims:void 0,h=0===c.length||1===c.length&&1===c[0],m=!1===h&&1===c.length,f=vn(o),_=h&&(!l||4===f),g=_?f:1,w=_&&!l?f:1,y=Cn("input",l?12:r,u.length,w),b=Cn("scale",a,c.length),x=d?Cn("zero_point",l?12:r,p.length):void 0,v=En("output",a,i.length,g),M=[y,b];x&&M.push(x);let k=[u,c];d&&k.push(p);let T=[{type:12,data:o/g},{type:12,data:n},{type:12,data:t.blockSize},...xn(...k,i)];return{name:"DequantizeLinear",shaderCache:{hint:t.cacheKey,inputDependencies:x?["rank","rank","rank"]:["rank","rank"]},getShaderSource:e=>`\n      ${e.registerUniforms([{name:"output_size",type:"u32"},{name:"axis",type:"u32"},{name:"block_size",type:"u32"}]).declareVariables(...M,v)}\n      ${e.mainStart()}\n          ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          let output_indices = ${v.offsetToIndices("global_idx")};\n\n          // Set input x\n          ${l?`\n            let input = ${y.getByOffset("global_idx / 4")};\n            let x_vec = ${s?"unpack4xI8(input)":"unpack4xU8(input)"};\n            let x_value = ${1===g?"x_vec[global_idx % 4]":"x_vec"};`:`let x_value = ${y.getByOffset("global_idx")};`};\n\n          // Set scale input\n          ${h?`let scale_value= ${b.getByOffset("0")}`:m?`\n            let scale_index = ${v.indicesGet("output_indices","uniforms.axis")};\n            let scale_value= ${b.getByOffset("scale_index")};`:`\n            var scale_indices: ${b.type.indices} = output_indices;\n            let index = ${b.indicesGet("scale_indices","uniforms.axis")} / uniforms.block_size;\n            ${b.indicesSet("scale_indices","uniforms.axis","index")};\n            let scale_value= ${b.getByIndices("scale_indices")};`};\n\n          // Set zero-point input\n          ${x?h?l?`\n                let zero_point_input = ${x.getByOffset("0")};\n                let zero_point_vec =  ${s?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};\n                let zero_point_value= zero_point_vec[0]`:`let zero_point_value = ${x.getByOffset("0")}`:m?l?`\n                let zero_point_index = ${v.indicesGet("output_indices","uniforms.axis")};\n                let zero_point_input = ${x.getByOffset("zero_point_index / 4")};\n                let zero_point_vec =  ${s?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};\n                let zero_point_value = zero_point_vec[zero_point_index % 4]`:`\n                let zero_point_index = ${v.indicesGet("output_indices","uniforms.axis")};\n                let zero_point_value = ${x.getByOffset("zero_point_index")};`:l?`\n                let zero_point_offset = ${b.indicesToOffset("scale_indices")};\n                let zero_point_input = ${x.getByOffset("zero_point_offset / 4")};\n                let zero_point_vec = ${s?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};\n                let zero_point_value = zero_point_vec[zero_point_offset % 4];`:`let zero_point_value = ${x.getByIndices("scale_indices")};`:`let zero_point_value = ${l?s?"i32":"u32":y.type.value}(0);`};\n      // Compute and write output\n      ${v.setByOffset("global_idx",`${v.type.value}(x_value - zero_point_value) * scale_value`)};\n      }`,getRunData:()=>({outputs:[{dims:i,dataType:a}],dispatchGroup:{x:Math.ceil(o/g/64),y:1,z:1},programUniforms:T})}},kl=(e,t)=>{vl(e.inputs,t),e.compute(Ml(e.inputs,t))},Tl=e=>_n({axis:e.axis,blockSize:e.blockSize})}),Fc=ue(()=>{Ae(),Iu(),Vu(),$l=(e,t,n)=>{if(e===t||e<t&&n<0||e>t&&n>0)throw new Error("Range these inputs' contents are invalid.")},Sl=(e,t,n,r)=>{let s=Math.abs(Math.ceil((t-e)/n)),i=[s],a=s,o=[{type:12,data:a},{type:r,data:e},{type:r,data:n},...xn(i)];return{name:"Range",shaderCache:{hint:`${r}`},getShaderSource:e=>{let t=En("output",r,i.length),n=t.type.value,s=[{name:"outputSize",type:"u32"},{name:"start",type:n},{name:"delta",type:n}];return`\n        ${e.registerUniforms(s).declareVariables(t)}\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        output[global_idx] = uniforms.start + ${n}(global_idx) * uniforms.delta;\n      }`},getRunData:()=>({outputs:[{dims:i,dataType:r}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:o})}},Cl=e=>{let t=0,n=0,r=0;6===e.inputs[0].dataType?(t=e.inputs[0].getInt32Array()[0],n=e.inputs[1].getInt32Array()[0],r=e.inputs[2].getInt32Array()[0]):1===e.inputs[0].dataType&&(t=e.inputs[0].getFloat32Array()[0],n=e.inputs[1].getFloat32Array()[0],r=e.inputs[2].getFloat32Array()[0]),z.webgpu.validateInputContent&&$l(t,n,r),e.compute(Sl(t,n,r,e.inputs[0].dataType),{inputs:[]})}}),zc=ue(()=>{Iu(),Ou(),Ru(),Vu(),El=(e,t,n,r)=>{if("none"!==e&&"i32"!==r&&"u32"!==r&&"f32"!==r)throw new Error(`Input ${r} is not supported with reduction ${e}.`);let s="{\n                var oldValue = 0;\n                loop {\n                  let newValueF32 =",i=`;\n                  let newValue = bitcast<i32>(newValueF32);\n                  let res = atomicCompareExchangeWeak(&${t}, oldValue, newValue);\n                  if res.exchanged {\n                    break;\n                  }\n                  oldValue = res.old_value;\n                }\n              }`;switch(e){case"none":return`${t}=${n};`;case"add":return"i32"===r||"u32"===r?`atomicAdd(&${t}, bitcast<${r}>(${n}));`:`\n              ${s}bitcast<${r}>(oldValue) + (${n})${i}`;case"max":return"i32"===r||"u32"===r?`atomicMax(&${t}, bitcast<${r}>(${n}));`:`\n                ${s}max(bitcast<f32>(oldValue), (${n}))${i}`;case"min":return"i32"===r||"u32"===r?`atomicMin(&${t}, bitcast<${r}>(${n}));`:`${s}min(bitcast<${r}>(oldValue), (${n}))${i}`;case"mul":return`${s}(bitcast<${r}>(oldValue) * (${n}))${i}`;default:throw new Error(`Reduction ${e} is not supported.`)}},Pl=(e,t)=>(1===e?"\n    let element_count_dim = uniforms.output_strides;\n    let dim_value = uniforms.output_shape;":`\n    let element_count_dim = uniforms.output_strides[${t?"i - indices_start":"i"}];\n    let dim_value = uniforms.output_shape[${t?"i - indices_start":"i"} + uniforms.last_index_dimension];`)+"\n    \n    if (index >= 0) {\n      if (index >= i32(dim_value)) {\n        index = i32(dim_value - 1);\n      }\n    } else {\n      if (index < -i32(dim_value)) {\n        index = 0;\n      } else {\n        index += i32(dim_value);\n      }\n    }\n    data_offset += u32((u32(index) * element_count_dim));",Al=(e,t,n)=>`for (var i = 0u; i < uniforms.num_updates_elements; i++) {\n        let value = updates[uniforms.num_updates_elements * ${n?"global_idx":"idx"} + i];\n        ${El(e.reduction,"output[data_offset + i]","value",t)}\n      }`,Il=(e,t)=>{let n=e[0].dims,r=e[1].dims,s=n,i=Math.ceil(jt.size(r)/1),a=r[r.length-1],o=jt.sizeFromDimension(n,a),l=jt.sizeFromDimension(r,0)/a,u=[{type:12,data:i},{type:12,data:a},{type:12,data:o},...xn(e[1].dims,e[2].dims,s)];return{name:"ScatterND",shaderCache:{hint:`${t.cacheKey}_${t.reduction}`,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:s,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:u}),getShaderSource:r=>{let i=Cn("indices",e[1].dataType,e[1].dims.length),a=Cn("updates",e[2].dataType,e[2].dims.length,1),o="none"!==t.reduction&&""!==t.reduction?Pn("output",e[0].dataType,s.length):En("output",e[0].dataType,s.length,1);return`\n      ${r.registerUniform("output_size","u32").registerUniform("last_index_dimension","u32").registerUniform("num_updates_elements","u32").declareVariables(i,a,o)}\n      ${r.mainStart()}\n        ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n  var hasDuplicates = false;\n  if (${"none"===t.reduction}) {\n    for (var i = 0; i < ${l}; i = i + 1) {\n      for (var j = i + 1; j < ${l}; j = j + 1) {\n        var index_i = i32(indices[i].x);\n        var index_j = i32(indices[j].x);\n        if (index_i == index_j) {\n          hasDuplicates = true;\n          break;\n        }\n      }\n      if (hasDuplicates) {\n        break;\n      }\n    }\n  }\n\n  if (${"none"===t.reduction} && hasDuplicates) {\n    if (global_idx != 0u) {\n      return;\n    }\n    // Process each index-update pair individually when duplicates exist\n    for (var idx = 0u; idx < ${l}u; idx++) {\n      var data_offset = 0u;\n      for (var i = 0u; i < uniforms.last_index_dimension; i++) {\n        var index = i32(indices[idx * uniforms.last_index_dimension + i].x);\n        ${Pl(n.length,!1)}\n      }\n      ${Al(t,o.type.value,!1)}\n    }\n    return;\n  }\n\n  var data_offset = 0u;\n  var indices_start = uniforms.last_index_dimension * global_idx;\n  var indices_end = indices_start + uniforms.last_index_dimension;\n  for (var i = indices_start; i < indices_end; i++) {\n    var index = i32(indices[i].x);\n    ${Pl(n.length,!0)}\n  }\n  ${Al(t,o.type.value,!0)}\n  }`}}},Fl=e=>_n({reduction:e.reduction}),zl=(e,t)=>{e.compute(Il(e.inputs,t),{inputs:[e.inputs[1],e.inputs[2]],outputs:[]})}}),Oc=ue(()=>{Iu(),Ou(),Ru(),Vu(),Ol=(e,t)=>{if(e.every(e=>e>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0)if("linear"===t.mode){if(!(2===e.length||3===e.length||4===e.length&&1===e[0]&&1===e[1]||4===e.length&&1===e[0]&&1===e[3]||5===e.length&&1===e[0]&&1===e[1]))throw new Error("For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and\n            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1")}else if("cubic"===t.mode&&!(2===e.length||4===e.length&&1===e[0]&&1===e[1]||4===e.length&&1===e[0]&&1===e[3]))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")},Ll=(e,t,n)=>{t.every(e=>e>=0&&e<n||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let r=new Array(n).fill(1);return t.forEach((t,n)=>r[t]=e[n]),r},Bl=(e,t,n,r,s,i)=>{let[a,o,l]=n>10?[1,2,3]:[-1,e.length>1?1:-1,-1],u=e[0].dims.length;if(a>0&&e.length>a&&e[a].dims.length>0)e[a].getFloat32Array().forEach(e=>i.push(e));else if("tf_crop_and_resize"===t.coordinateTransformMode)throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(o>0&&e.length>o&&1===e[o].dims.length&&e[o].dims[0]>0){if(e[o].getFloat32Array().forEach(e=>r.push(e)),0!==r.length&&r.length!==u&&n>=18&&r.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");Ol(r,t),t.axes.length>0&&Ll(r,t.axes,u).forEach((e,t)=>r[t]=e)}if(l>0&&e.length>l&&1===e[l].dims.length&&e[l].dims[0]>0&&(e[l].getBigInt64Array().forEach(e=>s.push(Number(e))),0!==s.length&&s.length!==u&&n>=18&&s.length!==t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(0!==r.length&&r.length!==t.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(0!==s.length&&s.length!==t.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof r<"u"&&typeof s<"u"&&r.length>0&&s.length>u)throw new Error("Resize requires only of scales or sizes to be specified")},Dl=(e,t,n,r)=>`\n  // The whole part and the fractional part are calculated separately due to inaccuracy of floating\n  // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an\n  // offset-by-one error later in floor().\n  let big = (${e}) * (${t});\n  let whole = ${r}(big / (${n}));\n  let fract = ${r}(big % (${n})) / ${r}(${n});\n  return whole + fract;\n`,Nl=(e,t)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,\n     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${t} { `+(()=>{switch(e){case"asymmetric":return`\n          if (xScale < 1.0 || floor(xScale) != xScale) {\n            return ${t}(xResized) / ${t}(xScale);\n          } else {\n            ${Dl("xResized","lengthOriginal","lengthResized",t)}\n          }\n        `;case"pytorch_half_pixel":return`if (lengthResized > 1) {\n                    return (${t}(xResized) + 0.5) / ${t}(xScale) - 0.5;\n                  } else {\n                    return 0.0;\n                  }`;case"tf_half_pixel_for_nn":return`return (${t}(xResized) + 0.5) / ${t}(xScale);`;case"align_corners":return`if (lengthResized == 1) {\n                    return 0.0;\n                  } else {\n                    ${Dl("xResized","lengthOriginal - 1","lengthResized - 1",t)}\n                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {\n                    return ${t}(roiStart) * ${t}(lengthOriginal - 1) +\n                        (${t}(xResized) * ${t}(roiEnd - roiStart) * ${t}(lengthOriginal - 1)) /\n                        ${t}(lengthResized - 1);\n                  } else {\n                    return 0.5 * ${t}(roiStart + roiEnd) * ${t}(lengthOriginal - 1);\n                  }`;case"half_pixel_symmetric":return`const outputWidth = ${t}xScale * ${t}(lengthResized);\n                  const adjustment = ${t}(lengthResized) / outputWidth;\n                  const center = ${t}(lengthOriginal) / 2;\n                  const offset = center * (1 - adjustment);\n                  return offset + ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;case"half_pixel":return`return ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",jl=(e,t,n)=>`fn getNearestPixelFromOriginal(xOriginal: ${n}, isDownSample: bool) -> ${n} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",Rl=(e,t,n)=>{let r=new Array(n).fill(0).concat(new Array(n).fill(1)),s=0===e.length?r:e.slice();return t.length>0?(t.forEach((e,i)=>{r[e]=s[i],r[i+n]=s[t.length+i]}),r):s},Vl=(e,t,n,r)=>{let s=[];if(n.length>0)if(r.length>0){if(e.forEach(e=>s.push(e)),Math.max(...r)>e.length)throw new Error("axes is out of bound");r.forEach((e,t)=>s[e]=n[t])}else n.forEach(e=>s.push(e));else{if(0===t.length)throw new Error("Resize requires either scales or sizes.");s=e.map((e,n)=>Math.round(e*t[n]))}return s},Gl=(e,t,n)=>{let r=(()=>{switch(n.keepAspectRatioPolicy){case"not_larger":return n.axes.length>0?Math.min(...n.axes.map(e=>t[e]),Number.MAX_VALUE):Math.min(...t,Number.MAX_VALUE);case"not_smaller":return n.axes.length>0?Math.max(...n.axes.map(e=>t[e]),Number.MIN_VALUE):Math.max(...t,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${n.keepAspectRatioPolicy} is not supported`)}})();t.fill(1,0,t.length);let s=e.slice();return n.axes.length>0?(n.axes.forEach(e=>t[e]=r),n.axes.forEach(n=>s[n]=Math.round(e[n]*t[n]))):(t.fill(r,0,t.length),s.forEach((e,n)=>s[n]=Math.round(e*t[n]))),s},Ul=(e,t,n,r,s)=>`\n    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${n.length}> {\n      var original_indices: array<${e.type.value}, ${n.length}>;\n      for (var i:u32 = 0; i < ${n.length}; i++) {\n        var output_index = ${e.indicesGet("output_indices","i")};\n        var scale = ${$n("uniforms.scales","i",r)};\n        var roi_low = ${$n("uniforms.roi","i",s)};\n        var roi_hi = ${$n("uniforms.roi",`i + ${t.length}`,s)};\n        if (scale == 1.0) {\n          original_indices[i] = ${e.type.value}(output_index);\n        } else {\n          var input_shape_i = ${$n("uniforms.input_shape","i",t.length)};\n          var output_shape_i = ${$n("uniforms.output_shape","i",n.length)};\n          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                           input_shape_i, roi_low, roi_hi);\n        }\n      }\n      return original_indices;\n    }`,ql=(e,t,n,r,s,i,a)=>`\n    fn calculateInputIndicesFromOutputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\n      var input_indices: ${e.type.indices};\n      for (var i:u32 = 0; i < ${r.length}; i++) {\n        var output_index = ${t.indicesGet("output_indices","i")};\n        var input_index: u32;\n        var scale = ${$n("uniforms.scales","i",s)};\n        if (scale == 1.0) {\n          input_index = output_index;\n        } else {\n          var roi_low = ${$n("uniforms.roi","i",i)};\n          var roi_hi = ${$n("uniforms.roi",`i + ${n.length}`,i)};\n          var input_shape_i = ${$n("uniforms.input_shape","i",n.length)};\n          var output_shape_i = ${$n("uniforms.output_shape","i",r.length)};\n          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                        input_shape_i, roi_low, roi_hi);\n          if (!${a} || (original_idx >= 0 && original_idx < ${t.type.value}(input_shape_i))) {\n            if (original_idx < 0) {\n              input_index = 0;\n            } else if (original_idx > ${t.type.value}(input_shape_i - 1)) {\n              input_index = input_shape_i - 1;\n            } else {\n              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));\n            }\n          } else {\n            input_index = u32(original_idx);\n          }\n        }\n        ${e.indicesSet("input_indices","i","input_index")}\n      }\n      return input_indices;\n    }`,Wl=(e,t)=>`\n    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {\n      for (var i:u32 = 0; i < ${t.length}; i++) {\n        var input_index = ${e.indicesGet("input_indices","i")};\n        if (input_index < 0 || input_index >= ${$n("uniforms.input_shape","i",t.length)}) {\n          return false;\n        }\n      }\n      return true;\n    }`,Hl=(e,t,n,r)=>e.rank>r?`\n    ${e.indicesSet("input_indices",t,"channel")};\n    ${e.indicesSet("input_indices",n,"batch")};\n`:"",Kl=(e,t,n,r,s)=>{let[i,a,o,l]=2===n.length?[-1,0,1,-1]:[0,2,3,1],u=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${u} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",a,`max(0, min(row, ${n[a]} - 1))`)};\n      ${e.indicesSet("input_indices",o,`max(0, min(col, ${n[o]} - 1))`)};\n      ${Hl(e,l,i,2)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn bilinearInterpolation(output_indices: ${t.type.indices}) -> ${u} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var row:${u} = originalIndices[${a}];\n      var col:${u} = originalIndices[${o}];\n      ${r?`if (row < 0 || row > (${n[a]} - 1) || col < 0 || col > (${n[o]} - 1)) {\n        return ${s};\n      }`:""};\n      row = max(0, min(row, ${n[a]} - 1));\n      col = max(0, min(col, ${n[o]} - 1));\n      var row1: u32 = u32(row);\n      var col1: u32 = u32(col);\n      var row2: u32 = u32(row + 1);\n      var col2: u32 = u32(col + 1);\n      var channel: u32 = ${n.length>2?`u32(originalIndices[${l}])`:"0"};\n      var batch: u32 =  ${n.length>2?`u32(originalIndices[${i}])`:"0"};\n      var x11: ${u} = getInputValue(batch, channel, row1, col1);\n      var x12: ${u} = getInputValue(batch, channel, row1, col2);\n      var x21: ${u} = getInputValue(batch, channel, row2, col1);\n      var x22: ${u} = getInputValue(batch, channel, row2, col2);\n      var dx1: ${u} = abs(row - ${u}(row1));\n      var dx2: ${u} = abs(${u}(row2) - row);\n      var dy1: ${u} = abs(col - ${u}(col1));\n      var dy2: ${u} = abs(${u}(col2) - col);\n      if (row1 == row2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (col1 == col2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);\n    }`},Ql=(e,t,n,r,s,i,a,o,l,u)=>{let c=2===n.length,[d,p]=c?[0,1]:[2,3],h=e.type.value,m=a=>{let c=a===d?"row":"col";return`\n      fn ${c}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${t.type.indices}) -> ${h} {\n        var output_index = ${t.indicesGet("output_indices",a)};\n        var originalIdx: ${h} = getOriginalCoordinateFromResizedCoordinate(output_index, ${s[a]},\n        ${r[a]}, ${n[a]}, ${i[a]}, ${i[a]} + ${n.length});\n        var fractOriginalIdx: ${h} = originalIdx - floor(originalIdx);\n        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);\n\n        if (${o} && (originalIdx < 0 || originalIdx > (${n[a]} - 1))) {\n          return ${l};\n        }\n        var data: array<${h}, 4> = array<${h}, 4>(0.0, 0.0, 0.0, 0.0);\n        for (var i: i32 = -1; i < 3; i++) {\n          var ${c}: ${h} = originalIdx + ${h}(i);\n          if (${c} < 0 || ${c} >= ${n[a]}) {\n            ${u?"coefs[i + 1] = 0.0;\n                        continue;":o?`return ${l};`:`${c} = max(0, min(${c}, ${n[a]} - 1));`};\n          }\n        var input_indices_copy: ${e.type.indices} = input_indices;\n          ${e.indicesSet("input_indices_copy",a,`u32(${c})`)};\n          data[i + 1] = ${a===d?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};\n        }\n        return cubicInterpolation1D(data, coefs);\n      }`};return`\n    ${m(d)};\n    ${m(p)};\n  fn getCubicInterpolationCoefs(s: ${h}) -> array<${h}, 4> {\n    var absS = abs(s);\n    var coeffs: array<${h}, 4> = array<${h}, 4>(0.0, 0.0, 0.0, 0.0);\n    var oneMinusAbsS: ${h} = 1.0 - absS;\n    var twoMinusAbsS: ${h} = 2.0 - absS;\n    var onePlusAbsS: ${h} = 1.0 + absS;\n    coeffs[0] = ((${a} * onePlusAbsS - 5 * ${a}) * onePlusAbsS + 8 * ${a}) * onePlusAbsS - 4 * ${a};\n    coeffs[1] = ((${a} + 2) * absS - (${a} + 3)) * absS * absS + 1;\n    coeffs[2] = ((${a} + 2) * oneMinusAbsS - (${a} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;\n    coeffs[3] = ((${a} * twoMinusAbsS - 5 * ${a}) * twoMinusAbsS + 8 * ${a}) * twoMinusAbsS - 4 * ${a};\n    return coeffs;\n  }\n\n  fn cubicInterpolation1D(x: array<${h}, 4>, coefs: array<${h}, 4>) -> ${h} {\n    var coefsSum: ${h} = coefs[0] + coefs[1] + coefs[2] + coefs[3];\n    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;\n  }\n\n  fn bicubicInterpolation(output_indices: ${t.type.indices}) -> ${h} {\n    var input_indices: ${e.type.indices} = output_indices;\n    return colCubicInterpolation(input_indices, output_indices);\n  }\n    `},Xl=(e,t,n,r,s)=>{let[i,a,o,l,u]=3===n.length?[-1,0,1,2,-1]:[0,2,3,4,1],c=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${c} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",a,`max(0, min(depth, ${n[a]} - 1))`)};\n      ${e.indicesSet("input_indices",o,`max(0, min(height, ${n[o]} - 1))`)};\n      ${e.indicesSet("input_indices",l,`max(0, min(width, ${n[l]} - 1))`)};\n      ${Hl(e,u,i,3)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn trilinearInterpolation(output_indices: ${t.type.indices}) -> ${c} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var depth:${c} = originalIndices[${a}];\n      var height:${c} = originalIndices[${o}];\n      var width:${c} = originalIndices[${l}];\n      ${r?`if (depth < 0 || depth > (${n[a]} - 1) || height < 0 || height > (${n[o]} - 1) || width < 0 || (width > ${n[l]} - 1)) {\n      return ${s};\n        }`:""};\n\n    depth = max(0, min(depth, ${n[a]} - 1));\n      height = max(0, min(height, ${n[o]} - 1));\n      width = max(0, min(width, ${n[l]} - 1));\n      var depth1: u32 = u32(depth);\n      var height1: u32 = u32(height);\n      var width1: u32 = u32(width);\n      var depth2: u32 = u32(depth + 1);\n      var height2: u32 = u32(height + 1);\n      var width2: u32 = u32(width + 1);\n      var channel: u32 = ${n.length>3?`u32(originalIndices[${u}])`:"0"};\n      var batch: u32 =  ${n.length>3?`u32(originalIndices[${i}])`:"0"};\n\n      var x111: ${c} = getInputValue(batch, channel, depth1, height1, width1);\n      var x112: ${c} = getInputValue(batch, channel, depth1, height1, width2);\n      var x121: ${c} = getInputValue(batch, channel, depth1, height2, width1);\n      var x122: ${c} = getInputValue(batch, channel, depth1, height2, width2);\n      var x211: ${c} = getInputValue(batch, channel, depth2, height1, width1);\n      var x212: ${c} = getInputValue(batch, channel, depth2, height1, width2);\n      var x221: ${c} = getInputValue(batch, channel, depth2, height2, width1);\n      var x222: ${c} = getInputValue(batch, channel, depth2, height2, width2);\n      var dx1: ${c} = abs(depth - ${c}(depth1));\n      var dx2: ${c} = abs(${c}(depth2) - depth);\n      var dy1: ${c} = abs(height - ${c}(height1));\n      var dy2: ${c} = abs(${c}(height2) - height);\n      var dz1: ${c} = abs(width - ${c}(width1));\n      var dz2: ${c} = abs(${c}(width2) - width);\n      if (depth1 == depth2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (height1 == height2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      if (width1 == width2) {\n        dz1 = 0.5;\n        dz2 = 0.5;\n      }\n      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +\n              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);\n    }`},Jl=(e,t,n,r,s,i)=>{let a=e.dims,o=Rl(i,t.axes,a.length),l=Vl(a,r,s,t.axes),u=r.slice();0===r.length&&(u=a.map((e,t)=>0===e?1:l[t]/e),"stretch"!==t.keepAspectRatioPolicy&&(l=Gl(a,u,t)));let c=En("output",e.dataType,l.length),d=Cn("input",e.dataType,a.length),p=jt.size(l),h=a.length===l.length&&a.every((e,t)=>e===l[t]),m="tf_crop_and_resize"===t.coordinateTransformMode,f=t.extrapolationValue,_=d.type.value;return{name:"Resize",shaderCache:{hint:`${t.cacheKey}|${n}|${u.length>0?"cubic"===t.mode?u:u.length:""}|${s.length>0?s:""}|${o.length>0?o:""}|${h}|${"nearest"===t.mode?a.length:a}`,inputDependencies:["rank"]},getShaderSource:e=>`\n      ${h?"":`\n      ${Nl(t.coordinateTransformMode,_)};\n      ${(()=>{switch(t.mode){case"nearest":return`\n              ${Wl(d,a)};\n              ${jl(t.nearestMode,n,_)};\n              ${ql(d,c,a,l,u.length,o.length,m)};\n              `;case"linear":return`\n              ${Ul(c,a,l,u.length,o.length)};\n              ${(()=>{if(2===a.length||4===a.length)return`${Kl(d,c,a,m,f)}`;if(3===a.length||5===a.length)return`${Xl(d,c,a,m,f)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};\n            `;case"cubic":return`\n            ${(()=>{if(2===a.length||4===a.length)return`${Ql(d,c,a,l,u,o,t.cubicCoeffA,m,t.extrapolationValue,t.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};\n            `;default:throw Error("Invalid resize mode")}})()};\n      `}\n      ${e.registerUniform("output_size","u32").registerUniform("scales","f32",u.length).registerUniform("roi","f32",o.length).declareVariables(d,c)}\n      ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n        ${h?"output[global_idx] = input[global_idx];":`\n        let output_indices = ${c.offsetToIndices("global_idx")};\n        var input_indices: ${d.type.indices};\n        ${(()=>{switch(t.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);\n                if (checkInputIndices(input_indices)) {\n                  output[global_idx] = ${d.getByIndices("input_indices")};\n                } else {\n                  output[global_idx] = ${t.extrapolationValue};\n                }`;case"linear":return`output[global_idx] = ${2===a.length||4===a.length?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${t.mode}`)}})()};\n`}\n      }`,getRunData:()=>({outputs:[{dims:l,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:[{type:12,data:p},{type:1,data:u},{type:1,data:o},...xn(a,l)]})}},Yl=e=>{let t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]},Zl=(e,t)=>{let n=[],r=[],s=[],i=Yl(e);if(0!==t.antialias)throw Error("Only default value (0) for Antialias attribute is supported");Bl(e.inputs,t,i,n,r,s),e.compute(Jl(e.inputs[0],t,i,n,r,s),{inputs:[0]})},eu=e=>{let t=e.antialias,n=e.axes,r=e.coordinateTransformMode,s=e.cubicCoeffA,i=0!==e.excludeOutside,a=e.extrapolationValue,o=e.keepAspectRatioPolicy,l=e.mode,u=""===e.nearestMode?"simple":e.nearestMode;return _n({antialias:t,axes:n,coordinateTransformMode:r,cubicCoeffA:s,excludeOutside:i,extrapolationValue:a,keepAspectRatioPolicy:o,mode:l,nearestMode:u})}}),Lc=ue(()=>{Iu(),Ou(),Vu(),tu=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let t=e[0],n=e[1],r=e[2];if(t.dataType!==n.dataType||t.dataType!==r.dataType)throw new Error("All inputs must have the same data type");if(3!==t.dims.length&&2!==t.dims.length)throw new Error("Input must be 2D or 3D");if(3!==n.dims.length&&2!==n.dims.length)throw new Error("Skip must be 2D or 3D");let s=t.dims[t.dims.length-1],i=t.dims[t.dims.length-2];if(n.dims[n.dims.length-1]!==s)throw new Error("Skip must have the same hidden size as input");if(n.dims[n.dims.length-2]!==i)throw new Error("Skip must have the same sequence length as input");if(1!==r.dims.length)throw new Error("Gamma must be 1D");if(r.dims[r.dims.length-1]!==s)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let t=e[3];if(1!==t.dims.length)throw new Error("Beta must be 1D");if(t.dims[t.dims.length-1]!==s)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let t=e[4];if(1!==t.dims.length)throw new Error("Bias must be 1D");if(t.dims[t.dims.length-1]!==s)throw new Error("Bias must have the same hidden size as input")}},nu=(e,t,n,r)=>{let s=t.simplified,i=e[0].dims,a=jt.size(i),o=i,l=a,u=i.slice(-1)[0],c=r?i.slice(0,-1).concat(1):[],d=!s&&e.length>3,p=e.length>4,h=r&&n>1,m=r&&n>2,f=n>3,_=vn(u),g=[{type:12,data:l},{type:12,data:_},{type:12,data:u},{type:1,data:t.epsilon}],w=[{dims:o,dataType:e[0].dataType}];return n>1&&w.push({dims:c,dataType:1}),n>2&&w.push({dims:c,dataType:1}),n>3&&w.push({dims:i,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${_};${h};${m};${f}`,inputDependencies:e.map((e,t)=>"type")},getShaderSource:t=>{let n=[Cn("x",e[0].dataType,e[0].dims,_),Cn("skip",e[1].dataType,e[1].dims,_),Cn("gamma",e[2].dataType,e[2].dims,_)];d&&n.push(Cn("beta",e[3].dataType,e[3].dims,_)),p&&n.push(Cn("bias",e[4].dataType,e[4].dims,_)),n.push(En("output",e[0].dataType,o,_)),h&&n.push(En("mean_output",1,c)),m&&n.push(En("inv_std_output",1,c)),f&&n.push(En("input_skip_bias_sum",e[0].dataType,o,_));let r=yn(e[0].dataType),i=yn(1,_);return`\n\n      ${t.registerUniforms([{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}]).declareVariables(...n)}\n      var<workgroup> sum_shared : array<${i}, 64>;\n      var<workgroup> sum_squared_shared : array<${i}, 64>;\n\n      ${t.mainStart([64,1,1])}\n        let ix = local_id.x;\n        let iy = global_id.x / 64;\n\n        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;\n        var stride = hidden_size_vectorized / 64;\n        let offset = ix * stride + iy * hidden_size_vectorized;\n        let offset1d = stride * ix;\n        if (ix == 63) {\n          stride = hidden_size_vectorized - stride * ix;\n        }\n        for (var i: u32 = 0; i < stride; i++) {\n          let skip_value = skip[offset + i];\n          let bias_value = ${p?"bias[offset1d + i]":r+"(0.0)"};\n          let input_value = x[offset + i];\n          let value = input_value + skip_value + bias_value;\n          ${f?"input_skip_bias_sum[offset + i] = value;":""}\n          output[offset + i] = value;\n          let f32_value = ${kn(r,_,"value")};\n          sum_shared[ix] += f32_value;\n          sum_squared_shared[ix] += f32_value * f32_value;\n        }\n        workgroupBarrier();\n\n        var reduce_size : u32 = 64;\n        for (var curr_size = reduce_size >> 1;  curr_size > 0; curr_size = reduce_size >> 1) {\n          reduce_size = curr_size + (reduce_size & 1);\n          if (ix < curr_size) {\n            sum_shared[ix] += sum_shared[ix + reduce_size];\n            sum_squared_shared[ix] += sum_squared_shared[ix + reduce_size];\n          }\n          workgroupBarrier();\n        }\n\n        let sum = sum_shared[0];\n        let square_sum = sum_squared_shared[0];\n        let mean = ${Tn("sum",_)} / f32(uniforms.hidden_size);\n        let inv_std_dev = inverseSqrt(${Tn("square_sum",_)} / f32(uniforms.hidden_size) ${s?"":"- mean * mean"} + uniforms.epsilon);\n        ${h?"mean_output[global_idx] = mean;":""}\n        ${m?"inv_std_output[global_idx] = inv_std_dev;":""}\n\n        for (var i: u32 = 0; i < stride; i++) {\n          output[offset + i] = (output[offset + i] ${s?"":`- ${r}(mean)`}) *\n            ${r}(inv_std_dev) * gamma[offset1d + i]\n            ${d?"+ beta[offset1d + i]":""};\n        }\n      }`},getRunData:()=>({outputs:w,dispatchGroup:{x:Math.ceil(l/u)},programUniforms:g})}},ru=(e,t)=>{tu(e.inputs);let n=[0];e.outputCount>1&&n.push(-3),e.outputCount>2&&n.push(-3),e.outputCount>3&&n.push(3),e.compute(nu(e.inputs,t,e.outputCount,!1),{outputs:n})}}),Bc=ue(()=>{Iu(),Ou(),Ru(),Vu(),su=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(0!==t.axes.length){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((t,n)=>{if(6!==e[n+1].dataType&&7!==e[n+1].dataType)throw new Error(`Input ${n} must be an array of int32 or int64`)})},iu=(e,t)=>{let n=[];if(e.length>t)if(7===e[t].dataType)e[t].getBigInt64Array().forEach(e=>n.push(Number(e)));else{if(6!==e[t].dataType)throw new Error(`Input ${t} must be an array of int32 or int64`);e[t].getInt32Array().forEach(e=>n.push(Number(e)))}return n},au=(e,t)=>{if(e.length>1){let t=iu(e,1),n=iu(e,2),r=iu(e,3);return 0===r.length&&(r=[...Array(e[0].dims.length).keys()]),_n({starts:t,ends:n,axes:r})}return t},ou=(e,t,n,r,s)=>{let i=e;return e<0&&(i+=n[r[t]]),s[t]<0?Math.max(0,Math.min(i,n[r[t]]-1)):Math.max(0,Math.min(i,n[r[t]]))},lu=(e,t,n)=>`fn calculateInputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\n          var input_indices: ${e.type.indices};\n          var carry = 0u;\n          for (var i = ${n.length}; i >= 0; i--) {\n            let input_shape_i = ${$n("uniforms.input_shape","i",n.length)};\n            let steps_i = ${$n("uniforms.steps","i",n.length)};\n            let signs_i = ${$n("uniforms.signs","i",n.length)};\n            let starts_i = ${$n("uniforms.starts","i",n.length)};\n            var output_index = ${t.indicesGet("output_indices","i")};\n            var input_index = output_index * steps_i + starts_i + carry;\n            carry = input_index / input_shape_i;\n            input_index = input_index % input_shape_i;\n            if (signs_i < 0) {\n              input_index = input_shape_i - input_index - 1u + starts_i;\n            }\n            ${e.indicesSet("input_indices","i","input_index")};\n          }\n          return input_indices;\n      }`,uu=(e,t)=>{let n=e[0].dims,r=jt.size(n),s=t.axes.length>0?jt.normalizeAxes(t.axes,n.length):[...Array(n.length).keys()],i=iu(e,4);i.forEach(e=>0!==e||(()=>{throw new Error("step cannot be 0")})),0===i.length&&(i=Array(s.length).fill(1));let a=t.starts.map((e,t)=>ou(e,t,n,s,i)),o=t.ends.map((e,t)=>ou(e,t,n,s,i));if(s.length!==a.length||s.length!==o.length)throw new Error("start, ends and axes should have the same number of elements");if(s.length!==n.length)for(let e=0;e<n.length;++e)s.includes(e)||(a.splice(e,0,0),o.splice(e,0,n[e]),i.splice(e,0,1));let l=i.map(e=>Math.sign(e));i.forEach((e,t,n)=>{if(e<0){let r=(o[t]-a[t])/e,s=a[t],l=s+r*i[t];a[t]=l,o[t]=s,n[t]=-e}});let u=n.slice(0);s.forEach((e,t)=>{u[e]=Math.ceil((o[e]-a[e])/i[e])});let c={dims:u,dataType:e[0].dataType},d=En("output",e[0].dataType,u.length),p=Cn("input",e[0].dataType,e[0].dims.length),h=jt.size(u),m=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:a.length},{name:"signs",type:"i32",length:l.length},{name:"steps",type:"u32",length:i.length}],f=[{type:12,data:h},{type:12,data:a},{type:6,data:l},{type:12,data:i},...xn(e[0].dims,u)];return{name:"Slice",shaderCache:{hint:`${l.length}_${a.length}_${i.length}`,inputDependencies:["rank"]},getShaderSource:e=>`\n      ${e.registerUniforms(m).declareVariables(p,d)}\n        ${lu(p,d,n)}\n        ${e.mainStart()}\n          ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n          let output_indices = ${d.offsetToIndices("global_idx")};\n          let input_indices = calculateInputIndices(output_indices);\n          ${d.setByOffset("global_idx",p.getByIndices("input_indices"))}\n      }`,getRunData:()=>({outputs:[c],dispatchGroup:{x:Math.ceil(r/64)},programUniforms:f})}},cu=(e,t)=>{su(e.inputs,t);let n=au(e.inputs,t);e.compute(uu(e.inputs,n),{inputs:[0]})},du=e=>{let t=e.starts,n=e.ends,r=e.axes;return _n({starts:t,ends:n,axes:r})}}),Dc=ue(()=>{Iu(),Ou(),Ru(),Gu(),Vu(),pu=e=>{if(!e||1!==e.length)throw new Error("Softmax op requires 1 input.")},hu=(e,t)=>{let n,r=e.inputs[0],s=r.dims,i=jt.size(s),a=s.length,o=jt.normalizeAxis(t.axis,a),l=o<s.length-1,u=[];l?(u=Array.from({length:a},(e,t)=>t),u[o]=a-1,u[a-1]=o,n=e.compute(jn(r,u),{inputs:[r],outputs:[-1]})[0]):n=r;let c=n.dims,d=c[a-1],p=i/d,h=vn(d),m=d/h,f=64;1===p&&(f=256);let _=Cn("x",n.dataType,n.dims,h),g=En("result",n.dataType,n.dims,h),w=_.type.value,y="f32"===yn(n.dataType)?`var threadMax = ${w}(-3.402823e+38f);`:`var threadMax = ${w}(-65504.0h);`,b=e.compute({name:"Softmax",shaderCache:{hint:`${h};${f}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:c,dataType:n.dataType}],dispatchGroup:{x:p},programUniforms:[{type:6,data:m}]}),getShaderSource:e=>`\n      var<workgroup> rowMaxShared : ${w};\n      var<workgroup> rowSumShared : ${w};\n      var<workgroup> threadShared : array<${w}, ${f}>;\n\n      fn getValue(row: i32, col: i32, row_stride: i32) -> ${w} {\n        let index = row * row_stride + col;\n        return x[index];\n      }\n\n      fn setValue(row: i32, col: i32, row_stride: i32, value: ${w}) {\n        let index = row * row_stride + col;\n        result[index] = value;\n      }\n      ${e.registerUniform("packedCols","i32").declareVariables(_,g)}\n      ${e.mainStart(f)}\n        let gindex = i32(global_idx);\n        let lindex = i32(local_idx);\n        const wg = ${f};\n        let row = gindex / wg;\n        let cols = uniforms.packedCols;\n        let row_stride : i32 = uniforms.packedCols;\n\n        // find the rows max\n        ${y}\n        for (var col = lindex; col < cols; col += wg) {\n          let value = getValue(row, col, row_stride);\n          threadMax = max(threadMax, value);\n        }\n        if (lindex < cols) {\n          threadShared[lindex] = threadMax;\n        }\n        workgroupBarrier();\n\n        var reduceSize = min(cols, wg);\n        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {\n          reduceSize = currSize + (reduceSize & 1);\n          if (lindex < currSize) {\n            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowMaxShared = ${w}(${((e,t)=>4===t?`max(max(${e}.x, ${e}.y), max(${e}.z, ${e}.w))`:2===t?`max(${e}.x, ${e}.y)`:3===t?`max(max(${e}.x, ${e}.y), ${e}.z)`:e)("threadShared[0]",h)});\n        }\n        workgroupBarrier();\n\n        // find the rows sum\n        var threadSum = ${w}(0.0);\n        for (var col = lindex; col < cols; col += wg) {\n          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);\n          threadSum += subExp;\n        }\n        threadShared[lindex] = threadSum;\n        workgroupBarrier();\n\n        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {\n          if (lindex < currSize) {\n            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowSumShared = ${w}(${Tn("threadShared[0]",h)});\n        }\n        workgroupBarrier();\n\n        // calculate final value for each element in the row\n        for (var col = lindex; col < cols; col += wg) {\n          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;\n          setValue(row, col, row_stride, value);\n        }\n      }`},{inputs:[n],outputs:[l?-1:0]})[0];l&&e.compute(jn(b,u),{inputs:[b]})},mu=(e,t)=>{pu(e.inputs),hu(e,t)},fu=e=>_n({axis:e.axis})}),Nc=ue(()=>{Iu(),Ou(),Vu(),_u=e=>Array.from(e.getBigInt64Array(),Number),gu=e=>{if(!e||2!==e.length)throw new Error("Tile requires 2 inputs.");if(1!==e[0].dataType&&10!==e[0].dataType&&6!==e[0].dataType&&12!==e[0].dataType)throw new Error("Tile only support float, float16, int32, and uint32 data types");if(7!==e[1].dataType)throw new Error("Tile `repeats` input should be of int64 data type");if(1!==e[1].dims.length)throw new Error("Tile `repeats` input should be 1-D");if(_u(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},wu=(e,t)=>{let n=[];for(let r=0;r<e.length;++r)n.push(e[r]*t[r]);return n},yu=(e,t)=>{let n=e[0].dims,r=t??_u(e[1]),s=wu(n,r),i=jt.size(s),a=e[0].dataType,o=Cn("input",a,n.length),l=En("output",a,s.length);return{name:"Tile",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:s,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:12,data:i},...xn(e[0].dims,s)]}),getShaderSource:e=>`\n      const inputShape = ${o.indices(...n)};\n      ${e.registerUniform("output_size","u32").declareVariables(o,l)}\n      ${e.mainStart()}\n      ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n      let output_indices = ${l.offsetToIndices("global_idx")};\n      var input_indices: ${o.type.indices};\n      for (var i = 0; i < ${n.length}; i++) {\n        let input_dim_i = ${o.indicesGet("uniforms.input_shape","i")};\n        let input_dim_value = ${l.indicesGet("output_indices","i")}  % input_dim_i;\n\n        ${o.indicesSet("input_indices","i","input_dim_value")}\n      }\n      ${l.setByOffset("global_idx",o.getByIndices("input_indices"))}\n    }`}},bu=e=>{gu(e.inputs),e.compute(yu(e.inputs),{inputs:[0]})}}),jc=ue(()=>{Iu(),Ou(),Vu(),xu=(e,t,n,r,s)=>{let i,a=En("output_data",s,n.length,4),o=Cn("a_data",t[1].dataType,t[1].dims.length,4),l=Cn("b_data",t[2].dataType,t[2].dims.length,4),u=Cn("c_data",t[0].dataType,t[0].dims.length,4),c=(e,t,n)=>`select(${t}, ${e}, ${n})`;if(r){let e=(e,t,n="")=>{let r=`a_data[index_a${t}][component_a${t}]`,s=`b_data[index_b${t}][component_b${t}]`,i=`bool(c_data[index_c${t}] & (0xffu << (component_c${t} * 8)))`;return`\n            let output_indices${t} = ${a.offsetToIndices(`global_idx * 4u + ${t}u`)};\n            let offset_a${t} = ${o.broadcastedIndicesToOffset(`output_indices${t}`,a)};\n            let offset_b${t} = ${l.broadcastedIndicesToOffset(`output_indices${t}`,a)};\n            let offset_c${t} = ${u.broadcastedIndicesToOffset(`output_indices${t}`,a)};\n            let index_a${t} = offset_a${t} / 4u;\n            let index_b${t} = offset_b${t} / 4u;\n            let index_c${t} = offset_c${t} / 4u;\n            let component_a${t} = offset_a${t} % 4u;\n            let component_b${t} = offset_b${t} % 4u;\n            let component_c${t} = offset_c${t} % 4u;\n            ${e}[${t}] = ${n}(${c(r,s,i)});\n          `};i=9===s?`\n            var data = vec4<u32>(0);\n            ${e("data",0,"u32")}\n            ${e("data",1,"u32")}\n            ${e("data",2,"u32")}\n            ${e("data",3,"u32")}\n            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:`\n            ${e("output_data[global_idx]",0)}\n            ${e("output_data[global_idx]",1)}\n            ${e("output_data[global_idx]",2)}\n            ${e("output_data[global_idx]",3)}\n          `}else i=a.setByOffset("global_idx",c(o.getByOffset("global_idx"),l.getByOffset("global_idx"),u.getByOffset("global_idx")));return`\n        ${e.registerUniform("vec_size","u32").declareVariables(u,o,l,a)}\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${i}\n      }`},vu=e=>{let t=e[1].dims,n=e[2].dims,r=e[0].dims,s=e[1].dataType,i=!(jt.areEqual(t,n)&&jt.areEqual(n,r)),a=t,o=jt.size(t);if(i){let e=Nt.calcShape(Nt.calcShape(t,n,!1),r,!1);if(!e)throw new Error("Can't perform where op on the given tensors");a=e,o=jt.size(a)}let l=Math.ceil(o/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:t=>xu(t,e,a,i,s),getRunData:()=>({outputs:[{dims:a,dataType:s}],dispatchGroup:{x:Math.ceil(o/64/4)},programUniforms:[{type:12,data:l},...xn(r,t,n,a)]})}},Mu=e=>{e.compute(vu(e.inputs))}}),Rc=ue(()=>{Wu(),Hu(),Ku(),Qu(),Ju(),Yu(),Zu(),lc(),cc(),dc(),pc(),hc(),mc(),fc(),_c(),gc(),wc(),yc(),bc(),xc(),Tc(),$c(),Sc(),Cc(),Ec(),vc(),Pc(),Ac(),Ic(),Fc(),zc(),qu(),Oc(),kc(),Lc(),Bc(),Dc(),Mc(),Nc(),Gu(),Xu(),jc(),ku=new Map([["Abs",[rs]],["Acos",[ss]],["Acosh",[is]],["Add",[Ys]],["ArgMax",[Dr,Nr]],["ArgMin",[Br,Nr]],["Asin",[as]],["Asinh",[os]],["Atan",[ls]],["Atanh",[us]],["Attention",[Hr]],["AveragePool",[hl,pl]],["BatchNormalization",[Jr]],["BiasAdd",[es]],["BiasSplitGelu",[Ks]],["Cast",[ds,cs]],["Ceil",[ms]],["Clip",[hs]],["Concat",[pi,hi]],["Conv",[Ji,Hi]],["ConvTranspose",[oa,ra]],["Cos",[fs]],["Cosh",[_s]],["CumSum",[ua,ca]],["DepthToSpace",[ma,fa]],["DequantizeLinear",[kl,Tl]],["Div",[Zs]],["Einsum",[ka,Ta]],["Elu",[ws,gs]],["Equal",[ei]],["Erf",[bs]],["Exp",[xs]],["Expand",[Pa]],["FastGelu",[Ia]],["Floor",[vs]],["FusedConv",[Ji,Hi]],["Gather",[La,Oa]],["GatherElements",[Ha,Wa]],["GatherBlockQuantized",[Va,Ga]],["GatherND",[Da,Na]],["Gelu",[Ms]],["Gemm",[Ja,Xa]],["GlobalAveragePool",[_l,fl]],["GlobalMaxPool",[xl,bl]],["Greater",[si]],["GreaterOrEqual",[ai]],["GridSample",[uo,co]],["GroupQueryAttention",[Fo]],["HardSigmoid",[As,Ps]],["InstanceNormalization",[Bo]],["LayerNormalization",[jo]],["LeakyRelu",[ks,gs]],["Less",[ii]],["LessOrEqual",[oi]],["Log",[Vs]],["MatMul",[Vo]],["MatMulNBits",[Wo,Ho]],["MaxPool",[wl,yl]],["Mul",[ti]],["MultiHeadAttention",[wo,mo]],["Neg",[$s]],["Not",[Ts]],["Pad",[nl]],["Pow",[ni]],["QuickGelu",[qs,gs]],["Range",[Cl]],["Reciprocal",[Ss]],["ReduceMin",[Ar]],["ReduceMean",[$r]],["ReduceMax",[Pr]],["ReduceSum",[Fr]],["ReduceProd",[Ir]],["ReduceL1",[Sr]],["ReduceL2",[Cr]],["ReduceLogSum",[Or]],["ReduceLogSumExp",[Er]],["ReduceSumSquare",[zr]],["Relu",[Cs]],["Resize",[Zl,eu]],["RotaryEmbedding",[Co]],["ScatterND",[zl,Fl]],["Sigmoid",[Es]],["Sin",[Is]],["Sinh",[Fs]],["Slice",[cu,du]],["SkipLayerNormalization",[ru]],["Split",[ko,To]],["Sqrt",[zs]],["Softmax",[mu,fu]],["Sub",[ri]],["Tan",[Os]],["Tanh",[Bs]],["ThresholdedRelu",[Rs,gs]],["Tile",[bu]],["Transpose",[Rn,Vn]],["Where",[Mu]]])}),Vc=ue(()=>{Ae(),zu(),Vu(),Tu=class{constructor(e){this.backend=e,this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,t){this.repo.set(e,t)}run(e,t,n,r,s){Z(e.programInfo.name);let i=this.backend.device,a=this.backend.getComputePassEncoder();this.backend.writeTimestamp(2*this.backend.pendingDispatchNumber);let o=[];for(let e of t)o.push({binding:o.length,resource:{buffer:e.buffer}});for(let e of n)o.push({binding:o.length,resource:{buffer:e.buffer}});s&&o.push({binding:o.length,resource:s});let l=i.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:o,label:e.programInfo.name});if("capturing"===this.backend.sessionStatus){let t={kernelId:this.backend.currentKernelId,computePipeline:e.computePipeline,bindGroup:l,dispatchGroup:r};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(t)}a.setPipeline(e.computePipeline),a.setBindGroup(0,l),a.dispatchWorkgroups(...r),this.backend.writeTimestamp(2*this.backend.pendingDispatchNumber+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||"at-passes"===this.backend.queryType)&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),ee(e.programInfo.name)}dispose(){}build(e,t){Z(e.name);let n=this.backend.device,r=[];[{feature:"shader-f16",extension:"f16"},{feature:"subgroups",extension:"subgroups"}].forEach(e=>{n.features.has(e.feature)&&r.push(`enable ${e.extension};`)});let s=Fn(t,this.backend.device.limits),i=e.getShaderSource(s),a=`${r.join("\n")}\n${s.additionalImplementations}\n${i}`,o=n.createShaderModule({code:a,label:e.name});Bt("verbose",()=>`[WebGPU] ${e.name} shader code: ${a}`);let l=n.createComputePipeline({compute:{module:o,entryPoint:"main"},layout:"auto",label:e.name});return ee(e.name),{programInfo:e,computePipeline:l,uniformVariablesInfo:s.variablesInfo}}normalizeDispatchGroupSize(e){let t="number"==typeof e?e:e.x,n="number"==typeof e?1:e.y||1,r="number"==typeof e?1:e.z||1,s=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(t<=s&&n<=s&&r<=s)return[t,n,r];let i=t*n*r,a=Math.ceil(Math.sqrt(i));if(a>s){if(a=Math.ceil(Math.cbrt(i)),a>s)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[a,a,a]}return[a,a,1]}}}),Gc={};ce(Gc,{WebGpuBackend:()=>Hc});var Uc,qc,Wc,Hc,Kc=ue(()=>{Ae(),Iu(),zu(),Lu(),ju(),Rc(),Vc(),Uc=(e,t)=>{if(t.length!==e.length)throw new Error(`inputDependencies length ${t.length} is not equal to inputTensors length ${e.length}.`);let n=[];for(let r=0;r<e.length;++r){let s=e[r].dataType;switch(t[r]){case"none":n.push("");break;case"type":n.push(`${s}`);break;case"rank":{let t=e[r].dims.length;n.push(`${s};${t}`);break}case"dims":{let t=e[r].dims.join(",");n.push(`${s};${t}`);break}default:throw new Error(`unsupported input dependency: ${t[r]}`)}}return n.join("|")},qc=(e,t,n)=>{let r=e.name;return e.shaderCache?.hint&&(r+="["+e.shaderCache.hint+"]"),r+=":"+n+`:${Uc(t,e.shaderCache?.inputDependencies??new Array(t.length).fill("dims"))}`,r},Wc=class{constructor(e){e&&(this.architecture=e.architecture,this.vendor=e.vendor)}isArchitecture(e){return this.architecture===e}isVendor(e){return this.vendor===e}},Hc=class{constructor(){this.currentSessionId=null,this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.maxDispatchNumber=16,this.pendingDispatchNumber=0,this.pendingKernels=[],this.pendingQueries=new Map,this.sessionStatus="default",this.capturedCommandList=new Map,this.capturedPendingKernels=new Map,this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(null===this.currentKernelId)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e,t){this.env=e;let n=[],r={requiredLimits:{maxComputeWorkgroupStorageSize:t.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:t.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:t.limits.maxStorageBufferBindingSize,maxBufferSize:t.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:t.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:t.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:t.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:t.limits.maxComputeWorkgroupSizeZ},requiredFeatures:n},s=e=>t.features.has(e)&&n.push(e)&&!0;s("chromium-experimental-timestamp-query-inside-passes")||s("timestamp-query"),s("shader-f16"),s("subgroups"),this.device=await t.requestDevice(r),this.adapterInfo=new Wc(t.info||await t.requestAdapterInfo()),this.gpuDataManager=mn(this),this.programManager=new Tu(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,Ot(e.logLevel,!!e.debug),this.device.onuncapturederror=e=>{e.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${e.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:t,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let e=this.getCommandEncoder(),t={};"at-passes"===this.queryType&&(t.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:2*this.pendingDispatchNumber,endOfPassWriteIndex:2*this.pendingDispatchNumber+1}),this.computePassEncoder=e.beginComputePass(t)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;let e;Z(),this.endComputePass(),"none"!==this.queryType&&(this.commandEncoder.resolveQuerySet(this.querySet,0,2*this.pendingDispatchNumber,this.queryResolveBuffer,0),e=this.device.createBuffer({size:2*this.pendingDispatchNumber*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(e,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,2*this.pendingDispatchNumber*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,"none"!==this.queryType&&e.mapAsync(GPUMapMode.READ).then(()=>{let t=new BigUint64Array(e.getMappedRange()),n=this.pendingQueries.get(e);for(let e=0;e<t.length/2;e++){let r=n[e],s=r.kernelId,i=this.kernels.get(s),a=i.kernelType,o=i.kernelName,l=r.programName,u=r.inputTensorViews,c=r.outputTensorViews,d=t[2*e],p=t[2*e+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=d);let h=Number(d-this.queryTimeBase),m=Number(p-this.queryTimeBase);if(!Number.isSafeInteger(h)||!Number.isSafeInteger(m))throw new RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:u.map(e=>({dims:e.dims,dataType:Mt(e.dataType)})),outputsMetadata:c.map(e=>({dims:e.dims,dataType:Mt(e.dataType)})),kernelId:s,kernelType:a,kernelName:o,programName:l,startTime:h,endTime:m});else{let e="";u.forEach((t,n)=>{e+=`input[${n}]: [${t.dims}] | ${Mt(t.dataType)}, `});let t="";c.forEach((e,n)=>{t+=`output[${n}]: [${e.dims}] | ${Mt(e.dataType)}, `}),console.log(`[profiling] kernel "${s}|${a}|${o}|${l}" ${e}${t}execution time: ${m-h} ns`)}J("GPU",`${l}::${d}::${p}`)}e.unmap(),this.pendingQueries.delete(e)}),ee()}run(e,t,n,r,s,i){Z(e.name);let a=[];for(let e=0;e<t.length;++e){let n=t[e].data;if(0===n)continue;let r=this.gpuDataManager.get(n);if(!r)throw new Error(`no GPU data for input: ${n}`);a.push(r)}let{outputs:o,dispatchGroup:l,programUniforms:u}=e.getRunData(t),c=0===n.length?o.map((e,t)=>t):n;if(c.length!==o.length)throw new Error(`Output size ${c.length} must be equal to ${o.length}.`);let d,p=[],h=[];for(let e=0;e<o.length;++e){if(!Number.isInteger(c[e])||c[e]<-3||c[e]>=i)throw new Error(`Invalid output index: ${c[e]}`);if(-3===c[e])continue;let t=-1===c[e],n=-2===c[e],a=t||n?s(o[e].dataType,o[e].dims):r(c[e],o[e].dataType,o[e].dims);if(p.push(a),0===a.data)continue;let l=this.gpuDataManager.get(a.data);if(!l)throw new Error(`no GPU data for output: ${a.data}`);if(t&&this.temporaryData.push(l),n){let e=this.kernelPersistentData.get(this.currentKernelId);e||(e=[],this.kernelPersistentData.set(this.currentKernelId,e)),e.push(l)}h.push(l)}if(a.length!==t.length||h.length!==p.length){if(0===h.length)return ee(e.name),p;throw new Error(`Program ${e.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}if(u){let e=0,t=[];u.forEach(n=>{let r="number"==typeof n.data?[n.data]:n.data;if(0===r.length)return;let s,i,a=10===n.type?2:4;10===n.type?(i=r.length>4?16:r.length>2?8:r.length*a,s=r.length>4?16:a*r.length):(i=r.length<=2?r.length*a:16,s=16),e=Math.ceil(e/i)*i,t.push(e);let o=10===n.type?8:4;e+=r.length>4?Math.ceil(r.length/o)*s:r.length*a});let n=16;e=Math.ceil(e/n)*n;let r=new ArrayBuffer(e);u.forEach((e,n)=>{let s=t[n],i="number"==typeof e.data?[e.data]:e.data;if(6===e.type)new Int32Array(r,s,i.length).set(i);else if(12===e.type)new Uint32Array(r,s,i.length).set(i);else if(10===e.type)new Uint16Array(r,s,i.length).set(i);else{if(1!==e.type)throw new Error(`Unsupported uniform type: ${Mt(e.type)}`);new Float32Array(r,s,i.length).set(i)}});let s=this.gpuDataManager.create(e,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(s.buffer,0,r,0,e),this.gpuDataManager.release(s.id),d={offset:0,size:e,buffer:s.buffer}}let m=this.programManager.normalizeDispatchGroupSize(l),f=1===m[1]&&1===m[2],_=qc(e,t,f),g=this.programManager.getArtifact(_);if(g||(g=this.programManager.build(e,m),this.programManager.setArtifact(_,g),Bt("info",()=>`[artifact] key: ${_}, programName: ${e.name}`)),u&&g.uniformVariablesInfo){if(u.length!==g.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${g.uniformVariablesInfo.length}, got ${u.length} in program "${g.programInfo.name}".`);for(let e=0;e<u.length;e++){let t=u[e],n=t.type,r="number"==typeof t.data?1:t.data.length,[s,i]=g.uniformVariablesInfo[e];if(n!==s||r!==i)throw new Error(`Uniform variable ${e} mismatch: expect type ${s} with size ${i}, got type ${n} with size ${r} in program "${g.programInfo.name}".`)}}if(Bt("info",()=>`[ProgramManager] run "${e.name}" (key=${_}) with ${m[0]}x${m[1]}x${m[2]}`),"none"!==this.queryType||"capturing"===this.sessionStatus){let e={kernelId:this.currentKernelId,programName:g.programInfo.name,inputTensorViews:t,outputTensorViews:p};this.pendingKernels.push(e),"capturing"===this.sessionStatus&&this.capturedPendingKernels.get(this.currentSessionId).push(e)}return this.programManager.run(g,a,h,m,d),ee(e.name),p}upload(e,t){this.gpuDataManager.upload(e,t)}memcpy(e,t){this.gpuDataManager.memcpy(e,t)}async download(e,t){await this.gpuDataManager.download(e,t)}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,t,n,r){let s=ku.get(e);if(!s)throw new Error(`kernel not implemented: ${e}`);let i={kernelType:e,kernelName:r,kernelEntry:s[0],attributes:[s[1],n]};this.kernels.set(t,i)}releaseKernel(e){let t=this.kernelPersistentData.get(e);if(t){for(let e of t)this.gpuDataManager.release(e.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,t,n){let r=this.kernels.get(e);if(!r)throw new Error(`kernel not created: ${e}`);let s=r.kernelType,i=r.kernelName,a=r.kernelEntry,o=r.attributes;if(null!==this.currentKernelId)throw new Error(`kernel "[${s}] ${i}" is not allowed to be called recursively`);this.currentKernelId=e,o[0]&&(o[1]=o[0](o[1]),o[0]=void 0),Bt("info",()=>`[WebGPU] Start to run kernel "[${s}] ${i}"...`);let l=this.env.debug;this.temporaryData=[];try{return l&&this.device.pushErrorScope("validation"),a(t,o[1]),0}catch(e){return n.push(re.resolve(`[WebGPU] Kernel "[${s}] ${i}" failed. ${e}`)),1}finally{l&&n.push(this.device.popErrorScope().then(e=>e?`GPU validation error for kernel "[${s}] ${i}": ${e.message}`:null));for(let e of this.temporaryData)this.gpuDataManager.release(e.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(e,t,n,r){let s=this.sessionExternalDataMapping.get(e);s||(s=new Map,this.sessionExternalDataMapping.set(e,s));let i=s.get(t),a=this.gpuDataManager.registerExternalBuffer(n,r,i);return s.set(t,[a,n]),a}unregisterBuffers(e){let t=this.sessionExternalDataMapping.get(e);t&&(t.forEach(e=>this.gpuDataManager.unregisterExternalBuffer(e[0])),this.sessionExternalDataMapping.delete(e))}getBuffer(e){let t=this.gpuDataManager.get(e);if(!t)throw new Error(`no GPU data for buffer: ${e}`);return t.buffer}createDownloader(e,t,n){return async()=>{let r=await pn(this,e,t);return qt(r.buffer,n)}}writeTimestamp(e){"inside-passes"===this.queryType&&this.computePassEncoder.writeTimestamp(this.querySet,e)}setQueryType(){this.queryType="none",("default"===this.env.webgpu.profiling?.mode||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),"none"!==this.queryType&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2*this.maxDispatchNumber}),this.queryResolveBuffer=this.device.createBuffer({size:2*this.maxDispatchNumber*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){Bt("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){Bt("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){Bt("info","replay"),this.sessionStatus="replaying";let e=this.capturedCommandList.get(this.currentSessionId),t=this.capturedPendingKernels.get(this.currentSessionId),n=e.length;this.pendingKernels=[];for(let r=0;r<n;r++){let n=this.getComputePassEncoder(),s=e[r];this.writeTimestamp(2*this.pendingDispatchNumber),n.setPipeline(s.computePipeline),n.setBindGroup(0,s.bindGroup),n.dispatchWorkgroups(...s.dispatchGroup),this.writeTimestamp(2*this.pendingDispatchNumber+1),this.pendingDispatchNumber++,"none"!==this.queryType&&this.pendingKernels.push(t[r]),(this.pendingDispatchNumber>=this.maxDispatchNumber||"at-passes"===this.queryType)&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onCreateSession(){this.gpuDataManager.onCreateSession()}onReleaseSession(e){this.unregisterBuffers(e),this.capturedCommandList.has(e)&&this.capturedCommandList.delete(e),this.capturedPendingKernels.has(e)&&this.capturedPendingKernels.delete(e),this.gpuDataManager.onReleaseSession(e)}onRunStart(e){this.currentSessionId=e,this.setQueryType()}}}),Qc={};ce(Qc,{init:()=>Yc});var Xc,Jc,Yc,Zc,ed,td,nd,rd,sd,id,ad,od,ld,ud,cd,dd,pd,hd,md,fd,_d,gd,wd,yd,bd,xd,vd,Md,kd,Td,$d,Sd,Cd,Ed,Pd,Ad,Id,Fd=ue(()=>{Iu(),zu(),Ou(),Du(),Xc=class e{constructor(e,t,n,r){this.module=e,this.dataType=t,this.data=n,this.dims=r}getFloat32Array(){if(1!==this.dataType)throw new Error("Invalid data type");let e=jt.size(this.dims);return 0===e?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,e)}getBigInt64Array(){if(7!==this.dataType)throw new Error("Invalid data type");let e=jt.size(this.dims);return 0===e?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,e)}getInt32Array(){if(6!==this.dataType)throw new Error("Invalid data type");let e=jt.size(this.dims);return 0===e?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,e)}getUint16Array(){if(10!==this.dataType&&4!==this.dataType)throw new Error("Invalid data type");let e=jt.size(this.dims);return 0===e?new Uint16Array:new Uint16Array(this.module.HEAP8.buffer,this.data,e)}reshape(t){if(jt.size(t)!==jt.size(this.dims))throw new Error("Invalid new shape");return new e(this.module,this.dataType,this.data,t)}},Jc=class{constructor(e,t,n){this.module=e,this.backend=t,this.customDataOffset=0,this.customDataSize=0,this.adapterInfo=t.adapterInfo;let r=e.PTR_SIZE,s=n/e.PTR_SIZE,i=4===r?"i32":"i64";this.opKernelContext=Number(e.getValue(r*s++,i));let a=Number(e.getValue(r*s++,i));this.outputCount=Number(e.getValue(r*s++,i)),this.customDataOffset=Number(e.getValue(r*s++,"*")),this.customDataSize=Number(e.getValue(r*s++,i));let o=[];for(let t=0;t<a;t++){let t=Number(e.getValue(r*s++,i)),n=Number(e.getValue(r*s++,"*")),a=Number(e.getValue(r*s++,i)),l=[];for(let t=0;t<a;t++)l.push(Number(e.getValue(r*s++,i)));o.push(new Xc(e,t,n,l))}this.inputs=o}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(e,t){let n=t?.inputs?.map(e=>"number"==typeof e?this.inputs[e]:e)??this.inputs,r=t?.outputs??[];return this.backend.run(e,n,r,(e,t,n)=>new Xc(this.module,t,this.output(e,n),n),(e,t)=>{let n=kt(e,t);if(!n)throw new Error(`Unsupported data type: ${e}`);let r=n>0?this.backend.gpuDataManager.create(n).id:0;return new Xc(this.module,e,r,t)},this.outputCount)}output(e,t){let n=this.module.stackSave();try{let n=this.module.PTR_SIZE,r=4===n?"i32":"i64",s=this.module.stackAlloc((1+t.length)*n);this.module.setValue(s,t.length,r);for(let e=0;e<t.length;e++)this.module.setValue(s+n*(e+1),t[e],r);return this.module._JsepOutput(this.opKernelContext,e,s)}catch(n){throw new Error(`Failed to generate kernel's output[${e}] with dims [${t}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${n}`)}finally{this.module.stackRestore(n)}}},Yc=async(e,t,n,r)=>{let s=t.jsepInit;if(!s)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if("webgpu"===e){let e=new(0,(Kc(),de(Gc)).WebGpuBackend);await e.initialize(n,r),s("webgpu",[e,t=>e.alloc(Number(t)),t=>e.free(t),(n,r,s,i=!1)=>{if(i)Bt("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${Number(n)}, dst=${Number(r)}, size=${Number(s)}`),e.memcpy(Number(n),Number(r));else{Bt("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${Number(n)}, gpuDataId=${Number(r)}, size=${Number(s)}`);let i=t.HEAPU8.subarray(Number(n>>>0),Number(n>>>0)+Number(s));e.upload(Number(r),i)}},async(n,r,s)=>{Bt("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${n}, dataOffset=${r}, size=${s}`),await e.download(Number(n),()=>t.HEAPU8.subarray(Number(r)>>>0,Number(r+s)>>>0))},(n,r,s)=>e.createKernel(n,Number(r),s,t.UTF8ToString(t._JsepGetNodeName(Number(r)))),t=>e.releaseKernel(t),(n,r,s,i)=>{Bt("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${s}, kernel=${n}, contextDataOffset=${r}`);let a=new Jc(t,e,Number(r));return e.computeKernel(Number(n),a,i)},()=>e.captureBegin(),()=>e.captureEnd(),()=>e.replay()])}else{let e=new sn(n);s("webnn",[e,()=>e.reserveTensorId(),t=>e.releaseTensorId(t),async(t,n,r,s,i)=>e.ensureTensor(t,n,r,s,i),(t,n)=>{e.uploadTensor(t,n)},async(t,n)=>e.downloadTensor(t,n)])}}}),zd=ue(()=>{Pu(),Au(),Iu(),Cu(),Eu(),Fu(),Zc=(e,t)=>{0!==dt()._OrtInit(e,t)&&mt("Can't initialize onnxruntime.")},ed=async e=>{Zc(e.wasm.numThreads,$t(e.logLevel))},td=async(e,t)=>{dt().asyncInit?.();{let n=(Fd(),de(Qc)).init;if("webgpu"===t){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let t=e.webgpu.adapter;if(t){if("object"!=typeof t.limits||"object"!=typeof t.features||"function"!=typeof t.requestDevice)throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let n=e.webgpu.powerPreference;if(void 0!==n&&"low-power"!==n&&"high-performance"!==n)throw new Error(`Invalid powerPreference setting: "${n}"`);let r=e.webgpu.forceFallbackAdapter;if(void 0!==r&&"boolean"!=typeof r)throw new Error(`Invalid forceFallbackAdapter setting: "${r}"`);if(t=await navigator.gpu.requestAdapter({powerPreference:n,forceFallbackAdapter:r}),!t)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.')}await n("webgpu",dt(),e,t)}if("webnn"===t){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await n("webnn",dt(),e)}}},nd=new Map,rd=e=>{let t=dt(),n=t.stackSave();try{let n=t.PTR_SIZE,r=t.stackAlloc(2*n);0!==t._OrtGetInputOutputCount(e,r,r+n)&&mt("Can't get session input/output count.");let s=4===n?"i32":"i64";return[Number(t.getValue(r,s)),Number(t.getValue(r+n,s))]}finally{t.stackRestore(n)}},sd=(e,t)=>{let n=dt(),r=n.stackSave(),s=0;try{let r=n.PTR_SIZE,i=n.stackAlloc(2*r);0!==n._OrtGetInputOutputMetadata(e,t,i,i+r)&&mt("Can't get session input/output metadata.");let a=Number(n.getValue(i,"*"));s=Number(n.getValue(i+r,"*"));let o=n.HEAP32[s/4];if(0===o)return[a,0];let l=n.HEAPU32[s/4+1],u=[];for(let e=0;e<l;e++){let t=Number(n.getValue(s+8+e*r,"*"));u.push(0!==t?n.UTF8ToString(t):Number(n.getValue(s+8+(e+l)*r,"*")))}return[a,o,u]}finally{n.stackRestore(r),0!==s&&n._OrtFree(s)}},id=e=>{let t=dt(),n=t._malloc(e.byteLength);if(0===n)throw new Error(`Can't create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,n),[n,e.byteLength]},ad=async(e,t)=>{let n,r,s=dt();Array.isArray(e)?[n,r]=e:e.buffer===s.HEAPU8.buffer?[n,r]=[e.byteOffset,e.byteLength]:[n,r]=id(e);let i=0,a=0,o=0,l=[],u=[],c=[];try{if([a,l]=await xt(t),t?.externalData&&s.mountExternalData){let e=[];for(let n of t.externalData){let t="string"==typeof n?n:n.path;e.push(Pt("string"==typeof n?n:n.data).then(e=>{s.mountExternalData(t,e)}))}await re.all(e)}for(let e of t?.executionProviders??[])if("webnn"===("string"==typeof e?e:e.name)){if(s.shouldTransferToMLTensor=!1,"string"!=typeof e){let t=e,n=t?.context,r=t?.gpuDevice,i=t?.deviceType,a=t?.powerPreference;s.currentContext=n||(r?await s.webnnCreateMLContext(r):await s.webnnCreateMLContext({deviceType:i,powerPreference:a}))}else s.currentContext=await s.webnnCreateMLContext();break}i=await s._OrtCreateSession(n,r,a),s.webgpuOnCreateSession?.(i),0===i&&mt("Can't create a session."),s.jsepOnCreateSession?.(),s.currentContext&&(s.webnnRegisterMLContext(i,s.currentContext),s.currentContext=void 0,s.shouldTransferToMLTensor=!0);let[e,d]=rd(i),p=!!t?.enableGraphCapture,h=[],m=[],f=[],_=[],g=[];for(let t=0;t<e;t++){let[e,n,r]=sd(i,t);0===e&&mt("Can't get an input name."),u.push(e);let a=s.UTF8ToString(e);h.push(a),f.push(0===n?{name:a,isTensor:!1}:{name:a,isTensor:!0,type:Mt(n),shape:r})}for(let n=0;n<d;n++){let[r,a,o]=sd(i,n+e);0===r&&mt("Can't get an output name."),c.push(r);let l=s.UTF8ToString(r);m.push(l),_.push(0===a?{name:l,isTensor:!1}:{name:l,isTensor:!0,type:Mt(a),shape:o});{if(p&&void 0===t?.preferredOutputLocation){g.push("gpu-buffer");continue}let e="string"==typeof t?.preferredOutputLocation?t.preferredOutputLocation:t?.preferredOutputLocation?.[l]??"cpu";if("cpu"!==e&&"cpu-pinned"!==e&&"gpu-buffer"!==e&&"ml-tensor"!==e)throw new Error(`Not supported preferred output location: ${e}.`);if(p&&"gpu-buffer"!==e)throw new Error(`Not supported preferred output location: ${e}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);g.push(e)}}let w=null;return g.some(e=>"gpu-buffer"===e||"ml-tensor"===e)&&(o=s._OrtCreateBinding(i),0===o&&mt("Can't create IO binding."),w={handle:o,outputPreferredLocations:g,outputPreferredLocationsEncoded:g.map(e=>Et(e))}),nd.set(i,[i,u,c,w,p,!1]),[i,h,m,f,_]}catch(e){throw u.forEach(e=>s._OrtFree(e)),c.forEach(e=>s._OrtFree(e)),0!==o&&0!==s._OrtReleaseBinding(o)&&mt("Can't release IO binding."),0!==i&&0!==s._OrtReleaseSession(i)&&mt("Can't release session."),e}finally{s._free(n),0!==a&&0!==s._OrtReleaseSessionOptions(a)&&mt("Can't release session options."),l.forEach(e=>s._free(e)),s.unmountExternalData?.()}},od=e=>{let t=dt(),n=nd.get(e);if(!n)throw new Error(`cannot release session. invalid session id: ${e}`);let[r,s,i,a,o]=n;a&&(o&&0!==t._OrtClearBoundOutputs(a.handle)&&mt("Can't clear bound outputs."),0!==t._OrtReleaseBinding(a.handle)&&mt("Can't release IO binding.")),t.jsepOnReleaseSession?.(e),t.webnnOnReleaseSession?.(e),t.webgpuOnReleaseSession?.(e),s.forEach(e=>t._OrtFree(e)),i.forEach(e=>t._OrtFree(e)),0!==t._OrtReleaseSession(r)&&mt("Can't release session."),nd.delete(e)},ld=async(e,t,n,r,s,i,a=!1)=>{if(!e)return void t.push(0);let o,l,u=dt(),c=u.PTR_SIZE,d=e[0],p=e[1],h=e[3],m=h;if("string"===d&&("gpu-buffer"===h||"ml-tensor"===h))throw new Error("String tensor is not supported on GPU.");if(a&&"gpu-buffer"!==h)throw new Error(`External buffer must be provided for input/output index ${i} when enableGraphCapture is true.`);if("gpu-buffer"===h){let t=e[2].gpuBuffer;l=kt(vt(d),p);{let e=u.jsepRegisterBuffer;if(!e)throw new Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');o=e(r,i,t,l)}}else if("ml-tensor"===h){let t=e[2].mlTensor;l=kt(vt(d),p);let n=u.webnnRegisterMLTensor;if(!n)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');o=n(r,t,vt(d),p)}else{let t=e[2];if(Array.isArray(t)){l=c*t.length,o=u._malloc(l),n.push(o);for(let e=0;e<t.length;e++){if("string"!=typeof t[e])throw new TypeError(`tensor data at index ${e} is not a string`);u.setValue(o+e*c,pt(t[e],n),"*")}}else{let e=u.webnnIsGraphInput;if("string"!==d&&e)if(e(r,u.UTF8ToString(s))){let e=vt(d);l=kt(e,p),m="ml-tensor";let n=u.webnnCreateTemporaryTensor,s=u.webnnUploadTensor;if(!n||!s)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');let i=await n(r,e,p);s(i,new Uint8Array(t.buffer,t.byteOffset,t.byteLength)),o=i}else l=t.byteLength,o=u._malloc(l),n.push(o),u.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,l),o);else l=t.byteLength,o=u._malloc(l),n.push(o),u.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,l),o)}}let f=u.stackSave(),_=u.stackAlloc(4*p.length);try{p.forEach((e,t)=>u.setValue(_+t*c,e,4===c?"i32":"i64"));let e=u._OrtCreateTensor(vt(d),o,l,_,p.length,Et(m));0===e&&mt(`Can't create tensor for input/output. session=${r}, index=${i}.`),t.push(e)}finally{u.stackRestore(f)}},ud=async(e,t,n,r,s,i)=>{let a=dt(),o=a.PTR_SIZE,l=nd.get(e);if(!l)throw new Error(`cannot run inference. invalid session id: ${e}`);let u=l[0],c=l[1],d=l[2],p=l[3],h=l[4],m=l[5],f=t.length,_=r.length,g=0,w=[],y=[],b=[],x=[],v=a.stackSave(),M=a.stackAlloc(f*o),k=a.stackAlloc(f*o),T=a.stackAlloc(_*o),$=a.stackAlloc(_*o);try{[g,w]=ft(i);for(let r=0;r<f;r++)await ld(n[r],y,x,e,c[t[r]],t[r],h);for(let t=0;t<_;t++)await ld(s[t],b,x,e,d[r[t]],f+r[t],h);for(let e=0;e<f;e++)a.setValue(M+e*o,y[e],"*"),a.setValue(k+e*o,c[t[e]],"*");for(let e=0;e<_;e++)a.setValue(T+e*o,b[e],"*"),a.setValue($+e*o,d[r[e]],"*");if(p&&!m){let{handle:n,outputPreferredLocations:i,outputPreferredLocationsEncoded:o}=p;if(c.length!==f)throw new Error(`input count from feeds (${f}) is expected to be always equal to model's input count (${c.length}).`);for(let r=0;r<f;r++){let s=t[r];0!==await a._OrtBindInput(n,c[s],y[r])&&mt(`Can't bind input[${r}] for session=${e}.`)}for(let t=0;t<_;t++){let l=r[t];s[t]?.[3]?0!==a._OrtBindOutput(n,d[l],b[t],0)&&mt(`Can't bind pre-allocated output[${t}] for session=${e}.`):0!==a._OrtBindOutput(n,d[l],0,o[l])&&mt(`Can't bind output[${t}] to ${i[t]} for session=${e}.`)}nd.set(e,[u,c,d,p,h,!0])}let l;a.jsepOnRunStart?.(u),a.webnnOnRunStart?.(u),l=p?await a._OrtRunWithBinding(u,p.handle,_,T,g):await a._OrtRun(u,k,M,f,$,_,T,g),0!==l&&mt("failed to call OrtRun().");let v=[];for(let t=0;t<_;t++){let n=Number(a.getValue(T+t*o,"*"));if(n===b[t]){v.push(s[t]);continue}let i,l=a.stackSave(),c=a.stackAlloc(4*o),d=!1,h=0;try{0!==a._OrtGetTensorData(n,c,c+o,c+2*o,c+3*o)&&mt(`Can't access output tensor data on index ${t}.`);let s=4===o?"i32":"i64",l=Number(a.getValue(c,s));h=a.getValue(c+o,"*");let u=a.getValue(c+2*o,"*"),m=Number(a.getValue(c+3*o,s)),f=[];for(let e=0;e<m;e++)f.push(Number(a.getValue(u+e*o,s)));0!==a._OrtFree(u)&&mt("Can't free memory for tensor dims.");let _=f.reduce((e,t)=>e*t,1);i=Mt(l);let g=p?.outputPreferredLocations[r[t]];if("string"===i){if("gpu-buffer"===g||"ml-tensor"===g)throw new Error("String tensor is not supported on GPU.");let e=[];for(let t=0;t<_;t++){let n=a.getValue(h+t*o,"*"),r=a.getValue(h+(t+1)*o,"*"),s=t===_-1?void 0:r-n;e.push(a.UTF8ToString(n,s))}v.push([i,f,e,"cpu"])}else if("gpu-buffer"===g&&_>0){let e=a.jsepGetBuffer;if(!e)throw new Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let t=e(h),r=kt(l,_);if(void 0===r||!St(i))throw new Error(`Unsupported data type: ${i}`);d=!0,v.push([i,f,{gpuBuffer:t,download:a.jsepCreateDownloader(t,r,i),dispose:()=>{0!==a._OrtReleaseTensor(n)&&mt("Can't release tensor.")}},"gpu-buffer"])}else if("ml-tensor"===g&&_>0){let t=a.webnnEnsureTensor,r=a.webnnIsInt64Supported;if(!t||!r)throw new Error('preferredLocation "ml-tensor" is not supported without using WebNN.');if(void 0===kt(l,_)||!Ct(i))throw new Error(`Unsupported data type: ${i}`);if("int64"===i&&!r(e))throw new Error('preferredLocation "ml-tensor" for int64 output is not supported by current WebNN Context.');let s=await t(e,h,l,f,!1);d=!0,v.push([i,f,{mlTensor:s,download:a.webnnCreateMLTensorDownloader(h,i),dispose:()=>{a.webnnReleaseTensorId(h),a._OrtReleaseTensor(n)}},"ml-tensor"])}else{let e=new(Tt(i))(_);new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(a.HEAPU8.subarray(h,h+e.byteLength)),v.push([i,f,e,"cpu"])}}finally{a.stackRestore(l),"string"===i&&h&&a._free(h),d||a._OrtReleaseTensor(n),a.webnnOnRunEnd?.(u)}}return p&&!h&&(0!==a._OrtClearBoundOutputs(p.handle)&&mt("Can't clear bound outputs."),nd.set(e,[u,c,d,p,h,!1])),v}finally{a.stackRestore(v),y.forEach(e=>a._OrtReleaseTensor(e)),b.forEach(e=>a._OrtReleaseTensor(e)),x.forEach(e=>a._free(e)),0!==g&&a._OrtReleaseRunOptions(g),w.forEach(e=>a._free(e))}},cd=e=>{let t=dt(),n=nd.get(e);if(!n)throw new Error("invalid session id");let r=n[0],s=t._OrtEndProfiling(r);0===s&&mt("Can't get an profile file name."),t._OrtFree(s)},dd=e=>{let t=[];for(let n of e){let e=n[2];!Array.isArray(e)&&"buffer"in e&&t.push(e.buffer)}return t}}),Od=ue(()=>{Ae(),zd(),Cu(),Su(),pd=()=>!!z.wasm.proxy&&typeof document<"u",md=!1,fd=!1,_d=!1,yd=new Map,bd=(e,t)=>{let n=yd.get(e);n?n.push(t):yd.set(e,[t])},xd=()=>{if(md||!fd||_d||!hd)throw new Error("worker not ready")},vd=e=>{switch(e.data.type){case"init-wasm":md=!1,e.data.err?(_d=!0,wd[1](e.data.err)):(fd=!0,wd[0]()),gd&&(URL.revokeObjectURL(gd),gd=void 0);break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let t=yd.get(e.data.type);e.data.err?t.shift()[1](e.data.err):t.shift()[0](e.data.out);break}}},Md=async()=>{if(!fd){if(md)throw new Error("multiple calls to 'initWasm()' detected.");if(_d)throw new Error("previous call to 'initWasm()' failed.");if(md=!0,pd())return new re((e,t)=>{hd?.terminate(),et().then(([r,s])=>{try{(hd=s).onerror=e=>t(e),hd.onmessage=vd,wd=[e,t];let i={type:"init-wasm",in:z};!i.in.wasm.wasmPaths&&(r||Ue)&&(i.in.wasm.wasmPaths={wasm:new URL(n(29098),n.b).href}),hd.postMessage(i),gd=r}catch(e){t(e)}},t)});try{await ct(z.wasm),await ed(z),fd=!0}catch(e){throw _d=!0,e}finally{md=!1}}},kd=async e=>{if(pd())return xd(),new re((t,n)=>{bd("init-ep",[t,n]);let r={type:"init-ep",in:{epName:e,env:z}};hd.postMessage(r)});await td(z,e)},Td=async e=>pd()?(xd(),new re((t,n)=>{bd("copy-from",[t,n]);let r={type:"copy-from",in:{buffer:e}};hd.postMessage(r,[e.buffer])})):id(e),$d=async(e,t)=>{if(pd()){if(t?.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return xd(),new re((n,r)=>{bd("create",[n,r]);let s={type:"create",in:{model:e,options:{...t}}},i=[];e instanceof Uint8Array&&i.push(e.buffer),hd.postMessage(s,i)})}return ad(e,t)},Sd=async e=>{if(pd())return xd(),new re((t,n)=>{bd("release",[t,n]);let r={type:"release",in:e};hd.postMessage(r)});od(e)},Cd=async(e,t,n,r,s,i)=>{if(pd()){if(n.some(e=>"cpu"!==e[3]))throw new Error("input tensor on GPU is not supported for proxy.");if(s.some(e=>e))throw new Error("pre-allocated output tensor is not supported for proxy.");return xd(),new re((s,a)=>{bd("run",[s,a]);let o=n,l={type:"run",in:{sessionId:e,inputIndices:t,inputs:o,outputIndices:r,options:i}};hd.postMessage(l,dd(o))})}return ud(e,t,n,r,s,i)},Ed=async e=>{if(pd())return xd(),new re((t,n)=>{bd("end-profiling",[t,n]);let r={type:"end-profiling",in:e};hd.postMessage(r)});cd(e)}}),Ld=ue(()=>{Ae(),Od(),Iu(),Ie(),Fu(),Pd=(e,t)=>{switch(e.location){case"cpu":return[e.type,e.dims,e.data,"cpu"];case"gpu-buffer":return[e.type,e.dims,{gpuBuffer:e.gpuBuffer},"gpu-buffer"];case"ml-tensor":return[e.type,e.dims,{mlTensor:e.mlTensor},"ml-tensor"];default:throw new Error(`invalid data location: ${e.location} for ${t()}`)}},Ad=e=>{switch(e[3]){case"cpu":return new X(e[0],e[2],e[1]);case"gpu-buffer":{let t=e[0];if(!St(t))throw new Error(`not supported data type: ${t} for deserializing GPU tensor`);let{gpuBuffer:n,download:r,dispose:s}=e[2];return X.fromGpuBuffer(n,{dataType:t,dims:e[1],download:r,dispose:s})}case"ml-tensor":{let t=e[0];if(!Ct(t))throw new Error(`not supported data type: ${t} for deserializing MLTensor tensor`);let{mlTensor:n,download:r,dispose:s}=e[2];return X.fromMLTensor(n,{dataType:t,dims:e[1],download:r,dispose:s})}default:throw new Error(`invalid data location: ${e[3]}`)}},Id=class{async fetchModelAndCopyToWasmMemory(e){return Td(await Pt(e))}async loadModel(e,t){let n;Z(),n="string"==typeof e?await this.fetchModelAndCopyToWasmMemory(e):e,[this.sessionId,this.inputNames,this.outputNames,this.inputMetadata,this.outputMetadata]=await $d(n,t),ee()}async dispose(){return Sd(this.sessionId)}async run(e,t,n){Z();let r=[],s=[];Object.entries(e).forEach(e=>{let t=e[0],n=e[1],i=this.inputNames.indexOf(t);if(-1===i)throw new Error(`invalid input '${t}'`);r.push(n),s.push(i)});let i=[],a=[];Object.entries(t).forEach(e=>{let t=e[0],n=e[1],r=this.outputNames.indexOf(t);if(-1===r)throw new Error(`invalid output '${t}'`);i.push(n),a.push(r)});let o=r.map((e,t)=>Pd(e,()=>`input "${this.inputNames[s[t]]}"`)),l=i.map((e,t)=>e?Pd(e,()=>`output "${this.outputNames[a[t]]}"`):null),u=await Cd(this.sessionId,s,o,a,l,n),c={};for(let e=0;e<u.length;e++)c[this.outputNames[a[e]]]=i[e]??Ad(u[e]);return ee(),c}startProfiling(){}endProfiling(){Ed(this.sessionId)}}}),Bd={};ce(Bd,{OnnxruntimeWebAssemblyBackend:()=>Nd,initializeFlags:()=>Dd,wasmBackend:()=>jd});var Dd,Nd,jd,Rd=ue(()=>{Ae(),Od(),Ld(),Dd=()=>{("number"!=typeof z.wasm.initTimeout||z.wasm.initTimeout<0)&&(z.wasm.initTimeout=0);let e=z.wasm.simd;if("boolean"!=typeof e&&void 0!==e&&"fixed"!==e&&"relaxed"!==e&&(console.warn(`Property "env.wasm.simd" is set to unknown value "${e}". Reset it to \`false\` and ignore SIMD feature checking.`),z.wasm.simd=!1),"boolean"!=typeof z.wasm.proxy&&(z.wasm.proxy=!1),"boolean"!=typeof z.wasm.trace&&(z.wasm.trace=!1),"number"!=typeof z.wasm.numThreads||!Number.isInteger(z.wasm.numThreads)||z.wasm.numThreads<=0)if(typeof self<"u"&&!self.crossOriginIsolated)z.wasm.numThreads=1;else{let e=typeof navigator>"u"?le("node:os").cpus().length:navigator.hardwareConcurrency;z.wasm.numThreads=Math.min(4,Math.ceil((e||1)/2))}},jd=new(Nd=class{async init(e){Dd(),await Md(),await kd(e)}async createInferenceSessionHandler(e,t){let n=new Id;return await n.loadModel(e,t),n}})});Ae(),Ae(),Ae();var Vd=Pe;{let e=(Rd(),de(Bd)).wasmBackend;C("webgpu",e,5),C("webnn",e,5),C("cpu",e,10),C("wasm",e,10)}Object.defineProperty(z.versions,"web",{value:"1.22.0-dev.20250409-89f8206ba4",enumerable:!0});var Gd,Ud,qd=n(64583).Promise,Wd={"onnxruntime-common":e=>{e.exports=r},"onnxruntime-web":e=>{e.exports=s},"?2ce3":()=>{},"?7992":()=>{},"?5af5":()=>{},"?2b25":()=>{},"?db59":()=>{},"?383f":()=>{},"?fa4b":()=>{},"./node_modules/@huggingface/jinja/dist/index.js":(e,t,n)=>{n.r(t),n.d(t,{Environment:()=>ie,Interpreter:()=>ae,Template:()=>he,parse:()=>R,tokenize:()=>u});var r=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Comment:"Comment"}),s=class{constructor(e,t){this.value=e,this.type=t}};function i(e){return/\w/.test(e)}function a(e){return/[0-9]/.test(e)}var o=[["{%",r.OpenStatement],["%}",r.CloseStatement],["{{",r.OpenExpression],["}}",r.CloseExpression],["(",r.OpenParen],[")",r.CloseParen],["{",r.OpenCurlyBracket],["}",r.CloseCurlyBracket],["[",r.OpenSquareBracket],["]",r.CloseSquareBracket],[",",r.Comma],[".",r.Dot],[":",r.Colon],["|",r.Pipe],["<=",r.ComparisonBinaryOperator],[">=",r.ComparisonBinaryOperator],["==",r.ComparisonBinaryOperator],["!=",r.ComparisonBinaryOperator],["<",r.ComparisonBinaryOperator],[">",r.ComparisonBinaryOperator],["+",r.AdditiveBinaryOperator],["-",r.AdditiveBinaryOperator],["~",r.AdditiveBinaryOperator],["*",r.MultiplicativeBinaryOperator],["/",r.MultiplicativeBinaryOperator],["%",r.MultiplicativeBinaryOperator],["=",r.Equals]],l=new Map([["n","\n"],["t","\t"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]);function u(e,t={}){const n=[],u=function(e,t={}){return e.endsWith("\n")&&(e=e.slice(0,-1)),t.lstrip_blocks&&(e=e.replace(/^[ \t]*({[#%-])/gm,"$1")),t.trim_blocks&&(e=e.replace(/([#%-]})\n/g,"$1")),e.replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{").replace(/-#}\s*/g,"#}").replace(/\s*{#-/g,"{#").replace(/{%\s*(end)?generation\s*%}/gs,"")}(e,t);let c=0,d=0;const p=e=>{let t="";for(;e(u[c]);){if("\\"===u[c]){if(++c,c>=u.length)throw new SyntaxError("Unexpected end of input");const e=u[c++],n=l.get(e);if(void 0===n)throw new SyntaxError(`Unexpected escaped character: ${e}`);t+=n;continue}if(t+=u[c++],c>=u.length)throw new SyntaxError("Unexpected end of input")}return t};e:for(;c<u.length;){const e=n.at(-1)?.type;if(void 0===e||e===r.CloseStatement||e===r.CloseExpression||e===r.Comment){let e="";for(;c<u.length&&("{"!==u[c]||"%"!==u[c+1]&&"{"!==u[c+1]&&"#"!==u[c+1]);)e+=u[c++];if(e.length>0){n.push(new s(e,r.Text));continue}}if("{"===u[c]&&"#"===u[c+1]){c+=2;let e="";for(;"#"!==u[c]||"}"!==u[c+1];){if(c+2>=u.length)throw new SyntaxError("Missing end of comment tag");e+=u[c++]}n.push(new s(e,r.Comment)),c+=2;continue}p(e=>/\s/.test(e));const t=u[c];if("-"===t||"+"===t){const e=n.at(-1)?.type;if(e===r.Text||void 0===e)throw new SyntaxError(`Unexpected character: ${t}`);switch(e){case r.Identifier:case r.NumericLiteral:case r.StringLiteral:case r.CloseParen:case r.CloseSquareBracket:break;default:{++c;const e=p(a);n.push(new s(`${t}${e}`,e.length>0?r.NumericLiteral:r.UnaryOperator));continue}}}for(const[e,t]of o)if(!("}}"===e&&d>0)&&u.slice(c,c+e.length)===e){n.push(new s(e,t)),t===r.OpenExpression?d=0:t===r.OpenCurlyBracket?++d:t===r.CloseCurlyBracket&&--d,c+=e.length;continue e}if("'"===t||'"'===t){++c;const e=p(e=>e!==t);n.push(new s(e,r.StringLiteral)),++c;continue}if(a(t)){let e=p(a);"."===u[c]&&a(u[c+1])&&(++c,e=`${e}.${p(a)}`),n.push(new s(e,r.NumericLiteral));continue}if(i(t)){const e=p(i);n.push(new s(e,r.Identifier));continue}throw new SyntaxError(`Unexpected character: ${t}`)}return n}var c=class{type="Statement"},d=class extends c{constructor(e){super(),this.body=e}type="Program"},p=class extends c{constructor(e,t,n){super(),this.test=e,this.body=t,this.alternate=n}type="If"},h=class extends c{constructor(e,t,n,r){super(),this.loopvar=e,this.iterable=t,this.body=n,this.defaultBlock=r}type="For"},m=class extends c{type="Break"},f=class extends c{type="Continue"},_=class extends c{constructor(e,t,n){super(),this.assignee=e,this.value=t,this.body=n}type="Set"},g=class extends c{constructor(e,t,n){super(),this.name=e,this.args=t,this.body=n}type="Macro"},w=class extends c{constructor(e){super(),this.value=e}type="Comment"},y=class extends c{type="Expression"},b=class extends y{constructor(e,t,n){super(),this.object=e,this.property=t,this.computed=n}type="MemberExpression"},x=class extends y{constructor(e,t){super(),this.callee=e,this.args=t}type="CallExpression"},v=class extends y{constructor(e){super(),this.value=e}type="Identifier"},M=class extends y{constructor(e){super(),this.value=e}type="Literal"},k=class extends M{type="IntegerLiteral"},T=class extends M{type="FloatLiteral"},$=class extends M{type="StringLiteral"},S=class extends M{type="ArrayLiteral"},C=class extends M{type="TupleLiteral"},E=class extends M{type="ObjectLiteral"},P=class extends y{constructor(e,t,n){super(),this.operator=e,this.left=t,this.right=n}type="BinaryExpression"},A=class extends y{constructor(e,t){super(),this.operand=e,this.filter=t}type="FilterExpression"},I=class extends c{constructor(e,t){super(),this.filter=e,this.body=t}type="FilterStatement"},F=class extends y{constructor(e,t){super(),this.lhs=e,this.test=t}type="SelectExpression"},z=class extends y{constructor(e,t,n){super(),this.operand=e,this.negate=t,this.test=n}type="TestExpression"},O=class extends y{constructor(e,t){super(),this.operator=e,this.argument=t}type="UnaryExpression"},L=class extends y{constructor(e=void 0,t=void 0,n=void 0){super(),this.start=e,this.stop=t,this.step=n}type="SliceExpression"},B=class extends y{constructor(e,t){super(),this.key=e,this.value=t}type="KeywordArgumentExpression"},D=class extends y{constructor(e){super(),this.argument=e}type="SpreadExpression"},N=class extends c{constructor(e,t,n){super(),this.call=e,this.callerArgs=t,this.body=n}type="CallStatement"},j=class extends y{constructor(e,t,n){super(),this.condition=e,this.trueExpr=t,this.falseExpr=n}type="Ternary"};function R(e){const t=new d([]);let n=0;function i(t,r){const s=e[n++];if(!s||s.type!==t)throw new Error(`Parser Error: ${r}. ${s.type} !== ${t}.`);return s}function a(e){if(!c(e))throw new SyntaxError(`Expected ${e}`);++n}function o(){switch(e[n].type){case r.Comment:return new w(e[n++].value);case r.Text:return new $(i(r.Text,"Expected text token").value);case r.OpenStatement:return function(){if(i(r.OpenStatement,"Expected opening statement token"),e[n].type!==r.Identifier)throw new SyntaxError(`Unknown statement, got ${e[n].type}`);const t=e[n].value;let s;switch(t){case"set":++n,s=function(){const e=M();let t=null;const s=[];if(l(r.Equals))++n,t=M();else{for(i(r.CloseStatement,"Expected %} token");!u("endset");)s.push(o());i(r.OpenStatement,"Expected {% token"),a("endset")}return i(r.CloseStatement,"Expected closing statement token"),new _(e,t,s)}();break;case"if":++n,s=y(),i(r.OpenStatement,"Expected {% token"),a("endif"),i(r.CloseStatement,"Expected %} token");break;case"macro":++n,s=function(){const e=Z();if("Identifier"!==e.type)throw new SyntaxError("Expected identifier following macro statement");const t=K();i(r.CloseStatement,"Expected closing statement token");const n=[];for(;!u("endmacro");)n.push(o());return new g(e,t,n)}(),i(r.OpenStatement,"Expected {% token"),a("endmacro"),i(r.CloseStatement,"Expected %} token");break;case"for":++n,s=function(){const e=M(!0);if(!(e instanceof v||e instanceof C))throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${e.type} instead`);if(!c("in"))throw new SyntaxError("Expected `in` keyword following loop variable");++n;const t=R();i(r.CloseStatement,"Expected closing statement token");const s=[];for(;!u("endfor","else");)s.push(o());const a=[];if(u("else"))for(++n,++n,i(r.CloseStatement,"Expected closing statement token");!u("endfor");)a.push(o());return new h(e,t,s,a)}(),i(r.OpenStatement,"Expected {% token"),a("endfor"),i(r.CloseStatement,"Expected %} token");break;case"call":{++n;let e=null;l(r.OpenParen)&&(e=K());const t=Z();if("Identifier"!==t.type)throw new SyntaxError("Expected identifier following call statement");const c=K();i(r.CloseStatement,"Expected closing statement token");const d=[];for(;!u("endcall");)d.push(o());i(r.OpenStatement,"Expected '{%'"),a("endcall"),i(r.CloseStatement,"Expected closing statement token");const p=new x(t,c);s=new N(p,e,d);break}case"break":++n,i(r.CloseStatement,"Expected closing statement token"),s=new m;break;case"continue":++n,i(r.CloseStatement,"Expected closing statement token"),s=new f;break;case"filter":{++n;let e=Z();e instanceof v&&l(r.OpenParen)&&(e=H(e)),i(r.CloseStatement,"Expected closing statement token");const t=[];for(;!u("endfilter");)t.push(o());i(r.OpenStatement,"Expected '{%'"),a("endfilter"),i(r.CloseStatement,"Expected '%}'"),s=new I(e,t);break}default:throw new SyntaxError(`Unknown statement type: ${t}`)}return s}();case r.OpenExpression:return function(){i(r.OpenExpression,"Expected opening expression token");const e=R();return i(r.CloseExpression,"Expected closing expression token"),e}();default:throw new SyntaxError(`Unexpected token type: ${e[n].type}`)}}function l(...t){return n+t.length<=e.length&&t.every((t,r)=>t===e[n+r].type)}function u(...t){return e[n]?.type===r.OpenStatement&&e[n+1]?.type===r.Identifier&&t.includes(e[n+1]?.value)}function c(...t){return n+t.length<=e.length&&t.every((t,r)=>"Identifier"===e[n+r].type&&t===e[n+r].value)}function y(){const e=R();i(r.CloseStatement,"Expected closing statement token");const t=[],s=[];for(;!u("elif","else","endif");)t.push(o());if(u("elif")){++n,++n;const e=y();s.push(e)}else if(u("else"))for(++n,++n,i(r.CloseStatement,"Expected closing statement token");!u("endif");)s.push(o());return new p(e,t,s)}function M(e=!1){const t=e?Z:R,s=[t()],i=l(r.Comma);for(;i&&(++n,s.push(t()),l(r.Comma)););return i?new C(s):s[0]}function R(){return V()}function V(){const e=G();if(c("if")){++n;const t=G();if(c("else")){++n;const r=V();return new j(t,e,r)}return new F(e,t)}return e}function G(){let t=U();for(;c("or");){const r=e[n];++n;const s=U();t=new P(r,t,s)}return t}function U(){let t=q();for(;c("and");){const r=e[n];++n;const s=q();t=new P(r,t,s)}return t}function q(){let t;for(;c("not");){const r=e[n];++n;const s=q();t=new O(r,s)}return t??function(){let t=W();for(;;){let i;if(c("not","in"))i=new s("not in",r.Identifier),n+=2;else if(c("in"))i=e[n++];else{if(!l(r.ComparisonBinaryOperator))break;i=e[n++]}const a=W();t=new P(i,t,a)}return t}()}function W(){let t=J();for(;l(r.AdditiveBinaryOperator);){const r=e[n];++n;const s=J();t=new P(r,t,s)}return t}function H(e){let t=new x(e,K());return t=X(t),l(r.OpenParen)&&(t=H(t)),t}function K(){i(r.OpenParen,"Expected opening parenthesis for arguments list");const t=function(){const t=[];for(;!l(r.CloseParen);){let s;if(e[n].type===r.MultiplicativeBinaryOperator&&"*"===e[n].value){++n;const e=R();s=new D(e)}else if(s=R(),l(r.Equals)){if(++n,!(s instanceof v))throw new SyntaxError("Expected identifier for keyword argument");const e=R();s=new B(s,e)}t.push(s),l(r.Comma)&&++n}return t}();return i(r.CloseParen,"Expected closing parenthesis for arguments list"),t}function Q(){const e=[];let t=!1;for(;!l(r.CloseSquareBracket);)l(r.Colon)?(e.push(void 0),++n,t=!0):(e.push(R()),l(r.Colon)&&(++n,t=!0));if(0===e.length)throw new SyntaxError("Expected at least one argument for member/slice expression");if(t){if(e.length>3)throw new SyntaxError("Expected 0-3 arguments for slice expression");return new L(...e)}return e[0]}function X(t){for(;l(r.Dot)||l(r.OpenSquareBracket);){const s=e[n];let a;++n;const o=s.type===r.OpenSquareBracket;if(o)a=Q(),i(r.CloseSquareBracket,"Expected closing square bracket");else if(a=Z(),"Identifier"!==a.type)throw new SyntaxError("Expected identifier following dot operator");t=new b(t,a,o)}return t}function J(){let t=Y();for(;l(r.MultiplicativeBinaryOperator);){const r=e[n++],s=Y();t=new P(r,t,s)}return t}function Y(){let e=function(){let e=function(){const e=X(Z());return l(r.OpenParen)?H(e):e}();for(;l(r.Pipe);){++n;let t=Z();if(!(t instanceof v))throw new SyntaxError("Expected identifier for the filter");l(r.OpenParen)&&(t=H(t)),e=new A(e,t)}return e}();for(;c("is");){++n;const t=c("not");t&&++n;const r=Z();if(!(r instanceof v))throw new SyntaxError("Expected identifier for the test");e=new z(e,t,r)}return e}function Z(){const t=e[n++];switch(t.type){case r.NumericLiteral:{const e=t.value;return e.includes(".")?new T(Number(e)):new k(Number(e))}case r.StringLiteral:{let s=t.value;for(;l(r.StringLiteral);)s+=e[n++].value;return new $(s)}case r.Identifier:return new v(t.value);case r.OpenParen:{const e=M();return i(r.CloseParen,"Expected closing parenthesis, got ${tokens[current].type} instead."),e}case r.OpenSquareBracket:{const e=[];for(;!l(r.CloseSquareBracket);)e.push(R()),l(r.Comma)&&++n;return++n,new S(e)}case r.OpenCurlyBracket:{const e=new Map;for(;!l(r.CloseCurlyBracket);){const t=R();i(r.Colon,"Expected colon between key and value in object literal");const s=R();e.set(t,s),l(r.Comma)&&++n}return++n,new E(e)}default:throw new SyntaxError(`Unexpected token: ${t.type}`)}}for(;n<e.length;)t.body.push(o());return t}function V(e,t,n=1){void 0===t&&(t=e,e=0);const r=[];for(let s=e;s<t;s+=n)r.push(s);return r}function G(e,t,n,r=1){const s=Math.sign(r);s>=0?(t=(t??=0)<0?Math.max(e.length+t,0):Math.min(t,e.length),n=(n??=e.length)<0?Math.max(e.length+n,0):Math.min(n,e.length)):(t=(t??=e.length-1)<0?Math.max(e.length+t,-1):Math.min(t,e.length-1),n=(n??=-1)<-1?Math.max(e.length+n,-1):Math.min(n,e.length-1));const i=[];for(let a=t;s*a<s*n;a+=r)i.push(e[a]);return i}function U(e){return function(e,t){const n=new Intl.DateTimeFormat(void 0,{month:"long"}),r=new Intl.DateTimeFormat(void 0,{month:"short"}),s=e=>e<10?"0"+e:e.toString();return t.replace(/%[YmdbBHM%]/g,t=>{switch(t){case"%Y":return e.getFullYear().toString();case"%m":return s(e.getMonth()+1);case"%d":return s(e.getDate());case"%b":return r.format(e);case"%B":return n.format(e);case"%H":return s(e.getHours());case"%M":return s(e.getMinutes());case"%%":return"%";default:return t}})}(new Date,e)}var q=class extends Error{},W=class extends Error{},H=class{type="RuntimeValue";value;builtins=new Map;constructor(e=void 0){this.value=e}__bool__(){return new J(!!this.value)}toString(){return String(this.value)}},K=class extends H{type="IntegerValue"},Q=class extends H{type="FloatValue";toString(){return this.value%1==0?this.value.toFixed(1):this.value.toString()}},X=class extends H{type="StringValue";builtins=new Map([["upper",new ne(()=>new X(this.value.toUpperCase()))],["lower",new ne(()=>new X(this.value.toLowerCase()))],["strip",new ne(()=>new X(this.value.trim()))],["title",new ne(()=>new X(this.value.replace(/\b\w/g,e=>e.toUpperCase())))],["capitalize",new ne(()=>new X(this.value.charAt(0).toUpperCase()+this.value.slice(1)))],["length",new K(this.value.length)],["rstrip",new ne(()=>new X(this.value.trimEnd()))],["lstrip",new ne(()=>new X(this.value.trimStart()))],["startswith",new ne(e=>{if(0===e.length)throw new Error("startswith() requires at least one argument");const t=e[0];if(t instanceof X)return new J(this.value.startsWith(t.value));if(t instanceof ee){for(const e of t.value){if(!(e instanceof X))throw new Error("startswith() tuple elements must be strings");if(this.value.startsWith(e.value))return new J(!0)}return new J(!1)}throw new Error("startswith() argument must be a string or tuple of strings")})],["endswith",new ne(e=>{if(0===e.length)throw new Error("endswith() requires at least one argument");const t=e[0];if(t instanceof X)return new J(this.value.endsWith(t.value));if(t instanceof ee){for(const e of t.value){if(!(e instanceof X))throw new Error("endswith() tuple elements must be strings");if(this.value.endsWith(e.value))return new J(!0)}return new J(!1)}throw new Error("endswith() argument must be a string or tuple of strings")})],["split",new ne(e=>{const t=e[0]??new re;if(!(t instanceof X||t instanceof re))throw new Error("sep argument must be a string or null");const n=e[1]??new K(-1);if(!(n instanceof K))throw new Error("maxsplit argument must be a number");let r=[];if(t instanceof re){const e=this.value.trimStart();for(const{0:t,index:s}of e.matchAll(/\S+/g)){if(-1!==n.value&&r.length>=n.value&&void 0!==s){r.push(t+e.slice(s+t.length));break}r.push(t)}}else{if(""===t.value)throw new Error("empty separator");r=this.value.split(t.value),-1!==n.value&&r.length>n.value&&r.push(r.splice(n.value).join(t.value))}return new ee(r.map(e=>new X(e)))})],["replace",new ne(e=>{if(e.length<2)throw new Error("replace() requires at least two arguments");const t=e[0],n=e[1];if(!(t instanceof X&&n instanceof X))throw new Error("replace() arguments must be strings");let r;if(r=e.length>2?"KeywordArgumentsValue"===e[2].type?e[2].value.get("count")??new re:e[2]:new re,!(r instanceof K||r instanceof re))throw new Error("replace() count argument must be a number or null");return new X(function(e,t,n,r){if(0===r)return e;let s=null==r||r<0?1/0:r;const i=0===t.length?new RegExp("(?=)","gu"):new RegExp(t.replace(/[.*+?^${}()|[\]\\]/g,"\\$&"),"gu");return e.replaceAll(i,e=>s>0?(--s,n):e)}(this.value,t.value,n.value,r.value))})]])},J=class extends H{type="BooleanValue"},Y=class extends H{type="ObjectValue";__bool__(){return new J(this.value.size>0)}builtins=new Map([["get",new ne(([e,t])=>{if(!(e instanceof X))throw new Error(`Object key must be a string: got ${e.type}`);return this.value.get(e.value)??t??new re})],["items",new ne(()=>this.items())],["keys",new ne(()=>this.keys())],["values",new ne(()=>this.values())]]);items(){return new ee(Array.from(this.value.entries()).map(([e,t])=>new ee([new X(e),t])))}keys(){return new ee(Array.from(this.value.keys()).map(e=>new X(e)))}values(){return new ee(Array.from(this.value.values()))}},Z=class extends Y{type="KeywordArgumentsValue"},ee=class extends H{type="ArrayValue";builtins=new Map([["length",new K(this.value.length)]]);__bool__(){return new J(this.value.length>0)}},te=class extends ee{type="TupleValue"},ne=class extends H{type="FunctionValue"},re=class extends H{type="NullValue"},se=class extends H{type="UndefinedValue"},ie=class{constructor(e){this.parent=e}variables=new Map([["namespace",new ne(e=>{if(0===e.length)return new Y(new Map);if(1!==e.length||!(e[0]instanceof Y))throw new Error("`namespace` expects either zero arguments or a single object argument");return e[0]})]]);tests=new Map([["boolean",e=>"BooleanValue"===e.type],["callable",e=>e instanceof ne],["odd",e=>{if(!(e instanceof K))throw new Error(`cannot odd on ${e.type}`);return e.value%2!=0}],["even",e=>{if(!(e instanceof K))throw new Error(`cannot even on ${e.type}`);return e.value%2==0}],["false",e=>"BooleanValue"===e.type&&!e.value],["true",e=>"BooleanValue"===e.type&&e.value],["none",e=>"NullValue"===e.type],["string",e=>"StringValue"===e.type],["number",e=>e instanceof K||e instanceof Q],["integer",e=>e instanceof K],["iterable",e=>"ArrayValue"===e.type||"StringValue"===e.type],["mapping",e=>"ObjectValue"===e.type],["lower",e=>{const t=e.value;return"StringValue"===e.type&&t===t.toLowerCase()}],["upper",e=>{const t=e.value;return"StringValue"===e.type&&t===t.toUpperCase()}],["none",e=>"NullValue"===e.type],["defined",e=>"UndefinedValue"!==e.type],["undefined",e=>"UndefinedValue"===e.type],["equalto",(e,t)=>e.value===t.value],["eq",(e,t)=>e.value===t.value]]);set(e,t){return this.declareVariable(e,oe(t))}declareVariable(e,t){if(this.variables.has(e))throw new SyntaxError(`Variable already declared: ${e}`);return this.variables.set(e,t),t}setVariable(e,t){return this.variables.set(e,t),t}resolve(e){if(this.variables.has(e))return this;if(this.parent)return this.parent.resolve(e);throw new Error(`Unknown variable: ${e}`)}lookupVariable(e){try{return this.resolve(e).variables.get(e)??new se}catch{return new se}}},ae=class{global;constructor(e){this.global=e??new ie}run(e){return this.evaluate(e,this.global)}evaluateBinaryExpression(e,t){const n=this.evaluate(e.left,t);switch(e.operator.value){case"and":return n.__bool__().value?this.evaluate(e.right,t):n;case"or":return n.__bool__().value?n:this.evaluate(e.right,t)}const r=this.evaluate(e.right,t);switch(e.operator.value){case"==":return new J(n.value==r.value);case"!=":return new J(n.value!=r.value)}if(n instanceof se||r instanceof se){if(r instanceof se&&["in","not in"].includes(e.operator.value))return new J("not in"===e.operator.value);throw new Error(`Cannot perform operation ${e.operator.value} on undefined values`)}if(n instanceof re||r instanceof re)throw new Error("Cannot perform operation on null values");if("~"===e.operator.value)return new X(n.value.toString()+r.value.toString());if((n instanceof K||n instanceof Q)&&(r instanceof K||r instanceof Q)){const t=n.value,s=r.value;switch(e.operator.value){case"+":case"-":case"*":{const i="+"===e.operator.value?t+s:"-"===e.operator.value?t-s:t*s;return n instanceof Q||r instanceof Q?new Q(i):new K(i)}case"/":return new Q(t/s);case"%":{const e=t%s;return n instanceof Q||r instanceof Q?new Q(e):new K(e)}case"<":return new J(t<s);case">":return new J(t>s);case">=":return new J(t>=s);case"<=":return new J(t<=s)}}else if(n instanceof ee&&r instanceof ee){if("+"===e.operator.value)return new ee(n.value.concat(r.value))}else if(r instanceof ee){const t=void 0!==r.value.find(e=>e.value===n.value);switch(e.operator.value){case"in":return new J(t);case"not in":return new J(!t)}}if((n instanceof X||r instanceof X)&&"+"===e.operator.value)return new X(n.value.toString()+r.value.toString());if(n instanceof X&&r instanceof X)switch(e.operator.value){case"in":return new J(r.value.includes(n.value));case"not in":return new J(!r.value.includes(n.value))}if(n instanceof X&&r instanceof Y)switch(e.operator.value){case"in":return new J(r.value.has(n.value));case"not in":return new J(!r.value.has(n.value))}throw new SyntaxError(`Unknown operator "${e.operator.value}" between ${n.type} and ${r.type}`)}evaluateArguments(e,t){const n=[],r=new Map;for(const s of e)if("SpreadExpression"===s.type){const e=s,r=this.evaluate(e.argument,t);if(!(r instanceof ee))throw new Error(`Cannot unpack non-iterable type: ${r.type}`);for(const e of r.value)n.push(e)}else if("KeywordArgumentExpression"===s.type){const e=s;r.set(e.key.value,this.evaluate(e.value,t))}else{if(r.size>0)throw new Error("Positional arguments must come before keyword arguments");n.push(this.evaluate(s,t))}return[n,r]}applyFilter(e,t,n){if("Identifier"===t.type){const r=t;if("tojson"===r.value)return new X(le(e));if(e instanceof ee)switch(r.value){case"list":return e;case"first":return e.value[0];case"last":return e.value[e.value.length-1];case"length":return new K(e.value.length);case"reverse":return new ee(e.value.reverse());case"sort":return new ee(e.value.sort((e,t)=>{if(e.type!==t.type)throw new Error(`Cannot compare different types: ${e.type} and ${t.type}`);switch(e.type){case"IntegerValue":case"FloatValue":return e.value-t.value;case"StringValue":return e.value.localeCompare(t.value);default:throw new Error(`Cannot compare type: ${e.type}`)}}));case"join":return new X(e.value.map(e=>e.value).join(""));case"string":return new X(le(e));case"unique":{const t=new Set,n=[];for(const r of e.value)t.has(r.value)||(t.add(r.value),n.push(r));return new ee(n)}default:throw new Error(`Unknown ArrayValue filter: ${r.value}`)}else if(e instanceof X)switch(r.value){case"length":case"upper":case"lower":case"title":case"capitalize":{const t=e.builtins.get(r.value);if(t instanceof ne)return t.value([],n);if(t instanceof K)return t;throw new Error(`Unknown StringValue filter: ${r.value}`)}case"trim":return new X(e.value.trim());case"indent":return new X(e.value.split("\n").map((e,t)=>0===t||0===e.length?e:"    "+e).join("\n"));case"join":case"string":return e;case"int":{const t=parseInt(e.value,10);return new K(isNaN(t)?0:t)}case"float":{const t=parseFloat(e.value);return new Q(isNaN(t)?0:t)}default:throw new Error(`Unknown StringValue filter: ${r.value}`)}else if(e instanceof K||e instanceof Q)switch(r.value){case"abs":return e instanceof K?new K(Math.abs(e.value)):new Q(Math.abs(e.value));case"int":return new K(Math.floor(e.value));case"float":return new Q(e.value);default:throw new Error(`Unknown NumericValue filter: ${r.value}`)}else if(e instanceof Y)switch(r.value){case"items":return new ee(Array.from(e.value.entries()).map(([e,t])=>new ee([new X(e),t])));case"length":return new K(e.value.size);default:throw new Error(`Unknown ObjectValue filter: ${r.value}`)}else if(e instanceof J)switch(r.value){case"bool":return new J(e.value);case"int":return new K(e.value?1:0);case"float":return new Q(e.value?1:0);case"string":return new X(e.value?"true":"false");default:throw new Error(`Unknown BooleanValue filter: ${r.value}`)}throw new Error(`Cannot apply filter "${r.value}" to type: ${e.type}`)}if("CallExpression"===t.type){const r=t;if("Identifier"!==r.callee.type)throw new Error(`Unknown filter: ${r.callee.type}`);const s=r.callee.value;if("tojson"===s){const[,t]=this.evaluateArguments(r.args,n),s=t.get("indent")??new re;if(!(s instanceof K||s instanceof re))throw new Error("If set, indent must be a number");return new X(le(e,s.value))}if("join"===s){let t;if(e instanceof X)t=Array.from(e.value);else{if(!(e instanceof ee))throw new Error(`Cannot apply filter "${s}" to type: ${e.type}`);t=e.value.map(e=>e.value)}const[i,a]=this.evaluateArguments(r.args,n),o=i.at(0)??a.get("separator")??new X("");if(!(o instanceof X))throw new Error("separator must be a string");return new X(t.join(o.value))}if("int"===s||"float"===s){const[t,i]=this.evaluateArguments(r.args,n),a=t.at(0)??i.get("default")??("int"===s?new K(0):new Q(0));if(e instanceof X){const t="int"===s?parseInt(e.value,10):parseFloat(e.value);return isNaN(t)?a:"int"===s?new K(t):new Q(t)}if(e instanceof K||e instanceof Q)return e;if(e instanceof J)return"int"===s?new K(e.value?1:0):new Q(e.value?1:0);throw new Error(`Cannot apply filter "${s}" to type: ${e.type}`)}if("default"===s){const[t,s]=this.evaluateArguments(r.args,n),i=t[0]??new X(""),a=t[1]??s.get("boolean")??new J(!1);if(!(a instanceof J))throw new Error("`default` filter flag must be a boolean");return e instanceof se||a.value&&!e.__bool__().value?i:e}if(e instanceof ee){switch(s){case"selectattr":case"rejectattr":{const t="selectattr"===s;if(e.value.some(e=>!(e instanceof Y)))throw new Error(`\`${s}\` can only be applied to array of objects`);if(r.args.some(e=>"StringLiteral"!==e.type))throw new Error(`arguments of \`${s}\` must be strings`);const[i,a,o]=r.args.map(e=>this.evaluate(e,n));let l;if(a){const e=n.tests.get(a.value);if(!e)throw new Error(`Unknown test: ${a.value}`);l=e}else l=(...e)=>e[0].__bool__().value;const u=e.value.filter(e=>{const n=e.value.get(i.value),r=!!n&&l(n,o);return t?r:!r});return new ee(u)}case"map":{const[,t]=this.evaluateArguments(r.args,n);if(t.has("attribute")){const n=t.get("attribute");if(!(n instanceof X))throw new Error("attribute must be a string");const r=t.get("default"),s=e.value.map(e=>{if(!(e instanceof Y))throw new Error("items in map must be an object");return e.value.get(n.value)??r??new se});return new ee(s)}throw new Error("`map` expressions without `attribute` set are not currently supported.")}}throw new Error(`Unknown ArrayValue filter: ${s}`)}if(e instanceof X){switch(s){case"indent":{const[t,s]=this.evaluateArguments(r.args,n),i=t.at(0)??s.get("width")??new K(4);if(!(i instanceof K))throw new Error("width must be a number");const a=t.at(1)??s.get("first")??new J(!1),o=t.at(2)??s.get("blank")??new J(!1),l=e.value.split("\n"),u=" ".repeat(i.value),c=l.map((e,t)=>!a.value&&0===t||!o.value&&0===e.length?e:u+e);return new X(c.join("\n"))}case"replace":{const t=e.builtins.get("replace");if(!(t instanceof ne))throw new Error("replace filter not available");const[s,i]=this.evaluateArguments(r.args,n);return t.value([...s,new Z(i)],n)}}throw new Error(`Unknown StringValue filter: ${s}`)}throw new Error(`Cannot apply filter "${s}" to type: ${e.type}`)}throw new Error(`Unknown filter: ${t.type}`)}evaluateFilterExpression(e,t){const n=this.evaluate(e.operand,t);return this.applyFilter(n,e.filter,t)}evaluateTestExpression(e,t){const n=this.evaluate(e.operand,t),r=t.tests.get(e.test.value);if(!r)throw new Error(`Unknown test: ${e.test.value}`);const s=r(n);return new J(e.negate?!s:s)}evaluateSelectExpression(e,t){return this.evaluate(e.test,t).__bool__().value?this.evaluate(e.lhs,t):new se}evaluateUnaryExpression(e,t){const n=this.evaluate(e.argument,t);if("not"===e.operator.value)return new J(!n.value);throw new SyntaxError(`Unknown operator: ${e.operator.value}`)}evaluateTernaryExpression(e,t){return this.evaluate(e.condition,t).__bool__().value?this.evaluate(e.trueExpr,t):this.evaluate(e.falseExpr,t)}evalProgram(e,t){return this.evaluateBlock(e.body,t)}evaluateBlock(e,t){let n="";for(const r of e){const e=this.evaluate(r,t);"NullValue"!==e.type&&"UndefinedValue"!==e.type&&(n+=e.toString())}return new X(n)}evaluateIdentifier(e,t){return t.lookupVariable(e.value)}evaluateCallExpression(e,t){const[n,r]=this.evaluateArguments(e.args,t);r.size>0&&n.push(new Z(r));const s=this.evaluate(e.callee,t);if("FunctionValue"!==s.type)throw new Error(`Cannot call something that is not a function: got ${s.type}`);return s.value(n,t)}evaluateSliceExpression(e,t,n){if(!(e instanceof ee||e instanceof X))throw new Error("Slice object must be an array or string");const r=this.evaluate(t.start,n),s=this.evaluate(t.stop,n),i=this.evaluate(t.step,n);if(!(r instanceof K||r instanceof se))throw new Error("Slice start must be numeric or undefined");if(!(s instanceof K||s instanceof se))throw new Error("Slice stop must be numeric or undefined");if(!(i instanceof K||i instanceof se))throw new Error("Slice step must be numeric or undefined");return e instanceof ee?new ee(G(e.value,r.value,s.value,i.value)):new X(G(Array.from(e.value),r.value,s.value,i.value).join(""))}evaluateMemberExpression(e,t){const n=this.evaluate(e.object,t);let r,s;if(e.computed){if("SliceExpression"===e.property.type)return this.evaluateSliceExpression(n,e.property,t);r=this.evaluate(e.property,t)}else r=new X(e.property.value);if(n instanceof Y){if(!(r instanceof X))throw new Error(`Cannot access property with non-string: got ${r.type}`);s=n.value.get(r.value)??n.builtins.get(r.value)}else if(n instanceof ee||n instanceof X)if(r instanceof K)s=n.value.at(r.value),n instanceof X&&(s=new X(n.value.at(r.value)));else{if(!(r instanceof X))throw new Error(`Cannot access property with non-string/non-number: got ${r.type}`);s=n.builtins.get(r.value)}else{if(!(r instanceof X))throw new Error(`Cannot access property with non-string: got ${r.type}`);s=n.builtins.get(r.value)}return s instanceof H?s:new se}evaluateSet(e,t){const n=e.value?this.evaluate(e.value,t):this.evaluateBlock(e.body,t);if("Identifier"===e.assignee.type){const r=e.assignee.value;t.setVariable(r,n)}else if("TupleLiteral"===e.assignee.type){const r=e.assignee;if(!(n instanceof ee))throw new Error(`Cannot unpack non-iterable type in set: ${n.type}`);const s=n.value;if(s.length!==r.value.length)throw new Error(`Too ${r.value.length>s.length?"few":"many"} items to unpack in set`);for(let e=0;e<r.value.length;++e){const n=r.value[e];if("Identifier"!==n.type)throw new Error(`Cannot unpack to non-identifier in set: ${n.type}`);t.setVariable(n.value,s[e])}}else{if("MemberExpression"!==e.assignee.type)throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify(e.assignee)}`);{const r=e.assignee,s=this.evaluate(r.object,t);if(!(s instanceof Y))throw new Error("Cannot assign to member of non-object");if("Identifier"!==r.property.type)throw new Error("Cannot assign to member with non-identifier property");s.value.set(r.property.value,n)}}return new re}evaluateIf(e,t){const n=this.evaluate(e.test,t);return this.evaluateBlock(n.__bool__().value?e.body:e.alternate,t)}evaluateFor(e,t){const n=new ie(t);let r,s;if("SelectExpression"===e.iterable.type){const t=e.iterable;s=this.evaluate(t.lhs,n),r=t.test}else s=this.evaluate(e.iterable,n);if(!(s instanceof ee||s instanceof Y))throw new Error(`Expected iterable or object type in for loop: got ${s.type}`);s instanceof Y&&(s=s.keys());const i=[],a=[];for(let t=0;t<s.value.length;++t){const o=new ie(n),l=s.value[t];let u;if("Identifier"===e.loopvar.type)u=t=>t.setVariable(e.loopvar.value,l);else{if("TupleLiteral"!==e.loopvar.type)throw new Error(`Invalid loop variable(s): ${e.loopvar.type}`);{const t=e.loopvar;if("ArrayValue"!==l.type)throw new Error(`Cannot unpack non-iterable type: ${l.type}`);const n=l;if(t.value.length!==n.value.length)throw new Error(`Too ${t.value.length>n.value.length?"few":"many"} items to unpack`);u=e=>{for(let r=0;r<t.value.length;++r){if("Identifier"!==t.value[r].type)throw new Error(`Cannot unpack non-identifier type: ${t.value[r].type}`);e.setVariable(t.value[r].value,n.value[r])}}}}r&&(u(o),!this.evaluate(r,o).__bool__().value)||(i.push(l),a.push(u))}let o="",l=!0;for(let t=0;t<i.length;++t){const r=new Map([["index",new K(t+1)],["index0",new K(t)],["revindex",new K(i.length-t)],["revindex0",new K(i.length-t-1)],["first",new J(0===t)],["last",new J(t===i.length-1)],["length",new K(i.length)],["previtem",t>0?i[t-1]:new se],["nextitem",t<i.length-1?i[t+1]:new se]]);n.setVariable("loop",new Y(r)),a[t](n);try{o+=this.evaluateBlock(e.body,n).value}catch(e){if(e instanceof W)continue;if(e instanceof q)break;throw e}l=!1}return l&&(o+=this.evaluateBlock(e.defaultBlock,n).value),new X(o)}evaluateMacro(e,t){return t.setVariable(e.name.value,new ne((t,n)=>{const r=new ie(n);let s;t=t.slice(),"KeywordArgumentsValue"===t.at(-1)?.type&&(s=t.pop());for(let n=0;n<e.args.length;++n){const i=e.args[n],a=t[n];if("Identifier"===i.type){const e=i;if(!a)throw new Error(`Missing positional argument: ${e.value}`);r.setVariable(e.value,a)}else{if("KeywordArgumentExpression"!==i.type)throw new Error(`Unknown argument type: ${i.type}`);{const e=i,t=a??s?.value.get(e.key.value)??this.evaluate(e.value,r);r.setVariable(e.key.value,t)}}}return this.evaluateBlock(e.body,r)})),new re}evaluateCallStatement(e,t){const n=new ne((t,n)=>{const r=new ie(n);if(e.callerArgs)for(let n=0;n<e.callerArgs.length;++n){const s=e.callerArgs[n];if("Identifier"!==s.type)throw new Error(`Caller parameter must be an identifier, got ${s.type}`);r.setVariable(s.value,t[n]??new se)}return this.evaluateBlock(e.body,r)}),[r,s]=this.evaluateArguments(e.call.args,t);r.push(new Z(s));const i=this.evaluate(e.call.callee,t);if("FunctionValue"!==i.type)throw new Error(`Cannot call something that is not a function: got ${i.type}`);const a=new ie(t);return a.setVariable("caller",n),i.value(r,a)}evaluateFilterStatement(e,t){const n=this.evaluateBlock(e.body,t);return this.applyFilter(n,e.filter,t)}evaluate(e,t){if(!e)return new se;switch(e.type){case"Program":return this.evalProgram(e,t);case"Set":return this.evaluateSet(e,t);case"If":return this.evaluateIf(e,t);case"For":return this.evaluateFor(e,t);case"Macro":return this.evaluateMacro(e,t);case"CallStatement":return this.evaluateCallStatement(e,t);case"Break":throw new q;case"Continue":throw new W;case"IntegerLiteral":return new K(e.value);case"FloatLiteral":return new Q(e.value);case"StringLiteral":return new X(e.value);case"ArrayLiteral":return new ee(e.value.map(e=>this.evaluate(e,t)));case"TupleLiteral":return new te(e.value.map(e=>this.evaluate(e,t)));case"ObjectLiteral":{const n=new Map;for(const[r,s]of e.value){const e=this.evaluate(r,t);if(!(e instanceof X))throw new Error(`Object keys must be strings: got ${e.type}`);n.set(e.value,this.evaluate(s,t))}return new Y(n)}case"Identifier":return this.evaluateIdentifier(e,t);case"CallExpression":return this.evaluateCallExpression(e,t);case"MemberExpression":return this.evaluateMemberExpression(e,t);case"UnaryExpression":return this.evaluateUnaryExpression(e,t);case"BinaryExpression":return this.evaluateBinaryExpression(e,t);case"FilterExpression":return this.evaluateFilterExpression(e,t);case"FilterStatement":return this.evaluateFilterStatement(e,t);case"TestExpression":return this.evaluateTestExpression(e,t);case"SelectExpression":return this.evaluateSelectExpression(e,t);case"Ternary":return this.evaluateTernaryExpression(e,t);case"Comment":return new re;default:throw new SyntaxError(`Unknown node type: ${e.type}`)}}};function oe(e){switch(typeof e){case"number":return Number.isInteger(e)?new K(e):new Q(e);case"string":return new X(e);case"boolean":return new J(e);case"undefined":return new se;case"object":return null===e?new re:Array.isArray(e)?new ee(e.map(oe)):new Y(new Map(Object.entries(e).map(([e,t])=>[e,oe(t)])));case"function":return new ne((t,n)=>oe(e(...t.map(e=>e.value))??null));default:throw new Error(`Cannot convert to runtime value: ${e}`)}}function le(e,t,n){const r=n??0;switch(e.type){case"NullValue":case"UndefinedValue":return"null";case"IntegerValue":case"FloatValue":case"StringValue":case"BooleanValue":return JSON.stringify(e.value);case"ArrayValue":case"ObjectValue":{const n=t?" ".repeat(t):"",s="\n"+n.repeat(r),i=s+n;if("ArrayValue"===e.type){const n=e.value.map(e=>le(e,t,r+1));return t?`[${i}${n.join(`,${i}`)}${s}]`:`[${n.join(", ")}]`}{const n=Array.from(e.value.entries()).map(([e,n])=>{const s=`"${e}": ${le(n,t,r+1)}`;return t?`${i}${s}`:s});return t?`{${n.join(",")}${s}}`:`{${n.join(", ")}}`}}default:throw new Error(`Cannot convert to JSON: ${e.type}`)}}var ue="\n";function ce(...e){return"{%- "+e.join(" ")+" -%}"}function de(e,t,n){return e.map(e=>function(e,t,n){const r=n.repeat(t);switch(e.type){case"Program":return de(e.body,t,n);case"If":return function(e,t,n){const r=n.repeat(t),s=[];let i=e;for(;i&&(s.push({test:i.test,body:i.body}),1===i.alternate.length&&"If"===i.alternate[0].type);)i=i.alternate[0];let a=r+ce("if",pe(s[0].test))+ue+de(s[0].body,t+1,n);for(let e=1;e<s.length;++e)a+=ue+r+ce("elif",pe(s[e].test))+ue+de(s[e].body,t+1,n);return i&&i.alternate.length>0&&(a+=ue+r+ce("else")+ue+de(i.alternate,t+1,n)),a+=ue+r+ce("endif"),a}(e,t,n);case"For":return function(e,t,n){const r=n.repeat(t);let s="";if("SelectExpression"===e.iterable.type){const t=e.iterable;s=`${pe(t.lhs)} if ${pe(t.test)}`}else s=pe(e.iterable);let i=r+ce("for",pe(e.loopvar),"in",s)+ue+de(e.body,t+1,n);return e.defaultBlock.length>0&&(i+=ue+r+ce("else")+ue+de(e.defaultBlock,t+1,n)),i+=ue+r+ce("endfor"),i}(e,t,n);case"Set":return function(e,t,n){const r=n.repeat(t),s=pe(e.assignee),i=e.value?pe(e.value):"",a=r+ce("set",`${s}${e.value?" = "+i:""}`);return 0===e.body.length?a:a+ue+de(e.body,t+1,n)+ue+r+ce("endset")}(e,t,n);case"Macro":return function(e,t,n){const r=n.repeat(t),s=e.args.map(pe).join(", ");return r+ce("macro",`${e.name.value}(${s})`)+ue+de(e.body,t+1,n)+ue+r+ce("endmacro")}(e,t,n);case"Break":return r+ce("break");case"Continue":return r+ce("continue");case"CallStatement":return function(e,t,n){const r=n.repeat(t);let s=r+ce(`call${e.callerArgs&&e.callerArgs.length>0?`(${e.callerArgs.map(pe).join(", ")})`:""}`,pe(e.call))+ue;return s+=de(e.body,t+1,n)+ue,s+=r+ce("endcall"),s}(e,t,n);case"FilterStatement":return function(e,t,n){const r=n.repeat(t);let s=r+ce("filter","Identifier"===e.filter.type?e.filter.value:pe(e.filter))+ue;return s+=de(e.body,t+1,n)+ue,s+=r+ce("endfilter"),s}(e,t,n);case"Comment":return r+"{# "+e.value+" #}";default:return r+"{{- "+pe(e)+" -}}"}}(e,t,n)).join(ue)}function pe(e,t=-1){switch(e.type){case"SpreadExpression":return`*${pe(e.argument)}`;case"Identifier":return e.value;case"IntegerLiteral":case"FloatLiteral":return`${e.value}`;case"StringLiteral":return JSON.stringify(e.value);case"BinaryExpression":{const n=e,r=function(e){switch(e.operator.type){case"MultiplicativeBinaryOperator":return 4;case"AdditiveBinaryOperator":return 3;case"ComparisonBinaryOperator":return 2;case"Identifier":return"and"===e.operator.value?1:"in"===e.operator.value||"not in"===e.operator.value?2:0}return 0}(n),s=pe(n.left,r),i=pe(n.right,r+1),a=`${s} ${n.operator.value} ${i}`;return r<t?`(${a})`:a}case"UnaryExpression":{const t=e;return t.operator.value+("not"===t.operator.value?" ":"")+pe(t.argument,1/0)}case"CallExpression":{const t=e,n=t.args.map(pe).join(", ");return`${pe(t.callee)}(${n})`}case"MemberExpression":{const t=e;let n=pe(t.object);["Identifier","MemberExpression","CallExpression","StringLiteral","IntegerLiteral","FloatLiteral","ArrayLiteral","TupleLiteral","ObjectLiteral"].includes(t.object.type)||(n=`(${n})`);let r=pe(t.property);return t.computed||"Identifier"===t.property.type||(r=`(${r})`),t.computed?`${n}[${r}]`:`${n}.${r}`}case"FilterExpression":{const t=e,n=pe(t.operand,1/0);return"CallExpression"===t.filter.type?`${n} | ${pe(t.filter)}`:`${n} | ${t.filter.value}`}case"SelectExpression":{const t=e;return`${pe(t.lhs)} if ${pe(t.test)}`}case"TestExpression":{const t=e;return`${pe(t.operand)} is${t.negate?" not":""} ${t.test.value}`}case"ArrayLiteral":case"TupleLiteral":{const t=e.value.map(pe),n="ArrayLiteral"===e.type?"[]":"()";return`${n[0]}${t.join(", ")}${n[1]}`}case"ObjectLiteral":{const t=Array.from(e.value.entries()).map(([e,t])=>`${pe(e)}: ${pe(t)}`);return`{${t.join(", ")}}`}case"SliceExpression":{const t=e;return`${t.start?pe(t.start):""}:${t.stop?pe(t.stop):""}${t.step?`:${pe(t.step)}`:""}`}case"KeywordArgumentExpression":{const t=e;return`${t.key.value}=${pe(t.value)}`}case"Ternary":{const n=e,r=`${pe(n.trueExpr)} if ${pe(n.condition,0)} else ${pe(n.falseExpr)}`;return t>-1?`(${r})`:r}default:throw new Error(`Unknown expression type: ${e.type}`)}}var he=class{parsed;constructor(e){const t=u(e,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=R(t)}render(e){const t=new ie;if(function(e){e.set("false",!1),e.set("true",!0),e.set("none",null),e.set("raise_exception",e=>{throw new Error(e)}),e.set("range",V),e.set("strftime_now",U),e.set("True",!0),e.set("False",!1),e.set("None",null)}(t),e)for(const[n,r]of Object.entries(e))t.set(n,r);return new ae(t).run(this.parsed).value}format(e){return function(e,t="\t"){const n="number"==typeof t?" ".repeat(t):t;return de(e.body,0,n).replace(/\n$/,"")}(this.parsed,e?.indent||"\t")}}},"./src/backends/onnx.js":(e,t,n)=>{var r;n.r(t),n.d(t,{Tensor:()=>o.Tensor,createInferenceSession:()=>_,deviceToExecutionProviders:()=>m,isONNXProxy:()=>v,isONNXTensor:()=>b,runInferenceSession:()=>y});var s=n("./src/env.js"),i=n("?2ce3"),a=n("onnxruntime-web"),o=n("onnxruntime-common");const l=Object.freeze({auto:null,gpu:null,cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:{name:"webnn",deviceType:"cpu"},"webnn-npu":{name:"webnn",deviceType:"npu"},"webnn-gpu":{name:"webnn",deviceType:"gpu"},"webnn-cpu":{name:"webnn",deviceType:"cpu"}}),u=[];let c,d;const p=Symbol.for("onnxruntime");if(p in globalThis)d=globalThis[p];else if(s.apis.IS_NODE_ENV){switch(d=i??(r||(r=n.t(i,2))),process.platform){case"win32":u.push("dml");break;case"linux":"x64"===process.arch&&u.push("cuda")}u.push("cpu"),c=["cpu"]}else d=a,s.apis.IS_WEBNN_AVAILABLE&&u.push("webnn-npu","webnn-gpu","webnn-cpu","webnn"),s.apis.IS_WEBGPU_AVAILABLE&&u.push("webgpu"),u.push("wasm"),c=["wasm"];const h=d.InferenceSession;function m(e=null){if(!e)return c;switch(e){case"auto":return u;case"gpu":return u.filter(e=>["webgpu","cuda","dml","webnn-gpu"].includes(e))}if(u.includes(e))return[l[e]??e];throw new Error(`Unsupported device: "${e}". Should be one of: ${u.join(", ")}.`)}let f=null;async function _(e,t,n){f&&await f;const r=h.create(e,t);f??=r;const s=await r;return s.config=n,s}let g=qd.resolve();const w=s.apis.IS_BROWSER_ENV||s.apis.IS_WEBWORKER_ENV;async function y(e,t){const n=()=>e.run(t);return await(w?g=g.then(n):n())}function b(e){return e instanceof d.Tensor}const x=d?.env;function v(){return x?.wasm?.proxy}x?.wasm&&("undefined"!=typeof ServiceWorkerGlobalScope&&self instanceof ServiceWorkerGlobalScope||x.wasm.wasmPaths||(x.wasm.wasmPaths=`https://cdn.jsdelivr.net/npm/@huggingface/transformers@${s.env.version}/dist/`),x.wasm.proxy=!1),x?.webgpu&&(x.webgpu.powerPreference="high-performance"),s.env.backends.onnx=x},"./src/base/feature_extraction_utils.js":(e,t,n)=>{n.r(t),n.d(t,{FeatureExtractor:()=>a,validate_audio_inputs:()=>o});var r=n("./src/utils/constants.js"),s=n("./src/utils/generic.js"),i=n("./src/utils/hub.js");class a extends s.Callable{constructor(e){super(),this.config=e}static async from_pretrained(e,t={}){return new this(await(0,i.getModelJSON)(e,r.FEATURE_EXTRACTOR_NAME,!0,t))}}function o(e,t){if(!(e instanceof Float32Array||e instanceof Float64Array))throw new Error(`${t} expects input to be a Float32Array or a Float64Array, but got ${e?.constructor?.name??typeof e} instead. If using the feature extractor directly, remember to use \`read_audio(url, sampling_rate)\` to obtain the raw audio data of the file/url.`)}},"./src/base/image_processors_utils.js":(e,t,n)=>{n.r(t),n.d(t,{ImageProcessor:()=>y,center_to_corners_format:()=>d,post_process_instance_segmentation:()=>w,post_process_object_detection:()=>p,post_process_panoptic_segmentation:()=>g,post_process_semantic_segmentation:()=>h});var r=n("./src/utils/generic.js"),s=n("./src/utils/tensor.js"),i=n("./src/utils/maths.js"),a=(n("./src/utils/image.js"),n("./src/utils/core.js")),o=n("./src/utils/hub.js"),l=n("./src/utils/constants.js");function u(e,t,n=0,r=null){const s=e/t;let a=(0,i.bankers_round)(s)*t;return null!==r&&a>r&&(a=Math.floor(s)*t),a<n&&(a=Math.ceil(s)*t),a}function c([e,t],n){return[Math.max(Math.floor(e/n),1)*n,Math.max(Math.floor(t/n),1)*n]}function d([e,t,n,r]){return[e-n/2,t-r/2,e+n/2,t+r/2]}function p(e,t=.5,n=null,r=!1){const s=e.logits,a=e.pred_boxes,[o,l,u]=s.dims;if(null!==n&&n.length!==o)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let c=[];for(let e=0;e<o;++e){let o=null!==n?n[e]:null,p={boxes:[],classes:[],scores:[]},h=s[e],m=a[e];for(let e=0;e<l;++e){let n,s=h[e],a=[];if(r){n=s.sigmoid().data;for(let e=0;e<n.length;++e)n[e]>t&&a.push(e)}else{let e=(0,i.max)(s.data)[1];if(e===u-1)continue;if(n=(0,i.softmax)(s.data),n[e]<t)continue;a.push(e)}for(const t of a){let r=m[e].data;r=d(r),null!==o&&(r=r.map((e,t)=>e*o[(t+1)%2])),p.boxes.push(r),p.classes.push(t),p.scores.push(n[t])}}c.push(p)}return c}function h(e,t=null){const n=e.logits,r=n.dims[0];if(null!==t&&t.length!==r)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const i=[];for(let e=0;e<r;++e){const r=null!==t?t[e]:null;let a=n[e];null!==r&&(a=(0,s.interpolate)(a,r,"bilinear",!1));const[o,l]=r??a.dims.slice(-2),u=new s.Tensor("int32",new Int32Array(o*l),[o,l]),c=a[0].data,d=u.data;for(let e=1;e<a.dims[0];++e){const t=a[e].data;for(let n=0;n<t.length;++n)t[n]>c[n]&&(c[n]=t[n],d[n]=e)}const p=new Array(a.dims[0]);for(let e=0;e<d.length;++e){const t=d[e];p[t]=t}const h=p.filter(e=>void 0!==e);i.push({segmentation:u,labels:h})}return i}function m(e,t,n,r){const s=[],a=[],o=[];for(let l=0;l<e.dims[0];++l){const u=e[l],c=t[l],d=(0,i.max)(u.data)[1];if(d===r)continue;const p=(0,i.softmax)(u.data)[d];p>n&&(s.push(c),a.push(p),o.push(d))}return[s,a,o]}function f(e,t,n,r=.5,s=.8){const i=[];let a=0,o=0;const l=t[n].data;for(let t=0;t<e.length;++t)e[t]===n&&(i.push(t),++a),l[t]>=r&&++o;let u=a>0&&o>0;return u&&(u=a/o>s),[u,i]}function _(e,t,n,r,i,a=null,o=null){const[l,u]=o??e[0].dims,c=new s.Tensor("int32",new Int32Array(l*u),[l,u]),d=[];if(null!==o)for(let t=0;t<e.length;++t)e[t]=(0,s.interpolate)(e[t],o,"bilinear",!1);const p=new Int32Array(e[0].data.length),h=new Float32Array(e[0].data.length);for(let n=0;n<e.length;++n){let r=t[n];const s=e[n].data;for(let e=0;e<s.length;++e)s[e]*=r,s[e]>h[e]&&(p[e]=n,h[e]=s[e])}let m=0;const _=c.data;for(let s=0;s<n.length;++s){const a=n[s],[o,l]=f(p,e,s,r,i);if(o){++m;for(const e of l)_[e]=m;d.push({id:m,label_id:a,score:t[s]})}}return[c,d]}function g(e,t=.5,n=.5,r=.8,i=null,a=null){null===i&&(console.warn("`label_ids_to_fuse` unset. No instance will be fused."),i=new Set);const o=e.class_queries_logits??e.logits,l=(e.masks_queries_logits??e.pred_masks).sigmoid();let[u,c,d]=o.dims;if(d-=1,null!==a&&a.length!==u)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let p=[];for(let e=0;e<u;++e){let u=null!==a?a[e]:null,c=o[e],h=l[e],[f,g,w]=m(c,h,t,d);if(0===w.length){let[e,t]=u??h.dims.slice(-2),n=new s.Tensor("int32",new Int32Array(e*t).fill(-1),[e,t]);p.push({segmentation:n,segments_info:[]});continue}let[y,b]=_(f,g,w,n,r,i,u);p.push({segmentation:y,segments_info:b})}return p}function w(e,t=.5,n=null){throw new Error("`post_process_instance_segmentation` is not yet implemented.")}class y extends r.Callable{constructor(e){super(),this.image_mean=e.image_mean??e.mean,this.image_std=e.image_std??e.std,this.resample=e.resample??2,this.do_rescale=e.do_rescale??!0,this.rescale_factor=e.rescale_factor??1/255,this.do_normalize=e.do_normalize,this.do_thumbnail=e.do_thumbnail,this.size=e.size??e.image_size,this.do_resize=e.do_resize??void 0!==this.size,this.size_divisibility=e.size_divisibility??e.size_divisor,this.do_center_crop=e.do_center_crop,this.crop_size=e.crop_size,this.do_convert_rgb=e.do_convert_rgb??!0,this.do_crop_margin=e.do_crop_margin,this.pad_size=e.pad_size,this.do_pad=e.do_pad,this.min_pixels=e.min_pixels,this.max_pixels=e.max_pixels,this.do_pad&&!this.pad_size&&this.size&&void 0!==this.size.width&&void 0!==this.size.height&&(this.pad_size=this.size),this.do_flip_channel_order=e.do_flip_channel_order??!1,this.config=e}async thumbnail(e,t,n=2){const r=e.height,s=e.width,i=t.height,a=t.width;let o=Math.min(r,i),l=Math.min(s,a);return o===r&&l===s?e:(r>s?l=Math.floor(s*o/r):s>r&&(o=Math.floor(r*l/s)),await e.resize(l,o,{resample:n}))}async crop_margin(e,t=200){const n=e.clone().grayscale(),r=(0,i.min)(n.data)[0],s=(0,i.max)(n.data)[0]-r;if(0===s)return e;const a=t/255;let o=n.width,l=n.height,u=0,c=0;const d=n.data;for(let e=0;e<n.height;++e){const t=e*n.width;for(let i=0;i<n.width;++i)(d[t+i]-r)/s<a&&(o=Math.min(o,i),l=Math.min(l,e),u=Math.max(u,i),c=Math.max(c,e))}return await e.crop([o,l,u,c])}pad_image(e,t,n,{mode:r="constant",center:s=!1,constant_values:i=0}={}){const[o,l,u]=t;let c,d;if("number"==typeof n?(c=n,d=n):"square"===n?c=d=Math.max(o,l):(c=n.width,d=n.height),c!==l||d!==o){const n=new Float32Array(c*d*u);if(Array.isArray(i))for(let e=0;e<n.length;++e)n[e]=i[e%u];else 0!==i&&n.fill(i);const[p,h]=s?[Math.floor((c-l)/2),Math.floor((d-o)/2)]:[0,0];for(let t=0;t<o;++t){const r=(t+h)*c,s=t*l;for(let t=0;t<l;++t){const i=(r+t+p)*u,a=(s+t)*u;for(let t=0;t<u;++t)n[i+t]=e[a+t]}}if("symmetric"===r){if(s)throw new Error("`center` padding is not supported when `mode` is set to `symmetric`.");const t=o-1,r=l-1;for(let s=0;s<d;++s){const i=s*c,d=(0,a.calculateReflectOffset)(s,t)*l;for(let t=0;t<c;++t){if(s<o&&t<l)continue;const c=(i+t)*u,p=(d+(0,a.calculateReflectOffset)(t,r))*u;for(let t=0;t<u;++t)n[c+t]=e[p+t]}}}e=n,t=[d,c,u]}return[e,t]}rescale(e){for(let t=0;t<e.length;++t)e[t]=this.rescale_factor*e[t]}get_resize_output_image_size(e,t){const[n,r]=e.size;let s,i;if(this.do_thumbnail){const{height:e,width:n}=t;s=Math.min(e,n)}else Number.isInteger(t)?(s=t,i=this.config.max_size??s):void 0!==t&&(s=t.shortest_edge,i=t.longest_edge);if(void 0!==s||void 0!==i){const e=void 0===s?1:Math.max(s/n,s/r),t=n*e,a=r*e,o=void 0===i?1:Math.min(i/t,i/a);let l=Math.floor(Number((t*o).toFixed(2))),u=Math.floor(Number((a*o).toFixed(2)));return void 0!==this.size_divisibility&&([l,u]=c([l,u],this.size_divisibility)),[l,u]}if(void 0!==t&&void 0!==t.width&&void 0!==t.height){let e=t.width,s=t.height;if(this.config.keep_aspect_ratio&&this.config.ensure_multiple_of){let t=s/r,i=e/n;Math.abs(1-i)<Math.abs(1-t)?t=i:i=t,s=u(t*r,this.config.ensure_multiple_of),e=u(i*n,this.config.ensure_multiple_of)}return[e,s]}if(void 0!==this.size_divisibility)return c([n,r],this.size_divisibility);if(void 0!==this.min_pixels&&void 0!==this.max_pixels)return function(e,t,n=28,r=3136,s=1003520){if(e<n||t<n)throw new Error(`height:${e} or width:${t} must be larger than factor:${n}`);if(Math.max(e,t)/Math.min(e,t)>200)throw new Error("absolute aspect ratio must be smaller than 200, got "+Math.max(e,t)/Math.min(e,t));let i=Math.round(e/n)*n,a=Math.round(t/n)*n;if(i*a>s){const r=Math.sqrt(e*t/s);i=Math.floor(e/r/n)*n,a=Math.floor(t/r/n)*n}else if(i*a<r){const s=Math.sqrt(r/(e*t));i=Math.ceil(e*s/n)*n,a=Math.ceil(t*s/n)*n}return[i,a]}(r,n,this.config.patch_size*this.config.merge_size,this.min_pixels,this.max_pixels);throw new Error(`Could not resize image due to unsupported \`this.size\` option in config: ${JSON.stringify(t)}`)}async resize(e){const[t,n]=this.get_resize_output_image_size(e,this.size);return await e.resize(t,n,{resample:this.resample})}async preprocess(e,{do_normalize:t=null,do_pad:n=null,do_convert_rgb:r=null,do_convert_grayscale:i=null,do_flip_channel_order:a=null}={}){this.do_crop_margin&&(e=await this.crop_margin(e));const[o,l]=e.size;if(r??this.do_convert_rgb?e=e.rgb():i&&(e=e.grayscale()),this.do_resize&&(e=await this.resize(e)),this.do_thumbnail&&(e=await this.thumbnail(e,this.size,this.resample)),this.do_center_crop){let t,n;Number.isInteger(this.crop_size)?(t=this.crop_size,n=this.crop_size):(t=this.crop_size.width,n=this.crop_size.height),e=await e.center_crop(t,n)}const u=[e.height,e.width];let d=Float32Array.from(e.data),p=[e.height,e.width,e.channels];if(this.do_rescale&&this.rescale(d),t??this.do_normalize){let t=this.image_mean;Array.isArray(this.image_mean)||(t=new Array(e.channels).fill(t));let n=this.image_std;if(Array.isArray(this.image_std)||(n=new Array(e.channels).fill(t)),t.length!==e.channels||n.length!==e.channels)throw new Error(`When set to arrays, the length of \`image_mean\` (${t.length}) and \`image_std\` (${n.length}) must match the number of channels in the image (${e.channels}).`);for(let r=0;r<d.length;r+=e.channels)for(let s=0;s<e.channels;++s)d[r+s]=(d[r+s]-t[s])/n[s]}if(n??this.do_pad)if(this.pad_size){const t=this.pad_image(d,[e.height,e.width,e.channels],this.pad_size);[d,p]=t}else if(this.size_divisibility){const[e,t]=c([p[1],p[0]],this.size_divisibility);[d,p]=this.pad_image(d,p,{width:e,height:t})}if(a??this.do_flip_channel_order){if(3!==p[2])throw new Error("Flipping channel order is only supported for RGB images.");for(let e=0;e<d.length;e+=3){const t=d[e];d[e]=d[e+2],d[e+2]=t}}return{original_size:[l,o],reshaped_input_size:u,pixel_values:new s.Tensor("float32",d,p).permute(2,0,1)}}async _call(e,...t){Array.isArray(e)||(e=[e]);const n=await qd.all(e.map(e=>this.preprocess(e)));return{pixel_values:(0,s.stack)(n.map(e=>e.pixel_values),0),original_sizes:n.map(e=>e.original_size),reshaped_input_sizes:n.map(e=>e.reshaped_input_size)}}static async from_pretrained(e,t={}){return new this(await(0,o.getModelJSON)(e,l.IMAGE_PROCESSOR_NAME,!0,t))}}},"./src/base/processing_utils.js":(e,t,n)=>{n.r(t),n.d(t,{Processor:()=>a});var r=n("./src/utils/constants.js"),s=n("./src/utils/generic.js"),i=n("./src/utils/hub.js");class a extends s.Callable{static classes=["image_processor_class","tokenizer_class","feature_extractor_class"];static uses_processor_config=!1;static uses_chat_template_file=!1;constructor(e,t,n){super(),this.config=e,this.components=t,this.chat_template=n}get image_processor(){return this.components.image_processor}get tokenizer(){return this.components.tokenizer}get feature_extractor(){return this.components.feature_extractor}apply_chat_template(e,t={}){if(!this.tokenizer)throw new Error("Unable to apply chat template without a tokenizer.");return this.tokenizer.apply_chat_template(e,{tokenize:!1,chat_template:this.chat_template??void 0,...t})}batch_decode(...e){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.batch_decode(...e)}decode(...e){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.decode(...e)}async _call(e,...t){for(const n of[this.image_processor,this.feature_extractor,this.tokenizer])if(n)return n(e,...t);throw new Error("No image processor, feature extractor, or tokenizer found.")}static async from_pretrained(e,t={}){const[n,s,a]=await qd.all([this.uses_processor_config?(0,i.getModelJSON)(e,r.PROCESSOR_NAME,!0,t):{},qd.all(this.classes.filter(e=>e in this).map(async n=>{const r=await this[n].from_pretrained(e,t);return[n.replace(/_class$/,""),r]})).then(Object.fromEntries),this.uses_chat_template_file?(0,i.getModelText)(e,r.CHAT_TEMPLATE_NAME,!0,t):null]);return new this(n,s,a)}}},"./src/configs.js":(e,t,n)=>{n.r(t),n.d(t,{AutoConfig:()=>l,PretrainedConfig:()=>o,getCacheShapes:()=>a});var r=n("./src/utils/core.js"),s=n("./src/utils/hub.js");function i(e){const t={};let n={};switch(e.model_type){case"llava":case"paligemma":case"gemma3":case"florence2":case"llava_onevision":case"idefics3":case"ultravox":case"voxtral":case"smolvlm":case"gemma3n":n=i(e.text_config);break;case"moondream1":n=i(e.phi_config);break;case"musicgen":n=i(e.decoder);break;case"multi_modality":n=i(e.language_config);break;case"gpt2":case"gptj":case"jais":case"codegen":case"gpt_bigcode":t.num_heads="n_head",t.num_layers="n_layer",t.hidden_size="n_embd";break;case"gpt_neox":case"stablelm":case"opt":case"falcon":case"modernbert-decoder":t.num_heads="num_attention_heads",t.num_layers="num_hidden_layers",t.hidden_size="hidden_size";break;case"llama":case"llama4_text":case"nanochat":case"arcee":case"lfm2":case"smollm3":case"olmo":case"olmo2":case"mobilellm":case"granite":case"granitemoehybrid":case"cohere":case"mistral":case"starcoder2":case"qwen2":case"qwen2_vl":case"phi":case"phi3":case"phi3_v":case"llava_qwen2":t.num_heads="num_key_value_heads",t.num_layers="num_hidden_layers",t.hidden_size="hidden_size",t.num_attention_heads="num_attention_heads",t.dim_kv="head_dim";break;case"qwen3":case"gemma":case"gemma2":case"vaultgemma":case"gemma3_text":case"gemma3n_text":case"glm":case"helium":case"ernie4_5":t.num_heads="num_key_value_heads",t.num_layers="num_hidden_layers",t.dim_kv="head_dim";break;case"openelm":t.num_heads="num_kv_heads",t.num_layers="num_transformer_layers",t.dim_kv="head_dim";break;case"gpt_neo":case"donut-swin":t.num_heads="num_heads",t.num_layers="num_layers",t.hidden_size="hidden_size";break;case"bloom":t.num_heads="n_head",t.num_layers="n_layer",t.hidden_size="hidden_size";break;case"mpt":t.num_heads="n_heads",t.num_layers="n_layers",t.hidden_size="d_model";break;case"exaone":t.num_heads="num_key_value_heads",t.num_layers="num_layers",t.dim_kv="head_dim",t.num_attention_heads="num_attention_heads";break;case"t5":case"mt5":case"longt5":t.num_decoder_layers="num_decoder_layers",t.num_decoder_heads="num_heads",t.decoder_dim_kv="d_kv",t.num_encoder_layers="num_layers",t.num_encoder_heads="num_heads",t.encoder_dim_kv="d_kv";break;case"bart":case"mbart":case"marian":case"whisper":case"lite-whisper":case"m2m_100":case"blenderbot":case"blenderbot-small":case"florence2_language":t.num_decoder_layers="decoder_layers",t.num_decoder_heads="decoder_attention_heads",t.decoder_hidden_size="d_model",t.num_encoder_layers="encoder_layers",t.num_encoder_heads="encoder_attention_heads",t.encoder_hidden_size="d_model";break;case"speecht5":t.num_decoder_layers="decoder_layers",t.num_decoder_heads="decoder_attention_heads",t.decoder_hidden_size="hidden_size",t.num_encoder_layers="encoder_layers",t.num_encoder_heads="encoder_attention_heads",t.encoder_hidden_size="hidden_size";break;case"trocr":t.num_encoder_layers=t.num_decoder_layers="decoder_layers",t.num_encoder_heads=t.num_decoder_heads="decoder_attention_heads",t.encoder_hidden_size=t.decoder_hidden_size="d_model";break;case"musicgen_decoder":t.num_encoder_layers=t.num_decoder_layers="num_hidden_layers",t.num_encoder_heads=t.num_decoder_heads="num_attention_heads",t.encoder_hidden_size=t.decoder_hidden_size="hidden_size";break;case"moonshine":t.num_decoder_layers="decoder_num_hidden_layers",t.num_decoder_heads="decoder_num_key_value_heads",t.num_encoder_layers="encoder_num_hidden_layers",t.num_encoder_heads="encoder_num_key_value_heads",t.encoder_hidden_size=t.decoder_hidden_size="hidden_size";break;case"vision-encoder-decoder":const s=i(e.decoder),a="num_decoder_layers"in s,o=(0,r.pick)(e,["model_type","is_encoder_decoder"]);return a?(o.num_decoder_layers=s.num_decoder_layers,o.num_decoder_heads=s.num_decoder_heads,o.decoder_hidden_size=s.decoder_hidden_size,o.num_encoder_layers=s.num_encoder_layers,o.num_encoder_heads=s.num_encoder_heads,o.encoder_hidden_size=s.encoder_hidden_size):(o.num_layers=s.num_layers,o.num_heads=s.num_heads,o.hidden_size=s.hidden_size),o}const s={...n,...(0,r.pick)(e,["model_type","multi_query","is_encoder_decoder"])};for(const n in t)s[n]=e[t[n]];return s}function a(e,t){if("lfm2"===e.model_type){const n=t?.prefix??"past_key_values",r="present"===n?"present":"past",s={},{layer_types:i,num_attention_heads:a,num_key_value_heads:o,hidden_size:l,conv_L_cache:u}=e,c=l/a,d=t?.batch_size??1;for(let e=0;e<i.length;++e)if("full_attention"===i[e])for(const t of["key","value"])s[`${n}.${e}.${t}`]=[d,o,0,c];else{if("conv"!==i[e])throw new Error(`Unsupported layer type: ${i[e]}`);s[`${r}_conv.${e}`]=[d,l,u]}return s}return function(e,{prefix:t="past_key_values",batch_size:n=1}={}){const r={},s=e.normalized_config;if(s.is_encoder_decoder&&"num_encoder_heads"in s&&"num_decoder_heads"in s){const e=s.encoder_dim_kv??s.encoder_hidden_size/s.num_encoder_heads,i=s.decoder_dim_kv??s.decoder_hidden_size/s.num_decoder_heads,a=[n,s.num_encoder_heads,0,e],o=[n,s.num_decoder_heads,0,i];for(let e=0;e<s.num_decoder_layers;++e)r[`${t}.${e}.encoder.key`]=a,r[`${t}.${e}.encoder.value`]=a,r[`${t}.${e}.decoder.key`]=o,r[`${t}.${e}.decoder.value`]=o}else{const e=s.num_heads,i=s.num_layers,a=s.dim_kv??s.hidden_size/(s.num_attention_heads??e);if("falcon"===s.model_type){const s=[n*e,0,a];for(let e=0;e<i;++e)r[`${t}.${e}.key`]=s,r[`${t}.${e}.value`]=s}else if(s.multi_query){const s=[n*e,0,2*a];for(let e=0;e<i;++e)r[`${t}.${e}.key_value`]=s}else if("bloom"===s.model_type){const s=[n*e,a,0],o=[n*e,0,a];for(let e=0;e<i;++e)r[`${t}.${e}.key`]=s,r[`${t}.${e}.value`]=o}else if("openelm"===s.model_type)for(let s=0;s<i;++s){const i=[n,e[s],0,a];r[`${t}.${s}.key`]=i,r[`${t}.${s}.value`]=i}else{const s=[n,e,0,a];for(let e=0;e<i;++e)r[`${t}.${e}.key`]=s,r[`${t}.${e}.value`]=s}}return r}(e,t)}class o{model_type=null;is_encoder_decoder=!1;max_position_embeddings;"transformers.js_config";constructor(e){Object.assign(this,e),this.normalized_config=i(this)}static async from_pretrained(e,{progress_callback:t=null,config:n=null,cache_dir:r=null,local_files_only:i=!1,revision:a="main"}={}){!n||n instanceof o||(n=new o(n));const l=n??await async function(e,t){return await(0,s.getModelJSON)(e,"config.json",!0,t)}(e,{progress_callback:t,config:n,cache_dir:r,local_files_only:i,revision:a});return new this(l)}}class l{static async from_pretrained(...e){return o.from_pretrained(...e)}}},"./src/env.js":(e,t,n)=>{n.r(t),n.d(t,{apis:()=>_,env:()=>x});var r=n("?db59"),s=n("?383f"),i=n("?fa4b");const a="undefined"!=typeof window&&void 0!==window.document,o="undefined"!=typeof self&&["DedicatedWorkerGlobalScope","ServiceWorkerGlobalScope","SharedWorkerGlobalScope"].includes(self.constructor?.name),l="undefined"!=typeof self&&"caches"in self,u="undefined"!=typeof navigator&&"gpu"in navigator,c="undefined"!=typeof navigator&&"ml"in navigator,d="undefined"!=typeof process,p=d&&"node"===process?.release?.name,h=!v(r),m=!v(s),f=void 0!==globalThis.Deno,_=(globalThis.Bun,Object.freeze({IS_BROWSER_ENV:a,IS_WEBWORKER_ENV:o,IS_WEB_CACHE_AVAILABLE:l,IS_WEBGPU_AVAILABLE:u,IS_WEBNN_AVAILABLE:c,IS_PROCESS_AVAILABLE:d,IS_NODE_ENV:p,IS_FS_AVAILABLE:h,IS_PATH_AVAILABLE:m})),g=h&&m;let w="./";if(g){const e=Object({}).url;e?w=s.dirname(s.dirname(i.fileURLToPath(e))):"undefined"!=typeof __dirname&&(w=s.dirname(__dirname))}const y=g?s.join(w,"/.cache/"):null,b="/models/",x={version:"3.7.6",backends:{onnx:{}},allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!(a||o),localModelPath:g?s.join(w,b):b,useFS:h,useBrowserCache:l&&!f,useFSCache:h,cacheDir:y,useCustomCache:!1,customCache:null};function v(e){return 0===Object.keys(e).length}},"./src/generation/configuration_utils.js":(e,t,n)=>{n.r(t),n.d(t,{GenerationConfig:()=>s});var r=n("./src/utils/core.js");class s{max_length=20;max_new_tokens=null;min_length=0;min_new_tokens=null;early_stopping=!1;max_time=null;do_sample=!1;num_beams=1;num_beam_groups=1;penalty_alpha=null;use_cache=!0;temperature=1;top_k=50;top_p=1;typical_p=1;epsilon_cutoff=0;eta_cutoff=0;diversity_penalty=0;repetition_penalty=1;encoder_repetition_penalty=1;length_penalty=1;no_repeat_ngram_size=0;bad_words_ids=null;force_words_ids=null;renormalize_logits=!1;constraints=null;forced_bos_token_id=null;forced_eos_token_id=null;remove_invalid_values=!1;exponential_decay_length_penalty=null;suppress_tokens=null;streamer=null;begin_suppress_tokens=null;forced_decoder_ids=null;guidance_scale=null;num_return_sequences=1;output_attentions=!1;output_hidden_states=!1;output_scores=!1;return_dict_in_generate=!1;pad_token_id=null;bos_token_id=null;eos_token_id=null;encoder_no_repeat_ngram_size=0;decoder_start_token_id=null;generation_kwargs={};constructor(e){Object.assign(this,(0,r.pick)(e,Object.getOwnPropertyNames(this)))}}},"./src/generation/logits_process.js":(e,t,n)=>{n.r(t),n.d(t,{ClassifierFreeGuidanceLogitsProcessor:()=>g,ForcedBOSTokenLogitsProcessor:()=>l,ForcedEOSTokenLogitsProcessor:()=>u,LogitsProcessor:()=>i,LogitsProcessorList:()=>o,LogitsWarper:()=>a,MinLengthLogitsProcessor:()=>m,MinNewTokensLengthLogitsProcessor:()=>f,NoBadWordsLogitsProcessor:()=>_,NoRepeatNGramLogitsProcessor:()=>p,RepetitionPenaltyLogitsProcessor:()=>h,SuppressTokensAtBeginLogitsProcessor:()=>c,TemperatureLogitsWarper:()=>w,TopKLogitsWarper:()=>b,TopPLogitsWarper:()=>y,WhisperTimeStampLogitsProcessor:()=>d});var r=n("./src/utils/generic.js"),s=(n("./src/utils/tensor.js"),n("./src/utils/maths.js"));class i extends r.Callable{_call(e,t){throw Error("`_call` should be implemented in a subclass")}}class a extends r.Callable{_call(e,t){throw Error("`_call` should be implemented in a subclass")}}class o extends r.Callable{constructor(){super(),this.processors=[]}push(e){this.processors.push(e)}extend(e){this.processors.push(...e)}_call(e,t){let n=t;for(const t of this.processors)n=t(e,n);return n}[Symbol.iterator](){return this.processors.values()}}class l extends i{constructor(e){super(),this.bos_token_id=e}_call(e,t){for(let n=0;n<e.length;++n)if(1===e[n].length){const e=t[n].data;e.fill(-1/0),e[this.bos_token_id]=0}return t}}class u extends i{constructor(e,t){super(),this.max_length=e,this.eos_token_id=Array.isArray(t)?t:[t]}_call(e,t){for(let n=0;n<e.length;++n)if(e[n].length===this.max_length-1){const e=t[n].data;e.fill(-1/0);for(const t of this.eos_token_id)e[t]=0}return t}}class c extends i{constructor(e,t){super(),this.begin_suppress_tokens=e,this.begin_index=t}_call(e,t){for(let n=0;n<e.length;++n)if(e[n].length===this.begin_index){const e=t[n].data;for(const t of this.begin_suppress_tokens)e[t]=-1/0}return t}}class d extends i{constructor(e,t){super(),this.eos_token_id=Array.isArray(e.eos_token_id)?e.eos_token_id[0]:e.eos_token_id,this.no_timestamps_token_id=e.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=t.length,t.at(-1)===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=e.max_initial_timestamp_index}_call(e,t){for(let n=0;n<e.length;++n){const r=t[n].data;if(r[this.no_timestamps_token_id]=-1/0,e[n].length===this.begin_index-1){r.fill(-1/0),r[this.timestamp_begin]=0;continue}const i=e[n].slice(this.begin_index),a=i.length>=1&&i[i.length-1]>=this.timestamp_begin,o=i.length<2||i[i.length-2]>=this.timestamp_begin;if(a&&(o?r.subarray(this.timestamp_begin).fill(-1/0):r.subarray(0,this.eos_token_id).fill(-1/0)),e[n].length===this.begin_index&&null!==this.max_initial_timestamp_index){const e=this.timestamp_begin+this.max_initial_timestamp_index;r.subarray(e+1).fill(-1/0)}const l=(0,s.log_softmax)(r);Math.log(l.subarray(this.timestamp_begin).map(Math.exp).reduce((e,t)=>e+t))>(0,s.max)(l.subarray(0,this.timestamp_begin))[0]&&r.subarray(0,this.timestamp_begin).fill(-1/0)}return t}}class p extends i{constructor(e){super(),this.no_repeat_ngram_size=e}getNgrams(e){const t=e.length,n=[];for(let r=0;r<t+1-this.no_repeat_ngram_size;++r){const t=[];for(let n=0;n<this.no_repeat_ngram_size;++n)t.push(e[r+n]);n.push(t.map(Number))}const r=new Map;for(const e of n){const t=e.slice(0,e.length-1),n=JSON.stringify(t),s=r.get(n)??[];s.push(e[e.length-1]),r.set(n,s)}return r}getGeneratedNgrams(e,t){const n=t.slice(t.length+1-this.no_repeat_ngram_size,t.length);return e.get(JSON.stringify(n.map(Number)))??[]}calcBannedNgramTokens(e){if(e.length+1<this.no_repeat_ngram_size)return[];{const t=this.getNgrams(e);return this.getGeneratedNgrams(t,e)}}_call(e,t){for(let n=0;n<e.length;++n){const r=t[n].data,s=this.calcBannedNgramTokens(e[n]);for(const e of s)r[e]=-1/0}return t}}class h extends i{constructor(e){super(),this.penalty=e}_call(e,t){for(let n=0;n<e.length;++n){const r=t[n].data;for(const t of new Set(e[n])){const e=Number(t);r[e]<0?r[e]*=this.penalty:r[e]/=this.penalty}}return t}}class m extends i{constructor(e,t){super(),this.min_length=e,this.eos_token_id=Array.isArray(t)?t:[t]}_call(e,t){for(let n=0;n<e.length;++n)if(e[n].length<this.min_length){const e=t[n].data;for(const t of this.eos_token_id)e[t]=-1/0}return t}}class f extends i{constructor(e,t,n){super(),this.prompt_length_to_skip=e,this.min_new_tokens=t,this.eos_token_id=Array.isArray(n)?n:[n]}_call(e,t){for(let n=0;n<e.length;++n)if(e[n].length-this.prompt_length_to_skip<this.min_new_tokens){const e=t[n].data;for(const t of this.eos_token_id)e[t]=-1/0}return t}}class _ extends i{constructor(e,t){super(),this.bad_words_ids=e,this.eos_token_id=Array.isArray(t)?t:[t]}_call(e,t){for(let n=0;n<e.length;++n){const r=t[n].data,s=e[n];for(const e of this.bad_words_ids){if(s.length<e.length-1)continue;let t=!0;for(let n=1;n<=e.length-1;++n)if(e.at(-n-1)!=s.at(-n)){t=!1;break}t&&(r[e.at(-1)]=-1/0)}}return t}}class g extends i{constructor(e){if(super(),e<=1)throw new Error(`Require guidance scale >1 to use the classifier free guidance processor, got guidance scale ${e}.`);this.guidance_scale=e}_call(e,t){if(t.dims[0]!==2*e.length)throw new Error(`Logits should have twice the batch size of the input ids, the first half of batches corresponding to the conditional inputs, and the second half of batches corresponding to the unconditional inputs. Got batch size ${t.dims[0]} for the logits and ${e.length} for the input ids.`);const n=e.length,r=t.slice([0,n],null),s=t.slice([n,t.dims[0]],null);for(let e=0;e<s.data.length;++e)s.data[e]+=(r.data[e]-s.data[e])*this.guidance_scale;return s}}class w extends a{constructor(e){if(super(),"number"!=typeof e||e<=0){let t=`\`temperature\` (=${e}) must be a strictly positive float, otherwise your next token scores will be invalid.`;0===e&&(t+=" If you're looking for greedy decoding strategies, set `do_sample=false`.")}this.temperature=e}_call(e,t){const n=t.data;for(let e=0;e<n.length;++e)n[e]/=this.temperature;return t}}class y extends a{constructor(e,{filter_value:t=-1/0,min_tokens_to_keep:n=1}={}){if(super(),e<0||e>1)throw new Error(`\`top_p\` must be a float > 0 and < 1, but is ${e}`);if(!Number.isInteger(n)||n<1)throw new Error(`\`min_tokens_to_keep\` must be a positive integer, but is ${n}`);this.top_p=e,this.filter_value=t,this.min_tokens_to_keep=n}}class b extends a{constructor(e,{filter_value:t=-1/0,min_tokens_to_keep:n=1}={}){if(super(),!Number.isInteger(e)||e<0)throw new Error(`\`top_k\` must be a positive integer, but is ${e}`);this.top_k=Math.max(e,n),this.filter_value=t}}},"./src/generation/logits_sampler.js":(e,t,n)=>{n.r(t),n.d(t,{LogitsSampler:()=>a});var r=n("./src/utils/generic.js"),s=n("./src/utils/tensor.js"),i=n("./src/utils/maths.js");n("./src/generation/configuration_utils.js");class a extends r.Callable{constructor(e){super(),this.generation_config=e}async _call(e){return this.sample(e)}async sample(e){throw Error("sample should be implemented in subclasses.")}getLogits(e,t){let n=e.dims.at(-1),r=e.data;if(-1===t)r=r.slice(-n);else{let e=t*n;r=r.slice(e,e+n)}return r}randomSelect(e){let t=0;for(let n=0;n<e.length;++n)t+=e[n];let n=Math.random()*t;for(let t=0;t<e.length;++t)if(n-=e[t],n<=0)return t;return 0}static getSampler(e){if(e.do_sample)return new l(e);if(e.num_beams>1)return new u(e);if(e.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${e.num_return_sequences}.`);return new o(e)}}class o extends a{async sample(e){const t=(0,i.max)(e.data)[1];return[[BigInt(t),0]]}}class l extends a{async sample(e){let t=e.dims.at(-1);this.generation_config.top_k>0&&(t=Math.min(this.generation_config.top_k,t));const[n,r]=await(0,s.topk)(e,t),a=(0,i.softmax)(n.data);return Array.from({length:this.generation_config.num_beams},()=>{const e=this.randomSelect(a);return[r.data[e],Math.log(a[e])]})}}class u extends a{async sample(e){let t=e.dims.at(-1);this.generation_config.top_k>0&&(t=Math.min(this.generation_config.top_k,t));const[n,r]=await(0,s.topk)(e,t),a=(0,i.softmax)(n.data);return Array.from({length:this.generation_config.num_beams},(e,t)=>[r.data[t],Math.log(a[t])])}}},"./src/generation/stopping_criteria.js":(e,t,n)=>{n.r(t),n.d(t,{EosTokenCriteria:()=>o,InterruptableStoppingCriteria:()=>l,MaxLengthCriteria:()=>a,StoppingCriteria:()=>s,StoppingCriteriaList:()=>i});var r=n("./src/utils/generic.js");class s extends r.Callable{_call(e,t){throw Error("StoppingCriteria needs to be subclassed")}}class i extends r.Callable{constructor(){super(),this.criteria=[]}push(e){this.criteria.push(e)}extend(e){e instanceof i?e=e.criteria:e instanceof s&&(e=[e]),this.criteria.push(...e)}_call(e,t){const n=new Array(e.length).fill(!1);for(const r of this.criteria){const s=r(e,t);for(let e=0;e<n.length;++e)n[e]||=s[e]}return n}[Symbol.iterator](){return this.criteria.values()}}class a extends s{constructor(e,t=null){super(),this.max_length=e,this.max_position_embeddings=t}_call(e){return e.map(e=>e.length>=this.max_length)}}class o extends s{constructor(e){super(),Array.isArray(e)||(e=[e]),this.eos_token_id=e}_call(e,t){return e.map(e=>{const t=e.at(-1);return this.eos_token_id.some(e=>t==e)})}}class l extends s{constructor(){super(),this.interrupted=!1}interrupt(){this.interrupted=!0}reset(){this.interrupted=!1}_call(e,t){return new Array(e.length).fill(this.interrupted)}}},"./src/generation/streamers.js":(e,t,n)=>{n.r(t),n.d(t,{BaseStreamer:()=>a,TextStreamer:()=>l,WhisperTextStreamer:()=>u});var r=n("./src/utils/core.js"),s=n("./src/tokenizers.js"),i=n("./src/env.js");class a{put(e){throw Error("Not implemented")}end(){throw Error("Not implemented")}}const o=i.apis.IS_PROCESS_AVAILABLE?e=>process.stdout.write(e):e=>console.log(e);class l extends a{constructor(e,{skip_prompt:t=!1,callback_function:n=null,token_callback_function:r=null,skip_special_tokens:s=!0,decode_kwargs:i={},...a}={}){super(),this.tokenizer=e,this.skip_prompt=t,this.callback_function=n??o,this.token_callback_function=r,this.decode_kwargs={skip_special_tokens:s,...i,...a},this.token_cache=[],this.print_len=0,this.next_tokens_are_prompt=!0}put(e){if(e.length>1)throw Error("TextStreamer only supports batch size of 1");const t=this.next_tokens_are_prompt;if(t&&(this.next_tokens_are_prompt=!1,this.skip_prompt))return;const n=e[0];this.token_callback_function?.(n),this.token_cache=(0,r.mergeArrays)(this.token_cache,n);const i=this.tokenizer.decode(this.token_cache,this.decode_kwargs);let a;t||i.endsWith("\n")?(a=i.slice(this.print_len),this.token_cache=[],this.print_len=0):i.length>0&&(0,s.is_chinese_char)(i.charCodeAt(i.length-1))?(a=i.slice(this.print_len),this.print_len+=a.length):(a=i.slice(this.print_len,i.lastIndexOf(" ")+1),this.print_len+=a.length),this.on_finalized_text(a,!1)}end(){let e;this.token_cache.length>0?(e=this.tokenizer.decode(this.token_cache,this.decode_kwargs).slice(this.print_len),this.token_cache=[],this.print_len=0):e="",this.next_tokens_are_prompt=!0,this.on_finalized_text(e,!0)}on_finalized_text(e,t){e.length>0&&this.callback_function?.(e),t&&this.callback_function===o&&i.apis.IS_PROCESS_AVAILABLE&&this.callback_function?.("\n")}}class u extends l{constructor(e,{skip_prompt:t=!1,callback_function:n=null,token_callback_function:r=null,on_chunk_start:s=null,on_chunk_end:i=null,on_finalize:a=null,time_precision:o=.02,skip_special_tokens:l=!0,decode_kwargs:u={}}={}){super(e,{skip_prompt:t,skip_special_tokens:l,callback_function:n,token_callback_function:r,decode_kwargs:u}),this.timestamp_begin=e.timestamp_begin,this.on_chunk_start=s,this.on_chunk_end=i,this.on_finalize=a,this.time_precision=o,this.waiting_for_timestamp=!1}put(e){if(e.length>1)throw Error("WhisperTextStreamer only supports batch size of 1");const t=e[0];if(1===t.length){const e=Number(t[0])-this.timestamp_begin;if(e>=0){const n=e*this.time_precision;return this.waiting_for_timestamp?this.on_chunk_end?.(n):this.on_chunk_start?.(n),this.waiting_for_timestamp=!this.waiting_for_timestamp,void this.token_callback_function?.(t)}}return super.put(e)}end(){super.end(),this.on_finalize?.()}}},"./src/models.js":(e,t,n)=>{n.r(t),n.d(t,{ASTForAudioClassification:()=>bn,ASTModel:()=>yn,ASTPreTrainedModel:()=>wn,AlbertForMaskedLM:()=>Ct,AlbertForQuestionAnswering:()=>St,AlbertForSequenceClassification:()=>$t,AlbertModel:()=>Tt,AlbertPreTrainedModel:()=>kt,ArceeForCausalLM:()=>Rr,ArceeModel:()=>jr,ArceePreTrainedModel:()=>Nr,AutoModel:()=>Fc,AutoModelForAudioClassification:()=>Yc,AutoModelForAudioFrameClassification:()=>ed,AutoModelForAudioTextToText:()=>ud,AutoModelForCTC:()=>Jc,AutoModelForCausalLM:()=>jc,AutoModelForDepthEstimation:()=>sd,AutoModelForDocumentQuestionAnswering:()=>td,AutoModelForImageClassification:()=>Uc,AutoModelForImageFeatureExtraction:()=>od,AutoModelForImageMatting:()=>nd,AutoModelForImageSegmentation:()=>qc,AutoModelForImageTextToText:()=>ld,AutoModelForImageToImage:()=>rd,AutoModelForMaskGeneration:()=>Xc,AutoModelForMaskedLM:()=>Rc,AutoModelForNormalEstimation:()=>id,AutoModelForObjectDetection:()=>Kc,AutoModelForPoseEstimation:()=>ad,AutoModelForQuestionAnswering:()=>Vc,AutoModelForSemanticSegmentation:()=>Wc,AutoModelForSeq2SeqLM:()=>Lc,AutoModelForSequenceClassification:()=>zc,AutoModelForSpeechSeq2Seq:()=>Bc,AutoModelForTextToSpectrogram:()=>Dc,AutoModelForTextToWaveform:()=>Nc,AutoModelForTokenClassification:()=>Oc,AutoModelForUniversalSegmentation:()=>Hc,AutoModelForVision2Seq:()=>Gc,AutoModelForXVector:()=>Zc,AutoModelForZeroShotObjectDetection:()=>Qc,BartForConditionalGeneration:()=>jt,BartForSequenceClassification:()=>Rt,BartModel:()=>Nt,BartPretrainedModel:()=>Dt,BaseModelOutput:()=>W,BeitForImageClassification:()=>Vi,BeitModel:()=>Ri,BeitPreTrainedModel:()=>ji,BertForMaskedLM:()=>Q,BertForQuestionAnswering:()=>Y,BertForSequenceClassification:()=>X,BertForTokenClassification:()=>J,BertModel:()=>K,BertPreTrainedModel:()=>H,BlenderbotForConditionalGeneration:()=>Qt,BlenderbotModel:()=>Kt,BlenderbotPreTrainedModel:()=>Ht,BlenderbotSmallForConditionalGeneration:()=>Yt,BlenderbotSmallModel:()=>Jt,BlenderbotSmallPreTrainedModel:()=>Xt,BloomForCausalLM:()=>Ys,BloomModel:()=>Js,BloomPreTrainedModel:()=>Xs,CLIPModel:()=>Wn,CLIPPreTrainedModel:()=>qn,CLIPSegForImageSegmentation:()=>ur,CLIPSegModel:()=>lr,CLIPSegPreTrainedModel:()=>or,CLIPTextModel:()=>Hn,CLIPTextModelWithProjection:()=>Kn,CLIPVisionModel:()=>Qn,CLIPVisionModelWithProjection:()=>Xn,CamembertForMaskedLM:()=>Oe,CamembertForQuestionAnswering:()=>De,CamembertForSequenceClassification:()=>Le,CamembertForTokenClassification:()=>Be,CamembertModel:()=>ze,CamembertPreTrainedModel:()=>Fe,CausalLMOutput:()=>_d,CausalLMOutputWithPast:()=>gd,ChineseCLIPModel:()=>nr,ChineseCLIPPreTrainedModel:()=>tr,ClapAudioModelWithProjection:()=>Ll,ClapModel:()=>zl,ClapPreTrainedModel:()=>Fl,ClapTextModelWithProjection:()=>Ol,CodeGenForCausalLM:()=>Pr,CodeGenModel:()=>Er,CodeGenPreTrainedModel:()=>Cr,CohereForCausalLM:()=>bs,CohereModel:()=>ys,CoherePreTrainedModel:()=>ws,ConvBertForMaskedLM:()=>Me,ConvBertForQuestionAnswering:()=>$e,ConvBertForSequenceClassification:()=>ke,ConvBertForTokenClassification:()=>Te,ConvBertModel:()=>ve,ConvBertPreTrainedModel:()=>xe,ConvNextForImageClassification:()=>to,ConvNextModel:()=>eo,ConvNextPreTrainedModel:()=>Za,ConvNextV2ForImageClassification:()=>so,ConvNextV2Model:()=>ro,ConvNextV2PreTrainedModel:()=>no,DFineForObjectDetection:()=>ua,DFineModel:()=>la,DFinePreTrainedModel:()=>oa,DINOv3ConvNextModel:()=>fo,DINOv3ConvNextPreTrainedModel:()=>mo,DINOv3ViTModel:()=>ho,DINOv3ViTPreTrainedModel:()=>po,DPTForDepthEstimation:()=>Ia,DPTModel:()=>Aa,DPTPreTrainedModel:()=>Pa,DacDecoderModel:()=>Vu,DacDecoderOutput:()=>Nu,DacEncoderModel:()=>Ru,DacEncoderOutput:()=>Du,DacModel:()=>ju,DacPreTrainedModel:()=>Bu,DebertaForMaskedLM:()=>Re,DebertaForQuestionAnswering:()=>Ue,DebertaForSequenceClassification:()=>Ve,DebertaForTokenClassification:()=>Ge,DebertaModel:()=>je,DebertaPreTrainedModel:()=>Ne,DebertaV2ForMaskedLM:()=>He,DebertaV2ForQuestionAnswering:()=>Xe,DebertaV2ForSequenceClassification:()=>Ke,DebertaV2ForTokenClassification:()=>Qe,DebertaV2Model:()=>We,DebertaV2PreTrainedModel:()=>qe,DecisionTransformerModel:()=>_u,DecisionTransformerPreTrainedModel:()=>fu,DeiTForImageClassification:()=>_a,DeiTModel:()=>fa,DeiTPreTrainedModel:()=>ma,DepthAnythingForDepthEstimation:()=>za,DepthAnythingPreTrainedModel:()=>Fa,DepthProForDepthEstimation:()=>ja,DepthProPreTrainedModel:()=>Na,DetrForObjectDetection:()=>qi,DetrForSegmentation:()=>Wi,DetrModel:()=>Ui,DetrObjectDetectionOutput:()=>Hi,DetrPreTrainedModel:()=>Gi,DetrSegmentationOutput:()=>Ki,Dinov2ForImageClassification:()=>oo,Dinov2Model:()=>ao,Dinov2PreTrainedModel:()=>io,Dinov2WithRegistersForImageClassification:()=>co,Dinov2WithRegistersModel:()=>uo,Dinov2WithRegistersPreTrainedModel:()=>lo,DistilBertForMaskedLM:()=>nt,DistilBertForQuestionAnswering:()=>tt,DistilBertForSequenceClassification:()=>Ze,DistilBertForTokenClassification:()=>et,DistilBertModel:()=>Ye,DistilBertPreTrainedModel:()=>Je,DonutSwinModel:()=>Ya,DonutSwinPreTrainedModel:()=>Ja,EfficientNetForImageClassification:()=>Kl,EfficientNetModel:()=>Hl,EfficientNetPreTrainedModel:()=>Wl,ElectraForMaskedLM:()=>Ee,ElectraForQuestionAnswering:()=>Ie,ElectraForSequenceClassification:()=>Pe,ElectraForTokenClassification:()=>Ae,ElectraModel:()=>Ce,ElectraPreTrainedModel:()=>Se,Ernie4_5_ForCausalLM:()=>$l,Ernie4_5_Model:()=>Tl,Ernie4_5_PretrainedModel:()=>kl,EsmForMaskedLM:()=>it,EsmForSequenceClassification:()=>at,EsmForTokenClassification:()=>ot,EsmModel:()=>st,EsmPreTrainedModel:()=>rt,ExaoneForCausalLM:()=>ns,ExaoneModel:()=>ts,ExaonePreTrainedModel:()=>es,FalconForCausalLM:()=>Il,FalconModel:()=>Al,FalconPreTrainedModel:()=>Pl,FastViTForImageClassification:()=>Ti,FastViTModel:()=>ki,FastViTPreTrainedModel:()=>Mi,Florence2ForConditionalGeneration:()=>zn,Florence2PreTrainedModel:()=>Fn,GLPNForDepthEstimation:()=>Xa,GLPNModel:()=>Qa,GLPNPreTrainedModel:()=>Ka,GPT2LMHeadModel:()=>pr,GPT2Model:()=>dr,GPT2PreTrainedModel:()=>cr,GPTBigCodeForCausalLM:()=>Sr,GPTBigCodeModel:()=>$r,GPTBigCodePreTrainedModel:()=>Tr,GPTJForCausalLM:()=>kr,GPTJModel:()=>Mr,GPTJPreTrainedModel:()=>vr,GPTNeoForCausalLM:()=>wr,GPTNeoModel:()=>gr,GPTNeoPreTrainedModel:()=>_r,GPTNeoXForCausalLM:()=>xr,GPTNeoXModel:()=>br,GPTNeoXPreTrainedModel:()=>yr,Gemma2ForCausalLM:()=>$s,Gemma2Model:()=>Ts,Gemma2PreTrainedModel:()=>ks,Gemma3ForCausalLM:()=>Is,Gemma3Model:()=>As,Gemma3PreTrainedModel:()=>Ps,Gemma3nForConditionalGeneration:()=>Nn,Gemma3nPreTrainedModel:()=>Dn,GemmaForCausalLM:()=>Ms,GemmaModel:()=>vs,GemmaPreTrainedModel:()=>xs,GlmForCausalLM:()=>Zr,GlmModel:()=>Yr,GlmPreTrainedModel:()=>Jr,GraniteForCausalLM:()=>ms,GraniteModel:()=>hs,GraniteMoeHybridForCausalLM:()=>gs,GraniteMoeHybridModel:()=>_s,GraniteMoeHybridPreTrainedModel:()=>fs,GranitePreTrainedModel:()=>ps,GroundingDinoForObjectDetection:()=>go,GroundingDinoPreTrainedModel:()=>_o,GroupViTModel:()=>vi,GroupViTPreTrainedModel:()=>xi,HeliumForCausalLM:()=>Xr,HeliumModel:()=>Qr,HeliumPreTrainedModel:()=>Kr,HieraForImageClassification:()=>ya,HieraModel:()=>wa,HieraPreTrainedModel:()=>ga,HubertForCTC:()=>sl,HubertForSequenceClassification:()=>il,HubertModel:()=>rl,HubertPreTrainedModel:()=>nl,IJepaForImageClassification:()=>ci,IJepaModel:()=>ui,IJepaPreTrainedModel:()=>li,Idefics3ForConditionalGeneration:()=>Rn,Idefics3PreTrainedModel:()=>jn,ImageMattingOutput:()=>wd,JAISLMHeadModel:()=>fr,JAISModel:()=>mr,JAISPreTrainedModel:()=>hr,JinaCLIPModel:()=>sr,JinaCLIPPreTrainedModel:()=>rr,JinaCLIPTextModel:()=>ir,JinaCLIPVisionModel:()=>ar,Lfm2ForCausalLM:()=>Ur,Lfm2Model:()=>Gr,Lfm2PreTrainedModel:()=>Vr,LiteWhisperForConditionalGeneration:()=>kn,Llama4ForCausalLM:()=>Or,Llama4PreTrainedModel:()=>zr,LlamaForCausalLM:()=>Fr,LlamaModel:()=>Ir,LlamaPreTrainedModel:()=>Ar,LlavaForConditionalGeneration:()=>Pn,LlavaOnevisionForConditionalGeneration:()=>An,LlavaPreTrainedModel:()=>En,LlavaQwen2ForCausalLM:()=>Bn,LongT5ForConditionalGeneration:()=>zt,LongT5Model:()=>Ft,LongT5PreTrainedModel:()=>It,M2M100ForConditionalGeneration:()=>Po,M2M100Model:()=>Eo,M2M100PreTrainedModel:()=>Co,MBartForCausalLM:()=>Wt,MBartForConditionalGeneration:()=>Ut,MBartForSequenceClassification:()=>qt,MBartModel:()=>Gt,MBartPreTrainedModel:()=>Vt,MPNetForMaskedLM:()=>ft,MPNetForQuestionAnswering:()=>wt,MPNetForSequenceClassification:()=>_t,MPNetForTokenClassification:()=>gt,MPNetModel:()=>mt,MPNetPreTrainedModel:()=>ht,MT5ForConditionalGeneration:()=>Bt,MT5Model:()=>Lt,MT5PreTrainedModel:()=>Ot,MarianMTModel:()=>So,MarianModel:()=>$o,MarianPreTrainedModel:()=>To,MaskFormerForInstanceSegmentation:()=>Ha,MaskFormerModel:()=>Wa,MaskFormerPreTrainedModel:()=>qa,MaskedLMOutput:()=>md,Metric3DForDepthEstimation:()=>Va,Metric3DPreTrainedModel:()=>Ra,Metric3Dv2ForDepthEstimation:()=>Ua,Metric3Dv2PreTrainedModel:()=>Ga,MgpstrForSceneTextRecognition:()=>xu,MgpstrModelOutput:()=>yu,MgpstrPreTrainedModel:()=>bu,MimiDecoderModel:()=>Lu,MimiDecoderOutput:()=>Fu,MimiEncoderModel:()=>Ou,MimiEncoderOutput:()=>Iu,MimiModel:()=>zu,MimiPreTrainedModel:()=>Au,MistralForCausalLM:()=>Ml,MistralModel:()=>vl,MistralPreTrainedModel:()=>xl,MobileBertForMaskedLM:()=>ct,MobileBertForQuestionAnswering:()=>pt,MobileBertForSequenceClassification:()=>dt,MobileBertModel:()=>ut,MobileBertPreTrainedModel:()=>lt,MobileLLMForCausalLM:()=>is,MobileLLMModel:()=>ss,MobileLLMPreTrainedModel:()=>rs,MobileNetV1ForImageClassification:()=>tu,MobileNetV1ForSemanticSegmentation:()=>nu,MobileNetV1Model:()=>eu,MobileNetV1PreTrainedModel:()=>Zl,MobileNetV2ForImageClassification:()=>iu,MobileNetV2ForSemanticSegmentation:()=>au,MobileNetV2Model:()=>su,MobileNetV2PreTrainedModel:()=>ru,MobileNetV3ForImageClassification:()=>uu,MobileNetV3ForSemanticSegmentation:()=>cu,MobileNetV3Model:()=>lu,MobileNetV3PreTrainedModel:()=>ou,MobileNetV4ForImageClassification:()=>hu,MobileNetV4ForSemanticSegmentation:()=>mu,MobileNetV4Model:()=>pu,MobileNetV4PreTrainedModel:()=>du,MobileViTForImageClassification:()=>Pi,MobileViTModel:()=>Ei,MobileViTPreTrainedModel:()=>Ci,MobileViTV2ForImageClassification:()=>Fi,MobileViTV2Model:()=>Ii,MobileViTV2PreTrainedModel:()=>Ai,ModelOutput:()=>q,ModernBertDecoderForCausalLM:()=>pe,ModernBertDecoderModel:()=>de,ModernBertDecoderPreTrainedModel:()=>ce,ModernBertForMaskedLM:()=>oe,ModernBertForSequenceClassification:()=>le,ModernBertForTokenClassification:()=>ue,ModernBertModel:()=>ae,ModernBertPreTrainedModel:()=>ie,Moondream1ForConditionalGeneration:()=>In,MoonshineForConditionalGeneration:()=>Sn,MoonshineModel:()=>$n,MoonshinePreTrainedModel:()=>Tn,MptForCausalLM:()=>ti,MptModel:()=>ei,MptPreTrainedModel:()=>Zs,MultiModalityCausalLM:()=>wu,MultiModalityPreTrainedModel:()=>gu,MusicgenForCausalLM:()=>Jl,MusicgenForConditionalGeneration:()=>Yl,MusicgenModel:()=>Xl,MusicgenPreTrainedModel:()=>Ql,NanoChatForCausalLM:()=>Dr,NanoChatModel:()=>Br,NanoChatPreTrainedModel:()=>Lr,NeoBertForMaskedLM:()=>te,NeoBertForQuestionAnswering:()=>se,NeoBertForSequenceClassification:()=>ne,NeoBertForTokenClassification:()=>re,NeoBertModel:()=>ee,NeoBertPreTrainedModel:()=>Z,NomicBertModel:()=>me,NomicBertPreTrainedModel:()=>he,OPTForCausalLM:()=>si,OPTModel:()=>ri,OPTPreTrainedModel:()=>ni,Olmo2ForCausalLM:()=>ds,Olmo2Model:()=>cs,Olmo2PreTrainedModel:()=>us,OlmoForCausalLM:()=>ls,OlmoModel:()=>os,OlmoPreTrainedModel:()=>as,OpenELMForCausalLM:()=>Os,OpenELMModel:()=>zs,OpenELMPreTrainedModel:()=>Fs,OwlViTForObjectDetection:()=>Li,OwlViTModel:()=>Oi,OwlViTPreTrainedModel:()=>zi,Owlv2ForObjectDetection:()=>Ni,Owlv2Model:()=>Di,Owlv2PreTrainedModel:()=>Bi,PaliGemmaForConditionalGeneration:()=>Ln,PaliGemmaPreTrainedModel:()=>On,ParakeetForCTC:()=>Bo,ParakeetPreTrainedModel:()=>Lo,PatchTSMixerForPrediction:()=>Su,PatchTSMixerModel:()=>$u,PatchTSMixerPreTrainedModel:()=>Tu,PatchTSTForPrediction:()=>ku,PatchTSTModel:()=>Mu,PatchTSTPreTrainedModel:()=>vu,Phi3ForCausalLM:()=>Qs,Phi3Model:()=>Ks,Phi3PreTrainedModel:()=>Hs,Phi3VForCausalLM:()=>Un,Phi3VPreTrainedModel:()=>Gn,PhiForCausalLM:()=>Ws,PhiModel:()=>qs,PhiPreTrainedModel:()=>Us,PreTrainedModel:()=>U,PretrainedMixin:()=>Hu,PvtForImageClassification:()=>fi,PvtModel:()=>mi,PvtPreTrainedModel:()=>hi,PyAnnoteForAudioFrameClassification:()=>jo,PyAnnoteModel:()=>No,PyAnnotePreTrainedModel:()=>Do,QuestionAnsweringModelOutput:()=>fd,Qwen2ForCausalLM:()=>Ds,Qwen2Model:()=>Bs,Qwen2PreTrainedModel:()=>Ls,Qwen2VLForConditionalGeneration:()=>Gs,Qwen2VLPreTrainedModel:()=>Vs,Qwen3ForCausalLM:()=>Rs,Qwen3Model:()=>js,Qwen3PreTrainedModel:()=>Ns,RFDetrForObjectDetection:()=>ia,RFDetrModel:()=>sa,RFDetrObjectDetectionOutput:()=>aa,RFDetrPreTrainedModel:()=>ra,RTDetrForObjectDetection:()=>Ji,RTDetrModel:()=>Xi,RTDetrObjectDetectionOutput:()=>Yi,RTDetrPreTrainedModel:()=>Qi,RTDetrV2ForObjectDetection:()=>ta,RTDetrV2Model:()=>ea,RTDetrV2ObjectDetectionOutput:()=>na,RTDetrV2PreTrainedModel:()=>Zi,ResNetForImageClassification:()=>va,ResNetModel:()=>xa,ResNetPreTrainedModel:()=>ba,RoFormerForMaskedLM:()=>ge,RoFormerForQuestionAnswering:()=>be,RoFormerForSequenceClassification:()=>we,RoFormerForTokenClassification:()=>ye,RoFormerModel:()=>_e,RoFormerPreTrainedModel:()=>fe,RobertaForMaskedLM:()=>tn,RobertaForQuestionAnswering:()=>sn,RobertaForSequenceClassification:()=>nn,RobertaForTokenClassification:()=>rn,RobertaModel:()=>en,RobertaPreTrainedModel:()=>Zt,SamImageSegmentationOutput:()=>ko,SamModel:()=>Mo,SamPreTrainedModel:()=>vo,SapiensForDepthEstimation:()=>Ba,SapiensForNormalEstimation:()=>Da,SapiensForSemanticSegmentation:()=>La,SapiensPreTrainedModel:()=>Oa,SegformerForImageClassification:()=>Rl,SegformerForSemanticSegmentation:()=>Vl,SegformerModel:()=>jl,SegformerPreTrainedModel:()=>Nl,Seq2SeqLMOutput:()=>cd,SequenceClassifierOutput:()=>dd,SiglipModel:()=>Yn,SiglipPreTrainedModel:()=>Jn,SiglipTextModel:()=>Zn,SiglipVisionModel:()=>er,SmolLM3ForCausalLM:()=>Hr,SmolLM3Model:()=>Wr,SmolLM3PreTrainedModel:()=>qr,SmolVLMForConditionalGeneration:()=>Vn,SnacDecoderModel:()=>Wu,SnacEncoderModel:()=>qu,SnacModel:()=>Uu,SnacPreTrainedModel:()=>Gu,SpeechT5ForSpeechToText:()=>_l,SpeechT5ForTextToSpeech:()=>gl,SpeechT5HifiGan:()=>wl,SpeechT5Model:()=>fl,SpeechT5PreTrainedModel:()=>ml,SqueezeBertForMaskedLM:()=>xt,SqueezeBertForQuestionAnswering:()=>Mt,SqueezeBertForSequenceClassification:()=>vt,SqueezeBertModel:()=>bt,SqueezeBertPreTrainedModel:()=>yt,StableLmForCausalLM:()=>ql,StableLmModel:()=>Ul,StableLmPreTrainedModel:()=>Gl,Starcoder2ForCausalLM:()=>El,Starcoder2Model:()=>Cl,Starcoder2PreTrainedModel:()=>Sl,StyleTextToSpeech2Model:()=>hl,StyleTextToSpeech2PreTrainedModel:()=>pl,Swin2SRForImageSuperResolution:()=>Ea,Swin2SRModel:()=>Ca,Swin2SRPreTrainedModel:()=>Sa,SwinForImageClassification:()=>Ta,SwinForSemanticSegmentation:()=>$a,SwinModel:()=>ka,SwinPreTrainedModel:()=>Ma,T5ForConditionalGeneration:()=>At,T5Model:()=>Pt,T5PreTrainedModel:()=>Et,TableTransformerForObjectDetection:()=>pa,TableTransformerModel:()=>da,TableTransformerObjectDetectionOutput:()=>ha,TableTransformerPreTrainedModel:()=>ca,TokenClassifierOutput:()=>hd,TrOCRForCausalLM:()=>bl,TrOCRPreTrainedModel:()=>yl,UltravoxModel:()=>Eu,UltravoxPreTrainedModel:()=>Cu,UniSpeechForCTC:()=>qo,UniSpeechForSequenceClassification:()=>Wo,UniSpeechModel:()=>Uo,UniSpeechPreTrainedModel:()=>Go,UniSpeechSatForAudioFrameClassification:()=>Jo,UniSpeechSatForCTC:()=>Qo,UniSpeechSatForSequenceClassification:()=>Xo,UniSpeechSatModel:()=>Ko,UniSpeechSatPreTrainedModel:()=>Ho,VaultGemmaForCausalLM:()=>Es,VaultGemmaModel:()=>Cs,VaultGemmaPreTrainedModel:()=>Ss,ViTForImageClassification:()=>oi,ViTMAEModel:()=>gi,ViTMAEPreTrainedModel:()=>_i,ViTMSNForImageClassification:()=>bi,ViTMSNModel:()=>yi,ViTMSNPreTrainedModel:()=>wi,ViTModel:()=>ai,ViTPreTrainedModel:()=>ii,VisionEncoderDecoderModel:()=>Cn,VitMatteForImageMatting:()=>Si,VitMattePreTrainedModel:()=>$i,VitPoseForPoseEstimation:()=>pi,VitPosePreTrainedModel:()=>di,VitsModel:()=>Dl,VitsModelOutput:()=>yd,VitsPreTrainedModel:()=>Bl,VoxtralForConditionalGeneration:()=>Pu,Wav2Vec2BertForCTC:()=>el,Wav2Vec2BertForSequenceClassification:()=>tl,Wav2Vec2BertModel:()=>Zo,Wav2Vec2BertPreTrainedModel:()=>Yo,Wav2Vec2ForAudioFrameClassification:()=>Oo,Wav2Vec2ForCTC:()=>Fo,Wav2Vec2ForSequenceClassification:()=>zo,Wav2Vec2Model:()=>Io,Wav2Vec2PreTrainedModel:()=>Ao,WavLMForAudioFrameClassification:()=>dl,WavLMForCTC:()=>ll,WavLMForSequenceClassification:()=>ul,WavLMForXVector:()=>cl,WavLMModel:()=>ol,WavLMPreTrainedModel:()=>al,WeSpeakerResNetModel:()=>Vo,WeSpeakerResNetPreTrainedModel:()=>Ro,WhisperForConditionalGeneration:()=>Mn,WhisperModel:()=>vn,WhisperPreTrainedModel:()=>xn,XLMForQuestionAnswering:()=>dn,XLMForSequenceClassification:()=>un,XLMForTokenClassification:()=>cn,XLMModel:()=>on,XLMPreTrainedModel:()=>an,XLMRobertaForMaskedLM:()=>mn,XLMRobertaForQuestionAnswering:()=>gn,XLMRobertaForSequenceClassification:()=>fn,XLMRobertaForTokenClassification:()=>_n,XLMRobertaModel:()=>hn,XLMRobertaPreTrainedModel:()=>pn,XLMWithLMHeadModel:()=>ln,XVectorOutput:()=>pd,YolosForObjectDetection:()=>bo,YolosModel:()=>yo,YolosObjectDetectionOutput:()=>xo,YolosPreTrainedModel:()=>wo});var r=n("./src/configs.js"),s=n("./src/backends/onnx.js"),i=n("./src/utils/dtypes.js"),a=n("./src/utils/generic.js"),o=n("./src/utils/core.js"),l=n("./src/utils/hub.js"),u=n("./src/utils/constants.js"),c=n("./src/generation/logits_process.js"),d=n("./src/generation/configuration_utils.js"),p=n("./src/utils/tensor.js"),h=n("./src/utils/image.js"),m=n("./src/utils/maths.js"),f=n("./src/generation/stopping_criteria.js"),_=n("./src/generation/logits_sampler.js"),g=n("./src/env.js"),w=n("./src/models/whisper/generation_whisper.js"),y=n("./src/models/whisper/common_whisper.js");const b=new Map,x=new Map,v=new Map;async function M(e,t,n){return Object.fromEntries(await qd.all(Object.keys(t).map(async a=>{const{buffer_or_path:o,session_options:u,session_config:c}=await async function(e,t,n){let a=n.config?.["transformers.js_config"]??{},o=n.device??a.device;o&&"string"!=typeof o&&(o.hasOwnProperty(t)?o=o[t]:(console.warn(`device not specified for "${t}". Using the default device.`),o=null));const u=o??(g.apis.IS_NODE_ENV?"cpu":"wasm"),c=(0,s.deviceToExecutionProviders)(u),d=a.device_config??{};d.hasOwnProperty(u)&&(a={...a,...d[u]});let p=n.dtype??a.dtype;if("string"!=typeof p&&(p&&p.hasOwnProperty(t)?p=p[t]:(p=i.DEFAULT_DEVICE_DTYPE_MAPPING[u]??i.DATA_TYPES.fp32,console.warn(`dtype not specified for "${t}". Using the default dtype (${p}) for this device (${u}).`))),p===i.DATA_TYPES.auto){let e=a.dtype;"string"!=typeof e&&(e=e?.[t]),p=e&&e!==i.DATA_TYPES.auto&&i.DATA_TYPES.hasOwnProperty(e)?e:i.DEFAULT_DEVICE_DTYPE_MAPPING[u]??i.DATA_TYPES.fp32}const h=p;if(!i.DEFAULT_DTYPE_SUFFIX_MAPPING.hasOwnProperty(h))throw new Error(`Invalid dtype: ${h}. Should be one of: ${Object.keys(i.DATA_TYPES).join(", ")}`);if(h===i.DATA_TYPES.fp16&&"webgpu"===u&&!await(0,i.isWebGpuFp16Supported)())throw new Error(`The device (${u}) does not support fp16.`);const m=a.kv_cache_dtype,f=m?"string"==typeof m?m:m[h]??"float32":void 0;if(f&&!["float32","float16"].includes(f))throw new Error(`Invalid kv_cache_dtype: ${f}. Should be one of: float32, float16`);const _={dtype:h,kv_cache_dtype:f,device:u},w=`${t}${i.DEFAULT_DTYPE_SUFFIX_MAPPING[h]}.onnx`,y=`${n.subfolder??""}/${w}`,b={...n.session_options};b.executionProviders??=c;const x=a.free_dimension_overrides;x?b.freeDimensionOverrides??=x:u.startsWith("webnn")&&!b.freeDimensionOverrides&&console.warn(`WebNN does not currently support dynamic shapes and requires 'free_dimension_overrides' to be set in config.json, preferably as a field within config["transformers.js_config"]["device_config"]["${u}"]. When 'free_dimension_overrides' is not set, you may experience significant performance degradation.`);const v=g.apis.IS_NODE_ENV&&g.env.useFSCache,M=(0,l.getModelFile)(e,y,!0,n,v),k=n.use_external_data_format??a.use_external_data_format;let T=[];if(k){let r;r="object"==typeof k?k.hasOwnProperty(w)?k[w]:!!k.hasOwnProperty(t)&&k[t]:k;const s=+r;if(s>l.MAX_EXTERNAL_DATA_CHUNKS)throw new Error(`The number of external data chunks (${s}) exceeds the maximum allowed value (${l.MAX_EXTERNAL_DATA_CHUNKS}).`);for(let t=0;t<s;++t){const r=`${w}_data${0===t?"":"_"+t}`,s=`${n.subfolder??""}/${r}`;T.push(new qd(async(t,i)=>{const a=await(0,l.getModelFile)(e,s,!0,n,v);t(a instanceof Uint8Array?{path:r,data:a}:r)}))}}else void 0!==b.externalData&&(T=b.externalData.map(async t=>{if("string"==typeof t.data){const r=await(0,l.getModelFile)(e,t.data,!0,n);return{...t,data:r}}return t}));if(T.length>0){const e=await qd.all(T);g.apis.IS_NODE_ENV||(b.externalData=e)}if("webgpu"===u){const e=(0,r.getCacheShapes)(n.config,{prefix:"present"});if(Object.keys(e).length>0&&!(0,s.isONNXProxy)()){const t={};for(const n in e)t[n]="gpu-buffer";b.preferredOutputLocation=t}}return{buffer_or_path:await M,session_options:b,session_config:_}}(e,t[a],n);return[a,await(0,s.createInferenceSession)(o,u,c)]})))}async function k(e,t,n){return Object.fromEntries(await qd.all(Object.keys(t).map(async r=>[r,await(0,l.getModelJSON)(e,t[r],!1,n)])))}async function T(e,t){const n=function(e,t){const n=Object.create(null),r=[];for(const i of e.inputNames){const e=t[i];e instanceof p.Tensor?n[i]=(0,s.isONNXProxy)()?e.clone():e:r.push(i)}if(r.length>0)throw new Error(`An error occurred during model execution: "Missing the following inputs: ${r.join(", ")}.`);const i=Object.keys(t).length,a=e.inputNames.length;if(i>a){let n=Object.keys(t).filter(t=>!e.inputNames.includes(t));console.warn(`WARNING: Too many inputs were provided (${i} > ${a}). The following inputs will be ignored: "${n.join(", ")}".`)}return n}(e,t);try{const t=Object.fromEntries(Object.entries(n).map(([e,t])=>[e,t.ort_tensor]));return $(await(0,s.runInferenceSession)(e,t))}catch(e){const t=Object.fromEntries(Object.entries(n).map(([e,t])=>{const n={type:t.type,dims:t.dims,location:t.location};return"gpu-buffer"!==n.location&&(n.data=t.data),[e,n]}));throw console.error(`An error occurred during model execution: "${e}".`),console.error("Inputs given to model:",t),e}}function $(e){for(let t in e)(0,s.isONNXTensor)(e[t])?e[t]=new p.Tensor(e[t]):"object"==typeof e[t]&&$(e[t]);return e}function S(e){if(e instanceof p.Tensor)return e;if(0===e.length)throw Error("items must be non-empty");if(Array.isArray(e[0])){if(e.some(t=>t.length!==e[0].length))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new p.Tensor("int64",BigInt64Array.from(e.flat().map(e=>BigInt(e))),[e.length,e[0].length])}return new p.Tensor("int64",BigInt64Array.from(e.map(e=>BigInt(e))),[1,e.length])}function C(e){return new p.Tensor("bool",[e],[1])}async function E(e,t){let{encoder_outputs:n,input_ids:r,decoder_input_ids:s,...i}=t;if(!n){const r=(0,o.pick)(t,e.sessions.model.inputNames);n=(await P(e,r)).last_hidden_state}return i.input_ids=s,i.encoder_hidden_states=n,e.sessions.decoder_model_merged.inputNames.includes("encoder_attention_mask")&&(i.encoder_attention_mask=t.attention_mask),await I(e,i,!0)}async function P(e,t){const n=e.sessions.model,r=(0,o.pick)(t,n.inputNames);if(n.inputNames.includes("inputs_embeds")&&!r.inputs_embeds){if(!t.input_ids)throw new Error("Both `input_ids` and `inputs_embeds` are missing in the model inputs.");r.inputs_embeds=await e.encode_text({input_ids:t.input_ids})}if(n.inputNames.includes("token_type_ids")&&!r.token_type_ids){if(!r.input_ids)throw new Error("Both `input_ids` and `token_type_ids` are missing in the model inputs.");r.token_type_ids=(0,p.zeros_like)(r.input_ids)}if(n.inputNames.includes("pixel_mask")&&!r.pixel_mask){if(!r.pixel_values)throw new Error("Both `pixel_values` and `pixel_mask` are missing in the model inputs.");const e=r.pixel_values.dims;r.pixel_mask=(0,p.ones)([e[0],e[2],e[3]])}return await T(n,r)}async function A(e,t){const n=await e.encode(t);return await e.decode(n)}async function I(e,t,n=!1){const r=e.sessions[n?"decoder_model_merged":"model"],{past_key_values:s,...i}=t;if(r.inputNames.includes("use_cache_branch")&&(i.use_cache_branch=C(!!s)),r.inputNames.includes("position_ids")&&i.attention_mask&&!i.position_ids){const t=["paligemma","gemma3_text","gemma3"].includes(e.config.model_type)?1:0;i.position_ids=function(e,t=null,n=0){const{input_ids:r,inputs_embeds:s,attention_mask:i}=e,{data:a,dims:o}=N(i,n);let l=new p.Tensor("int64",a,o);if(t){const e=-(r??s).dims.at(1);l=l.slice(null,[e,null])}return l}(i,s,t)}e.addPastKeyValues(i,s);const a=(0,o.pick)(i,r.inputNames);return await T(r,a)}function F({modality_token_id:e,inputs_embeds:t,modality_features:n,input_ids:r,attention_mask:s}){const i=r.tolist().map(t=>t.reduce((t,n,r)=>(n==e&&t.push(r),t),[])),a=i.reduce((e,t)=>e+t.length,0),o=n.dims[0];if(a!==o)throw new Error(`Number of tokens and features do not match: tokens: ${a}, features ${o}`);let l=0;for(let e=0;e<i.length;++e){const r=i[e],s=t[e];for(let e=0;e<r.length;++e)s[r[e]].data.set(n[l++].data)}return{inputs_embeds:t,attention_mask:s}}function z({image_token_id:e,inputs_embeds:t,image_features:n,input_ids:r,attention_mask:s}){return F({modality_token_id:e,inputs_embeds:t,modality_features:n,input_ids:r,attention_mask:s})}function O({audio_token_id:e,inputs_embeds:t,audio_features:n,input_ids:r,attention_mask:s}){return F({modality_token_id:e,inputs_embeds:t,modality_features:n,input_ids:r,attention_mask:s})}async function L(e,{encode_function:t,merge_function:n,modality_input_name:r,modality_output_name:s,input_ids:i=null,attention_mask:a=null,position_ids:o=null,inputs_embeds:l=null,past_key_values:u=null,generation_config:c=null,logits_processor:d=null,...h}){const m=h[r];if(!l)if(l=await e.encode_text({input_ids:i,...h}),m&&1!==i.dims[1]){const e=await t({[r]:m,...h});({inputs_embeds:l,attention_mask:a}=n({[s]:e,inputs_embeds:l,input_ids:i,attention_mask:a}))}else if(u&&m&&1===i.dims[1]){const e=i.dims[1],t=Object.values(u)[0].dims.at(-2);a=(0,p.cat)([(0,p.ones)([i.dims[0],t]),a.slice(null,[a.dims[1]-e,a.dims[1]])],1)}if(!o&&"qwen2_vl"===e.config.model_type){const{image_grid_thw:t,video_grid_thw:n}=h;[o]=e.get_rope_index(i,t,n,a)}return await I(e,{inputs_embeds:l,past_key_values:u,attention_mask:a,position_ids:o,generation_config:c,logits_processor:d},!0)}async function B(e,t){return await L(e,{...t,modality_input_name:"audio_values",modality_output_name:"audio_features",encode_function:e.encode_audio.bind(e),merge_function:e._merge_input_ids_with_audio_features.bind(e)})}async function D(e,t){return await L(e,{...t,modality_input_name:"pixel_values",modality_output_name:"image_features",encode_function:e.encode_image.bind(e),merge_function:e._merge_input_ids_with_image_features.bind(e)})}function N(e,t=0){const[n,r]=e.dims,s=e.data,i=new BigInt64Array(s.length);for(let e=0;e<n;++e){const n=e*r;let a=BigInt(t);for(let e=0;e<r;++e){const t=n+e;0n===s[t]?i[t]=BigInt(1):(i[t]=a,a+=s[t])}}return{data:i,dims:e.dims}}function j(e,t,n,r){const s=n.past_key_values?Object.values(n.past_key_values)[0].dims.at(-2):0;if(!n.attention_mask){let e;for(const t of["input_ids","inputs_embeds","position_ids"])if(n[t]){e=n[t].dims;break}if(!e)throw new Error("attention_mask is not provided, and unable to infer its shape from model inputs.");n.attention_mask=(0,p.ones)([e[0],s+e[1]])}if(n.past_key_values){const{input_ids:e,attention_mask:t}=n;t&&t.dims[1]>e.dims[1]||s<e.dims[1]&&(n.input_ids=e.slice(null,[s,null]))}return n}function R(e,t,n,r){return n.past_key_values&&(t=t.map(e=>[e.at(-1)])),{...n,decoder_input_ids:S(t)}}function V(e,...t){return e.config.is_encoder_decoder?R(e,...t):j(e,...t)}function G(e,t,n,r){const s=!!n.past_key_values;if(null!==r.guidance_scale&&r.guidance_scale>1&&(s?n.input_ids=(0,p.cat)([n.input_ids,n.input_ids],0):(n.input_ids=(0,p.cat)([n.input_ids,(0,p.full_like)(n.input_ids,BigInt(r.pad_token_id))],0),n.attention_mask=(0,p.cat)([n.attention_mask,(0,p.full_like)(n.attention_mask,0n)],0))),!s&&n.pixel_values||(n.pixel_values=(0,p.full)([0,0,3,384,384],1)),s){const e=0,t=1,r=e>0?1:0,s=1;n.images_seq_mask=new p.Tensor("bool",new Array(e+t).fill(!0).fill(!1,0,t),[s,e+t]),n.images_emb_mask=new p.Tensor("bool",new Array(e).fill(!!r),[s,1,e])}return n}class U extends a.Callable{main_input_name="input_ids";forward_params=["input_ids","attention_mask"];constructor(e,t,n){super(),this.config=e,this.sessions=t,this.configs=n;const r=v.get(this.constructor),s=b.get(r);switch(this.can_generate=!1,this._forward=null,this._prepare_inputs_for_generation=null,s){case 4:this.can_generate=!0,this._forward=I,this._prepare_inputs_for_generation=j;break;case 2:case 3:case 7:this.can_generate=!0,this._forward=E,this._prepare_inputs_for_generation=R;break;case 1:this._forward=E;break;case 6:this.can_generate=!0,this._forward=D,this._prepare_inputs_for_generation=V;break;case 10:this.can_generate=!0,this._forward=B,this._prepare_inputs_for_generation=V;break;case 9:case 12:this.can_generate=!0,this._prepare_inputs_for_generation=V;break;case 8:this.can_generate=!0,this._prepare_inputs_for_generation=G;break;case 11:this._forward=A;break;default:this._forward=P}this.can_generate&&this.forward_params.push("past_key_values"),this.custom_config=this.config["transformers.js_config"]??{}}async dispose(){const e=[];for(const t of Object.values(this.sessions))t?.handler?.dispose&&e.push(t.handler.dispose());return await qd.all(e)}static async from_pretrained(e,{progress_callback:t=null,config:n=null,cache_dir:s=null,local_files_only:i=!1,revision:a="main",model_file_name:o=null,subfolder:l="onnx",device:c=null,dtype:d=null,use_external_data_format:p=null,session_options:h={}}={}){let m={progress_callback:t,config:n,cache_dir:s,local_files_only:i,revision:a,model_file_name:o,subfolder:l,device:c,dtype:d,use_external_data_format:p,session_options:h};const f=v.get(this),_=b.get(f);let g;if(n=m.config=await r.AutoConfig.from_pretrained(e,m),4===_)g=await qd.all([M(e,{model:m.model_file_name??"model"},m),k(e,{generation_config:"generation_config.json"},m)]);else if(2===_||3===_)g=await qd.all([M(e,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},m),k(e,{generation_config:"generation_config.json"},m)]);else if(5===_)g=await qd.all([M(e,{model:"vision_encoder",prompt_encoder_mask_decoder:"prompt_encoder_mask_decoder"},m)]);else if(1===_)g=await qd.all([M(e,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},m)]);else if(6===_){const t={embed_tokens:"embed_tokens",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};n.is_encoder_decoder&&(t.model="encoder_model"),g=await qd.all([M(e,t,m),k(e,{generation_config:"generation_config.json"},m)])}else if(10===_){const t={embed_tokens:"embed_tokens",audio_encoder:"audio_encoder",decoder_model_merged:"decoder_model_merged"};g=await qd.all([M(e,t,m),k(e,{generation_config:"generation_config.json"},m)])}else if(12===_){const t={embed_tokens:"embed_tokens",audio_encoder:"audio_encoder",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};g=await qd.all([M(e,t,m),k(e,{generation_config:"generation_config.json"},m)])}else if(7===_)g=await qd.all([M(e,{model:"text_encoder",decoder_model_merged:"decoder_model_merged",encodec_decode:"encodec_decode"},m),k(e,{generation_config:"generation_config.json"},m)]);else if(8===_)g=await qd.all([M(e,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"language_model",lm_head:"lm_head",gen_head:"gen_head",gen_img_embeds:"gen_img_embeds",image_decode:"image_decode"},m),k(e,{generation_config:"generation_config.json"},m)]);else if(9===_)g=await qd.all([M(e,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"model",vision_encoder:"vision_encoder"},m),k(e,{generation_config:"generation_config.json"},m)]);else if(11===_)g=await qd.all([M(e,{encoder_model:"encoder_model",decoder_model:"decoder_model"},m)]);else{if(0!==_){const e=f??n?.model_type;"custom"!==e&&console.warn(`Model type for '${e}' not found, assuming encoder-only architecture. Please report this at ${u.GITHUB_ISSUE_URL}.`)}g=await qd.all([M(e,{model:m.model_file_name??"model"},m)])}return new this(n,...g)}async _call(e){return await this.forward(e)}async forward(e){return await this._forward(this,e)}get generation_config(){return this.configs?.generation_config??null}_get_logits_processor(e,t,n=null){const r=new c.LogitsProcessorList;if(null!==e.repetition_penalty&&1!==e.repetition_penalty&&r.push(new c.RepetitionPenaltyLogitsProcessor(e.repetition_penalty)),null!==e.no_repeat_ngram_size&&e.no_repeat_ngram_size>0&&r.push(new c.NoRepeatNGramLogitsProcessor(e.no_repeat_ngram_size)),null!==e.bad_words_ids&&r.push(new c.NoBadWordsLogitsProcessor(e.bad_words_ids,e.eos_token_id)),null!==e.min_length&&null!==e.eos_token_id&&e.min_length>0&&r.push(new c.MinLengthLogitsProcessor(e.min_length,e.eos_token_id)),null!==e.min_new_tokens&&null!==e.eos_token_id&&e.min_new_tokens>0&&r.push(new c.MinNewTokensLengthLogitsProcessor(t,e.min_new_tokens,e.eos_token_id)),null!==e.forced_bos_token_id&&r.push(new c.ForcedBOSTokenLogitsProcessor(e.forced_bos_token_id)),null!==e.forced_eos_token_id&&r.push(new c.ForcedEOSTokenLogitsProcessor(e.max_length,e.forced_eos_token_id)),null!==e.begin_suppress_tokens){const n=t>1||null===e.forced_bos_token_id?t:t+1;r.push(new c.SuppressTokensAtBeginLogitsProcessor(e.begin_suppress_tokens,n))}return null!==e.guidance_scale&&e.guidance_scale>1&&r.push(new c.ClassifierFreeGuidanceLogitsProcessor(e.guidance_scale)),0===e.temperature&&e.do_sample&&(console.warn("`do_sample` changed to false because `temperature: 0` implies greedy sampling (always selecting the most likely token), which is incompatible with `do_sample: true`."),e.do_sample=!1),e.do_sample&&null!==e.temperature&&1!==e.temperature&&r.push(new c.TemperatureLogitsWarper(e.temperature)),null!==n&&r.extend(n),r}_prepare_generation_config(e,t,n=d.GenerationConfig){const r={...this.config};for(const e of["decoder","generator","text_config"])e in r&&Object.assign(r,r[e]);const s=new n(r);return Object.assign(s,this.generation_config??{}),e&&Object.assign(s,e),t&&Object.assign(s,(0,o.pick)(t,Object.getOwnPropertyNames(s))),s}_get_stopping_criteria(e,t=null){const n=new f.StoppingCriteriaList;return null!==e.max_length&&n.push(new f.MaxLengthCriteria(e.max_length,this.config.max_position_embeddings??null)),null!==e.eos_token_id&&n.push(new f.EosTokenCriteria(e.eos_token_id)),t&&n.extend(t),n}_validate_model_class(){if(!this.can_generate){const e=[sc,lc,rc,Yu],t=v.get(this.constructor),n=new Set,r=this.config.model_type;for(const t of e){const e=t.get(r);e&&n.add(e[0])}let s=`The current model class (${t}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;throw n.size>0&&(s+=` Please use the following class instead: ${[...n].join(", ")}`),Error(s)}}prepare_inputs_for_generation(...e){return this._prepare_inputs_for_generation(this,...e)}_update_model_kwargs_for_generation({generated_input_ids:e,outputs:t,model_inputs:n,is_encoder_decoder:r}){return n.past_key_values=this.getPastKeyValues(t,n.past_key_values),n.input_ids=new p.Tensor("int64",e.flat(),[e.length,1]),r||(n.attention_mask=(0,p.cat)([n.attention_mask,(0,p.ones)([n.attention_mask.dims[0],1])],1)),n.position_ids=null,n}_prepare_model_inputs({inputs:e,bos_token_id:t,model_kwargs:n}){const r=(0,o.pick)(n,this.forward_params),s=this.main_input_name;if(s in r){if(e)throw new Error("`inputs`: {inputs}` were passed alongside {input_name} which is not allowed. Make sure to either pass {inputs} or {input_name}=...")}else r[s]=e;return{inputs_tensor:r[s],model_inputs:r,model_input_name:s}}async _prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:e,model_inputs:t,model_input_name:n,generation_config:r}){if(this.sessions.model.inputNames.includes("inputs_embeds")&&!t.inputs_embeds&&"_prepare_inputs_embeds"in this){const{input_ids:e,pixel_values:n,attention_mask:r,...s}=t,i=await this._prepare_inputs_embeds(t);t={...s,...(0,o.pick)(i,["inputs_embeds","attention_mask"])}}let{last_hidden_state:s}=await P(this,t);if(null!==r.guidance_scale&&r.guidance_scale>1)s=(0,p.cat)([s,(0,p.full_like)(s,0)],0),"attention_mask"in t&&(t.attention_mask=(0,p.cat)([t.attention_mask,(0,p.zeros_like)(t.attention_mask)],0));else if(t.decoder_input_ids){const e=S(t.decoder_input_ids).dims[0];if(e!==s.dims[0]){if(1!==s.dims[0])throw new Error(`The encoder outputs have a different batch size (${s.dims[0]}) than the decoder inputs (${e}).`);s=(0,p.cat)(Array.from({length:e},()=>s),0)}}return t.encoder_outputs=s,t}_prepare_decoder_input_ids_for_generation({batch_size:e,model_input_name:t,model_kwargs:n,decoder_start_token_id:r,bos_token_id:s,generation_config:i}){let{decoder_input_ids:a,...o}=n;if(!(a instanceof p.Tensor)){if(a)Array.isArray(a[0])||(a=Array.from({length:e},()=>a));else if(r??=s,"musicgen"===this.config.model_type)a=Array.from({length:e*this.config.decoder.num_codebooks},()=>[r]);else if(Array.isArray(r)){if(r.length!==e)throw new Error(`\`decoder_start_token_id\` expcted to have length ${e} but got ${r.length}`);a=r}else a=Array.from({length:e},()=>[r]);a=S(a)}return n.decoder_attention_mask=(0,p.ones_like)(a),{input_ids:a,model_inputs:o}}async generate({inputs:e=null,generation_config:t=null,logits_processor:n=null,stopping_criteria:r=null,streamer:s=null,...i}){this._validate_model_class(),t=this._prepare_generation_config(t,i);let{inputs_tensor:a,model_inputs:o,model_input_name:l}=this._prepare_model_inputs({inputs:e,model_kwargs:i});const u=this.config.is_encoder_decoder;let c;u&&("encoder_outputs"in o||(o=await this._prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:a,model_inputs:o,model_input_name:l,generation_config:t}))),u?({input_ids:c,model_inputs:o}=this._prepare_decoder_input_ids_for_generation({batch_size:o[l].dims.at(0),model_input_name:l,model_kwargs:o,decoder_start_token_id:t.decoder_start_token_id,bos_token_id:t.bos_token_id,generation_config:t})):c=o[l];let d=c.dims.at(-1);null!==t.max_new_tokens&&(t.max_length=d+t.max_new_tokens);const h=this._get_logits_processor(t,d,n),m=this._get_stopping_criteria(t,r),f=o[l].dims.at(0),g=_.LogitsSampler.getSampler(t),w=new Array(f).fill(0),y=c.tolist();let b;s&&s.put(y);let x={};for(;;){if(o=this.prepare_inputs_for_generation(y,o,t),b=await this.forward(o),t.output_attentions&&t.return_dict_in_generate){const e=this.getAttentions(b);for(const t in e)t in x||(x[t]=[]),x[t].push(e[t])}const e=h(y,b.logits.slice(null,-1,null)),n=[];for(let t=0;t<e.dims.at(0);++t){const r=e[t],s=await g(r);for(const[e,r]of s){const s=BigInt(e);w[t]+=r,y[t].push(s),n.push([s]);break}}if(s&&s.put(n),m(y).every(e=>e))break;o=this._update_model_kwargs_for_generation({generated_input_ids:n,outputs:b,model_inputs:o,is_encoder_decoder:u})}s&&s.end();const v=this.getPastKeyValues(b,o.past_key_values,!0),M=new p.Tensor("int64",y.flat(),[y.length,y[0].length]);if(t.return_dict_in_generate)return{sequences:M,past_key_values:v,...x};for(const e of Object.values(b))"gpu-buffer"===e.location&&e.dispose();return M}getPastKeyValues(e,t,n=!1){const r=Object.create(null);for(const s in e)if(s.startsWith("present")){const i=s.replace("present_conv","past_conv").replace("present","past_key_values"),a=s.includes("encoder");if(r[i]=a&&t?t[i]:e[s],t&&(!a||n)){const e=t[i];"gpu-buffer"===e.location&&e.dispose()}}return r}getAttentions(e){const t={};for(const n of["cross_attentions","encoder_attentions","decoder_attentions"])for(const r in e)r.startsWith(n)&&(n in t||(t[n]=[]),t[n].push(e[r]));return t}addPastKeyValues(e,t){if(t)Object.assign(e,t);else{const t=this.sessions.decoder_model_merged??this.sessions.model,n=(e[this.main_input_name]??e.attention_mask)?.dims?.[0]??1,s=t?.config?.kv_cache_dtype??"float32",i="float16"===s?p.DataTypeMap.float16:p.DataTypeMap.float32,a=(0,r.getCacheShapes)(this.config,{batch_size:n});for(const t in a){const n=a[t].reduce((e,t)=>e*t,1);e[t]=new p.Tensor(s,new i(n),a[t])}}}async encode_image({pixel_values:e}){return(await T(this.sessions.vision_encoder,{pixel_values:e})).image_features}async encode_text({input_ids:e}){return(await T(this.sessions.embed_tokens,{input_ids:e})).inputs_embeds}async encode_audio({audio_values:e}){return(await T(this.sessions.audio_encoder,{audio_values:e})).audio_features}}class q{}class W extends q{constructor({last_hidden_state:e,hidden_states:t=null,attentions:n=null}){super(),this.last_hidden_state=e,this.hidden_states=t,this.attentions=n}}class H extends U{}class K extends H{}class Q extends H{async _call(e){return new md(await super._call(e))}}class X extends H{async _call(e){return new dd(await super._call(e))}}class J extends H{async _call(e){return new hd(await super._call(e))}}class Y extends H{async _call(e){return new fd(await super._call(e))}}class Z extends U{}class ee extends Z{}class te extends Z{async _call(e){return new md(await super._call(e))}}class ne extends Z{async _call(e){return new dd(await super._call(e))}}class re extends Z{async _call(e){return new hd(await super._call(e))}}class se extends Z{async _call(e){return new fd(await super._call(e))}}class ie extends U{}class ae extends ie{}class oe extends ie{async _call(e){return new md(await super._call(e))}}class le extends ie{async _call(e){return new dd(await super._call(e))}}class ue extends ie{async _call(e){return new hd(await super._call(e))}}class ce extends U{}class de extends ce{}class pe extends ce{}class he extends U{}class me extends he{}class fe extends U{}class _e extends fe{}class ge extends fe{async _call(e){return new md(await super._call(e))}}class we extends fe{async _call(e){return new dd(await super._call(e))}}class ye extends fe{async _call(e){return new hd(await super._call(e))}}class be extends fe{async _call(e){return new fd(await super._call(e))}}class xe extends U{}class ve extends xe{}class Me extends xe{async _call(e){return new md(await super._call(e))}}class ke extends xe{async _call(e){return new dd(await super._call(e))}}class Te extends xe{async _call(e){return new hd(await super._call(e))}}class $e extends xe{async _call(e){return new fd(await super._call(e))}}class Se extends U{}class Ce extends Se{}class Ee extends Se{async _call(e){return new md(await super._call(e))}}class Pe extends Se{async _call(e){return new dd(await super._call(e))}}class Ae extends Se{async _call(e){return new hd(await super._call(e))}}class Ie extends Se{async _call(e){return new fd(await super._call(e))}}class Fe extends U{}class ze extends Fe{}class Oe extends Fe{async _call(e){return new md(await super._call(e))}}class Le extends Fe{async _call(e){return new dd(await super._call(e))}}class Be extends Fe{async _call(e){return new hd(await super._call(e))}}class De extends Fe{async _call(e){return new fd(await super._call(e))}}class Ne extends U{}class je extends Ne{}class Re extends Ne{async _call(e){return new md(await super._call(e))}}class Ve extends Ne{async _call(e){return new dd(await super._call(e))}}class Ge extends Ne{async _call(e){return new hd(await super._call(e))}}class Ue extends Ne{async _call(e){return new fd(await super._call(e))}}class qe extends U{}class We extends qe{}class He extends qe{async _call(e){return new md(await super._call(e))}}class Ke extends qe{async _call(e){return new dd(await super._call(e))}}class Qe extends qe{async _call(e){return new hd(await super._call(e))}}class Xe extends qe{async _call(e){return new fd(await super._call(e))}}class Je extends U{}class Ye extends Je{}class Ze extends Je{async _call(e){return new dd(await super._call(e))}}class et extends Je{async _call(e){return new hd(await super._call(e))}}class tt extends Je{async _call(e){return new fd(await super._call(e))}}class nt extends Je{async _call(e){return new md(await super._call(e))}}class rt extends U{}class st extends rt{}class it extends rt{async _call(e){return new md(await super._call(e))}}class at extends rt{async _call(e){return new dd(await super._call(e))}}class ot extends rt{async _call(e){return new hd(await super._call(e))}}class lt extends U{}class ut extends lt{}class ct extends lt{async _call(e){return new md(await super._call(e))}}class dt extends lt{async _call(e){return new dd(await super._call(e))}}class pt extends lt{async _call(e){return new fd(await super._call(e))}}class ht extends U{}class mt extends ht{}class ft extends ht{async _call(e){return new md(await super._call(e))}}class _t extends ht{async _call(e){return new dd(await super._call(e))}}class gt extends ht{async _call(e){return new hd(await super._call(e))}}class wt extends ht{async _call(e){return new fd(await super._call(e))}}class yt extends U{}class bt extends yt{}class xt extends yt{async _call(e){return new md(await super._call(e))}}class vt extends yt{async _call(e){return new dd(await super._call(e))}}class Mt extends yt{async _call(e){return new fd(await super._call(e))}}class kt extends U{}class Tt extends kt{}class $t extends kt{async _call(e){return new dd(await super._call(e))}}class St extends kt{async _call(e){return new fd(await super._call(e))}}class Ct extends kt{async _call(e){return new md(await super._call(e))}}class Et extends U{forward_params=["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"]}class Pt extends Et{}class At extends Et{}class It extends U{}class Ft extends It{}class zt extends It{}class Ot extends U{}class Lt extends Ot{}class Bt extends Ot{}class Dt extends U{}class Nt extends Dt{}class jt extends Dt{}class Rt extends Dt{async _call(e){return new dd(await super._call(e))}}class Vt extends U{}class Gt extends Vt{}class Ut extends Vt{}class qt extends Vt{async _call(e){return new dd(await super._call(e))}}class Wt extends Vt{}class Ht extends U{}class Kt extends Ht{}class Qt extends Ht{}class Xt extends U{}class Jt extends Xt{}class Yt extends Xt{}class Zt extends U{}class en extends Zt{}class tn extends Zt{async _call(e){return new md(await super._call(e))}}class nn extends Zt{async _call(e){return new dd(await super._call(e))}}class rn extends Zt{async _call(e){return new hd(await super._call(e))}}class sn extends Zt{async _call(e){return new fd(await super._call(e))}}class an extends U{}class on extends an{}class ln extends an{async _call(e){return new md(await super._call(e))}}class un extends an{async _call(e){return new dd(await super._call(e))}}class cn extends an{async _call(e){return new hd(await super._call(e))}}class dn extends an{async _call(e){return new fd(await super._call(e))}}class pn extends U{}class hn extends pn{}class mn extends pn{async _call(e){return new md(await super._call(e))}}class fn extends pn{async _call(e){return new dd(await super._call(e))}}class _n extends pn{async _call(e){return new hd(await super._call(e))}}class gn extends pn{async _call(e){return new fd(await super._call(e))}}class wn extends U{}class yn extends wn{}class bn extends wn{}class xn extends U{requires_attention_mask=!1;main_input_name="input_features";forward_params=["input_features","attention_mask","decoder_input_ids","decoder_attention_mask","past_key_values"]}class vn extends xn{}class Mn extends xn{_prepare_generation_config(e,t){return super._prepare_generation_config(e,t,w.WhisperGenerationConfig)}_retrieve_init_tokens(e){const t=[e.decoder_start_token_id];let n=e.language;const r=e.task;if(e.is_multilingual){n||(console.warn("No language specified - defaulting to English (en)."),n="en");const s=`<|${(0,y.whisper_language_to_code)(n)}|>`;t.push(e.lang_to_id[s]),t.push(e.task_to_id[r??"transcribe"])}else if(n||r)throw new Error("Cannot specify `task` or `language` for an English-only model. If the model is intended to be multilingual, pass `is_multilingual=true` to generate, or update the generation config.");return!e.return_timestamps&&e.no_timestamps_token_id&&t.at(-1)!==e.no_timestamps_token_id?t.push(e.no_timestamps_token_id):e.return_timestamps&&t.at(-1)===e.no_timestamps_token_id&&(console.warn("<|notimestamps|> prompt token is removed from generation_config since `return_timestamps` is set to `true`."),t.pop()),t.filter(e=>null!=e)}async generate({inputs:e=null,generation_config:t=null,logits_processor:n=null,stopping_criteria:r=null,...s}){t=this._prepare_generation_config(t,s);const i=s.decoder_input_ids??this._retrieve_init_tokens(t);if(t.return_timestamps&&(n??=new c.LogitsProcessorList,n.push(new c.WhisperTimeStampLogitsProcessor(t,i))),t.begin_suppress_tokens&&(n??=new c.LogitsProcessorList,n.push(new c.SuppressTokensAtBeginLogitsProcessor(t.begin_suppress_tokens,i.length))),t.return_token_timestamps){if(!t.alignment_heads)throw new Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");"translate"===t.task&&console.warn("Token-level timestamps may not be reliable for task 'translate'."),t.output_attentions=!0,t.return_dict_in_generate=!0}const a=await super.generate({inputs:e,generation_config:t,logits_processor:n,decoder_input_ids:i,...s});return t.return_token_timestamps&&(a.token_timestamps=this._extract_token_timestamps(a,t.alignment_heads,t.num_frames)),a}_extract_token_timestamps(e,t,n=null,r=.02){if(!e.cross_attentions)throw new Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");null==n&&console.warn("`num_frames` has not been set, meaning the entire audio will be analyzed. This may lead to inaccurate token-level timestamps for short audios (< 30 seconds).");let s=this.config.median_filter_width;void 0===s&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),s=7);const i=e.cross_attentions,a=Array.from({length:this.config.decoder_layers},(e,t)=>(0,p.cat)(i.map(e=>e[t]),2)),l=(0,p.stack)(t.map(([e,t])=>{if(e>=a.length)throw new Error(`Layer index ${e} is out of bounds for cross attentions (length ${a.length}).`);return n?a[e].slice(null,t,null,[0,n]):a[e].slice(null,t)})).transpose(1,0,2,3),[u,c]=(0,p.std_mean)(l,-2,0,!0),d=l.clone();for(let e=0;e<d.dims[0];++e){const t=d[e];for(let n=0;n<t.dims[0];++n){const r=t[n],i=u[e][n][0].data,a=c[e][n][0].data;for(let e=0;e<r.dims[0];++e){let t=r[e].data;for(let e=0;e<t.length;++e)t[e]=(t[e]-a[e])/i[e];t.set((0,m.medianFilter)(t,s))}}}const h=[(0,p.mean)(d,1)],f=e.sequences.dims,_=new p.Tensor("float32",new Float32Array(f[0]*f[1]),f);for(let e=0;e<f[0];++e){const t=h[e].neg().squeeze_(0),[n,s]=(0,m.dynamic_time_warping)(t.tolist()),i=Array.from({length:n.length-1},(e,t)=>n[t+1]-n[t]),a=(0,o.mergeArrays)([1],i).map(e=>!!e),l=[];for(let e=0;e<a.length;++e)a[e]&&l.push(s[e]*r);_[e].data.set(l,1)}return _}}class kn extends Mn{}class Tn extends U{requires_attention_mask=!1;main_input_name="input_values";forward_params=["input_values","decoder_input_ids","past_key_values"]}class $n extends Tn{}class Sn extends Tn{}class Cn extends U{main_input_name="pixel_values";forward_params=["pixel_values","decoder_input_ids","encoder_hidden_states","past_key_values"]}class En extends U{forward_params=["input_ids","attention_mask","pixel_values","position_ids","past_key_values"]}class Pn extends En{_merge_input_ids_with_image_features(e){const t=e.image_features.dims.at(-1),n=e.image_features.view(-1,t);return z({image_token_id:this.config.image_token_index,...e,image_features:n})}}class An extends Pn{}class In extends Pn{}class Fn extends U{forward_params=["input_ids","inputs_embeds","attention_mask","pixel_values","encoder_outputs","decoder_input_ids","decoder_inputs_embeds","decoder_attention_mask","past_key_values"];main_input_name="inputs_embeds"}class zn extends Fn{_merge_input_ids_with_image_features({inputs_embeds:e,image_features:t,input_ids:n,attention_mask:r}){return{inputs_embeds:(0,p.cat)([t,e],1),attention_mask:(0,p.cat)([(0,p.ones)(t.dims.slice(0,2)),r],1)}}async _prepare_inputs_embeds({input_ids:e,pixel_values:t,inputs_embeds:n,attention_mask:r}){if(!e&&!t)throw new Error("Either `input_ids` or `pixel_values` should be provided.");let s,i;return e&&(s=await this.encode_text({input_ids:e})),t&&(i=await this.encode_image({pixel_values:t})),s&&i?({inputs_embeds:n,attention_mask:r}=this._merge_input_ids_with_image_features({inputs_embeds:s,image_features:i,input_ids:e,attention_mask:r})):n=s||i,{inputs_embeds:n,attention_mask:r}}async forward({input_ids:e,pixel_values:t,attention_mask:n,decoder_input_ids:r,decoder_attention_mask:s,encoder_outputs:i,past_key_values:a,inputs_embeds:o,decoder_inputs_embeds:l}){if(o||({inputs_embeds:o,attention_mask:n}=await this._prepare_inputs_embeds({input_ids:e,pixel_values:t,inputs_embeds:o,attention_mask:n})),!i){let{last_hidden_state:e}=await P(this,{inputs_embeds:o,attention_mask:n});i=e}if(!l){if(!r)throw new Error("Either `decoder_input_ids` or `decoder_inputs_embeds` should be provided.");l=await this.encode_text({input_ids:r})}const u={inputs_embeds:l,attention_mask:s,encoder_attention_mask:n,encoder_hidden_states:i,past_key_values:a};return await I(this,u,!0)}}class On extends U{forward_params=["input_ids","attention_mask","pixel_values","position_ids","past_key_values"]}class Ln extends On{_merge_input_ids_with_image_features(e){const t=e.image_features.dims.at(-1),n=e.image_features.view(-1,t);return z({image_token_id:this.config.image_token_index,...e,image_features:n})}}class Bn extends En{_merge_input_ids_with_image_features(e){const t=e.image_features.dims.at(-1),n=e.image_features.view(-1,t);return z({image_token_id:this.config.image_token_index,...e,image_features:n})}}class Dn extends U{forward_params=["input_ids","attention_mask","inputs_embeds","per_layer_inputs","position_ids","pixel_values","input_features","input_features_mask","past_key_values"]}class Nn extends Dn{async forward({input_ids:e=null,attention_mask:t=null,pixel_values:n=null,input_features:r=null,input_features_mask:s=null,position_ids:i=null,inputs_embeds:a=null,per_layer_inputs:o=null,past_key_values:l=null,generation_config:u=null,logits_processor:c=null,...d}){if(!(a&&o||(({inputs_embeds:a,per_layer_inputs:o}=await T(this.sessions.embed_tokens,{input_ids:e})),1===e.dims[1]))){if(n){const{image_features:r}=await T(this.sessions.vision_encoder,{pixel_values:n});({inputs_embeds:a,attention_mask:t}=this._merge_input_ids_with_image_features({image_features:r,inputs_embeds:a,input_ids:e,attention_mask:t}))}if(r){const{audio_features:n}=await T(this.sessions.audio_encoder,{input_features:r,input_features_mask:s});({inputs_embeds:a,attention_mask:t}=this._merge_input_ids_with_audio_features({audio_features:n,inputs_embeds:a,input_ids:e,attention_mask:t}))}}return await I(this,{inputs_embeds:a,per_layer_inputs:o,past_key_values:l,attention_mask:t,position_ids:i,generation_config:u,logits_processor:c},!0)}_merge_input_ids_with_image_features(e){const t=e.image_features.dims.at(-1),n=e.image_features.view(-1,t);return z({image_token_id:this.config.image_token_id,...e,image_features:n})}_merge_input_ids_with_audio_features(e){const t=e.audio_features.dims.at(-1),n=e.audio_features.view(-1,t);return O({audio_token_id:this.config.audio_token_id,...e,audio_features:n})}}class jn extends U{forward_params=["input_ids","attention_mask","pixel_values","pixel_attention_mask","position_ids","past_key_values"]}class Rn extends jn{async encode_image({pixel_values:e,pixel_attention_mask:t}){return(await T(this.sessions.vision_encoder,{pixel_values:e,pixel_attention_mask:t})).image_features}_merge_input_ids_with_image_features(e){const t=e.image_features.dims.at(-1),n=e.image_features.view(-1,t);return z({image_token_id:this.config.image_token_id,...e,image_features:n})}}class Vn extends Rn{}class Gn extends U{forward_params=["input_ids","inputs_embeds","attention_mask","position_ids","pixel_values","image_sizes","past_key_values"]}class Un extends Gn{async forward({input_ids:e=null,attention_mask:t=null,pixel_values:n=null,image_sizes:r=null,position_ids:s=null,inputs_embeds:i=null,past_key_values:a=null,generation_config:o=null,logits_processor:l=null,...u}){if(!i){let t;if(n&&1!==e.dims[1]){if(!r)throw new Error("`image_sizes` must be provided when `pixel_values` is provided.");({image_features:t}=await T(this.sessions.vision_encoder,{pixel_values:n,image_sizes:r}))}else{const e=this.config.normalized_config.hidden_size;t=new p.Tensor("float32",[],[0,e])}({inputs_embeds:i}=await T(this.sessions.prepare_inputs_embeds,{input_ids:e,image_features:t}))}return await I(this,{inputs_embeds:i,past_key_values:a,attention_mask:t,position_ids:s,generation_config:o,logits_processor:l},!1)}}class qn extends U{}class Wn extends qn{}class Hn extends qn{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"text_model"})}}class Kn extends qn{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"text_model"})}}class Qn extends qn{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"vision_model"})}}class Xn extends qn{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"vision_model"})}}class Jn extends U{}class Yn extends Jn{}class Zn extends Jn{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"text_model"})}}class er extends qn{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"vision_model"})}}class tr extends U{}class nr extends tr{}class rr extends U{}class sr extends rr{async forward(e){const t=!e.input_ids,n=!e.pixel_values;if(t&&n)throw new Error("Either `input_ids` or `pixel_values` should be provided.");if(t&&(e.input_ids=(0,p.ones)([e.pixel_values.dims[0],1])),n){const{image_size:t}=this.config.vision_config;e.pixel_values=(0,p.full)([0,3,t,t],0)}const{text_embeddings:r,image_embeddings:s,l2norm_text_embeddings:i,l2norm_image_embeddings:a}=await super.forward(e),o={};return t||(o.text_embeddings=r,o.l2norm_text_embeddings=i),n||(o.image_embeddings=s,o.l2norm_image_embeddings=a),o}}class ir extends rr{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"text_model"})}}class ar extends rr{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"vision_model"})}}class or extends U{}class lr extends or{}class ur extends or{}class cr extends U{}class dr extends cr{}class pr extends cr{}class hr extends U{}class mr extends hr{}class fr extends hr{}class _r extends U{}class gr extends _r{}class wr extends _r{}class yr extends U{}class br extends yr{}class xr extends yr{}class vr extends U{}class Mr extends vr{}class kr extends vr{}class Tr extends U{}class $r extends Tr{}class Sr extends Tr{}class Cr extends U{}class Er extends Cr{}class Pr extends Cr{}class Ar extends U{}class Ir extends Ar{}class Fr extends Ar{}class zr extends U{}class Or extends zr{}class Lr extends U{}class Br extends Lr{}class Dr extends Lr{}class Nr extends U{}class jr extends Nr{}class Rr extends Nr{}class Vr extends U{}class Gr extends Vr{}class Ur extends Vr{}class qr extends U{}class Wr extends qr{}class Hr extends qr{}class Kr extends U{}class Qr extends Kr{}class Xr extends Kr{}class Jr extends U{}class Yr extends Jr{}class Zr extends Jr{}class es extends U{}class ts extends es{}class ns extends es{}class rs extends U{}class ss extends rs{}class is extends rs{}class as extends U{}class os extends as{}class ls extends as{}class us extends U{}class cs extends us{}class ds extends us{}class ps extends U{}class hs extends ps{}class ms extends ps{}class fs extends U{}class _s extends fs{}class gs extends fs{}class ws extends U{}class ys extends ws{}class bs extends ws{}class xs extends U{}class vs extends xs{}class Ms extends xs{}class ks extends U{}class Ts extends ks{}class $s extends ks{}class Ss extends U{}class Cs extends Ss{}class Es extends Ss{}class Ps extends U{}class As extends Ps{}class Is extends Ps{}class Fs extends U{}class zs extends Fs{}class Os extends Fs{}class Ls extends U{}class Bs extends Ls{}class Ds extends Ls{}class Ns extends U{}class js extends Ns{}class Rs extends Ns{}class Vs extends U{forward_params=["input_ids","attention_mask","position_ids","past_key_values","pixel_values","image_grid_thw"]}class Gs extends Vs{get_rope_index(e,t,n,r){const{vision_config:s,image_token_id:i,video_token_id:a,vision_start_token_id:o}=this.config,l=s.spatial_merge_size??2,u=[];if(t||n){let s=e.tolist();r||(r=(0,p.ones_like)(e));const c=r.tolist(),d=Array.from({length:3},t=>Array.from({length:e.dims[0]},t=>Array.from({length:e.dims[1]},e=>1))),h=t?t.tolist():[],f=n?n.tolist():[];let _=0,g=0;for(let e=0;e<s.length;++e){const t=s[e].filter((t,n)=>1==c[e][n]),n=t.reduce((e,t,n)=>(t==o&&e.push(n),e),[]).map(e=>t[e+1]),r=n.filter(e=>e==i).length,p=n.filter(e=>e==a).length;let w=[],y=0,b=r,x=p;for(let e=0;e<n.length;++e){const e=t.findIndex((e,t)=>t>y&&e==i),n=t.findIndex((e,t)=>t>y&&e==a),r=b>0&&-1!==e?e:t.length+1,s=x>0&&-1!==n?n:t.length+1;let o,u,c,d;r<s?([u,c,d]=h[_],++_,--b,o=r):([u,c,d]=f[g],++g,--x,o=s);const[p,v,M]=[Number(u),Math.floor(Number(c)/l),Math.floor(Number(d)/l)],k=o-y,T=w.length>0?(0,m.max)(w.at(-1))[0]+1:0;w.push(Array.from({length:3*k},(e,t)=>T+t%k));const $=k+T,S=p*v*M,C=Array.from({length:S},(e,t)=>$+Math.floor(t/(v*M))),E=Array.from({length:S},(e,t)=>$+Math.floor(t/M)%v),P=Array.from({length:S},(e,t)=>$+t%M);w.push([C,E,P].flat()),y=o+S}if(y<t.length){const e=w.length>0?(0,m.max)(w.at(-1))[0]+1:0,n=t.length-y;w.push(Array.from({length:3*n},(t,r)=>e+r%n))}const v=w.reduce((e,t)=>e+t.length,0),M=new Array(v);let k=0;for(let e=0;e<3;++e)for(let t=0;t<w.length;++t){const n=w[t],r=n.length/3;for(let t=e*r;t<(e+1)*r;++t)M[k++]=n[t]}let T=0;const $=c[e];for(let t=0;t<$.length;++t)if(1==$[t]){for(let n=0;n<3;++n)d[n][e][t]=M[n*v/3+T];++T}const S=(0,m.max)(M)[0];u.push(S+1-s[e].length)}return[new p.Tensor("int64",d.flat(1/0),[3,e.dims[0],e.dims[1]]),new p.Tensor("int64",u,[u.length,1])]}if(r){const{data:e,dims:t}=N(r),n=BigInt64Array.from({length:3*e.length},(t,n)=>e[n%e.length]),s=Array.from({length:t[0]},(n,r)=>(0,m.max)(e.subarray(t[1]*r,t[1]*(r+1)))[0]+1n+BigInt(t[1]));return[new p.Tensor("int64",n,[3,...t]),new p.Tensor("int64",s,[s.length,1])]}{const[t,n]=e.dims,r=BigInt64Array.from({length:3*t*n},(e,r)=>BigInt(Math.floor(r%n/t)));return[new p.Tensor("int64",r,[3,...e.dims]),(0,p.zeros)([t,1])]}}async encode_image({pixel_values:e,image_grid_thw:t}){return(await T(this.sessions.vision_encoder,{pixel_values:e,grid_thw:t})).image_features}_merge_input_ids_with_image_features(e){return z({image_token_id:this.config.image_token_id,...e})}prepare_inputs_for_generation(e,t,n){if(t.attention_mask&&!t.position_ids)if(t.past_key_values){t.pixel_values=null;const e=BigInt(Object.values(t.past_key_values)[0].dims.at(-2)),n=t.rope_deltas.map(t=>e+t);t.position_ids=(0,p.stack)([n,n,n],0)}else[t.position_ids,t.rope_deltas]=this.get_rope_index(t.input_ids,t.image_grid_thw,t.video_grid_thw,t.attention_mask);return t}}class Us extends U{}class qs extends Us{}class Ws extends Us{}class Hs extends U{}class Ks extends Hs{}class Qs extends Hs{}class Xs extends U{}class Js extends Xs{}class Ys extends Xs{}class Zs extends U{}class ei extends Zs{}class ti extends Zs{}class ni extends U{}class ri extends ni{}class si extends ni{}class ii extends U{}class ai extends ii{}class oi extends ii{async _call(e){return new dd(await super._call(e))}}class li extends U{}class ui extends li{}class ci extends li{async _call(e){return new dd(await super._call(e))}}class di extends U{}class pi extends di{}class hi extends U{}class mi extends hi{}class fi extends hi{async _call(e){return new dd(await super._call(e))}}class _i extends U{}class gi extends _i{}class wi extends U{}class yi extends wi{}class bi extends wi{async _call(e){return new dd(await super._call(e))}}class xi extends U{}class vi extends xi{}class Mi extends U{}class ki extends Mi{}class Ti extends Mi{async _call(e){return new dd(await super._call(e))}}class $i extends U{}class Si extends $i{async _call(e){return new wd(await super._call(e))}}class Ci extends U{}class Ei extends Ci{}class Pi extends Ci{async _call(e){return new dd(await super._call(e))}}class Ai extends U{}class Ii extends Ai{}class Fi extends Ai{async _call(e){return new dd(await super._call(e))}}class zi extends U{}class Oi extends zi{}class Li extends zi{}class Bi extends U{}class Di extends Bi{}class Ni extends Bi{}class ji extends U{}class Ri extends ji{}class Vi extends ji{async _call(e){return new dd(await super._call(e))}}class Gi extends U{}class Ui extends Gi{}class qi extends Gi{async _call(e){return new Hi(await super._call(e))}}class Wi extends Gi{async _call(e){return new Ki(await super._call(e))}}class Hi extends q{constructor({logits:e,pred_boxes:t}){super(),this.logits=e,this.pred_boxes=t}}class Ki extends q{constructor({logits:e,pred_boxes:t,pred_masks:n}){super(),this.logits=e,this.pred_boxes=t,this.pred_masks=n}}class Qi extends U{}class Xi extends Qi{}class Ji extends Qi{async _call(e){return new Yi(await super._call(e))}}class Yi extends q{constructor({logits:e,pred_boxes:t}){super(),this.logits=e,this.pred_boxes=t}}class Zi extends U{}class ea extends Zi{}class ta extends Zi{async _call(e){return new na(await super._call(e))}}class na extends Yi{}class ra extends U{}class sa extends ra{}class ia extends ra{async _call(e){return new aa(await super._call(e))}}class aa extends Yi{}class oa extends U{}class la extends oa{}class ua extends oa{async _call(e){return new Yi(await super._call(e))}}class ca extends U{}class da extends ca{}class pa extends ca{async _call(e){return new ha(await super._call(e))}}class ha extends Hi{}class ma extends U{}class fa extends ma{}class _a extends ma{async _call(e){return new dd(await super._call(e))}}class ga extends U{}class wa extends ga{}class ya extends ga{async _call(e){return new dd(await super._call(e))}}class ba extends U{}class xa extends ba{}class va extends ba{async _call(e){return new dd(await super._call(e))}}class Ma extends U{}class ka extends Ma{}class Ta extends Ma{async _call(e){return new dd(await super._call(e))}}class $a extends Ma{}class Sa extends U{}class Ca extends Sa{}class Ea extends Sa{}class Pa extends U{}class Aa extends Pa{}class Ia extends Pa{}class Fa extends U{}class za extends Fa{}class Oa extends U{}class La extends Oa{}class Ba extends Oa{}class Da extends Oa{}class Na extends U{}class ja extends Na{}class Ra extends U{}class Va extends Ra{}class Ga extends U{}class Ua extends Ga{}class qa extends U{}class Wa extends qa{}class Ha extends qa{}class Ka extends U{}class Qa extends Ka{}class Xa extends Ka{}class Ja extends U{}class Ya extends Ja{}class Za extends U{}class eo extends Za{}class to extends Za{async _call(e){return new dd(await super._call(e))}}class no extends U{}class ro extends no{}class so extends no{async _call(e){return new dd(await super._call(e))}}class io extends U{}class ao extends io{}class oo extends io{async _call(e){return new dd(await super._call(e))}}class lo extends U{}class uo extends lo{}class co extends lo{async _call(e){return new dd(await super._call(e))}}class po extends U{}class ho extends po{}class mo extends U{}class fo extends mo{}class _o extends U{}class go extends _o{}class wo extends U{}class yo extends wo{}class bo extends wo{async _call(e){return new xo(await super._call(e))}}class xo extends q{constructor({logits:e,pred_boxes:t}){super(),this.logits=e,this.pred_boxes=t}}class vo extends U{}class Mo extends vo{async get_image_embeddings({pixel_values:e}){return await P(this,{pixel_values:e})}async forward(e){if(e.image_embeddings&&e.image_positional_embeddings||(e={...e,...await this.get_image_embeddings(e)}),!e.input_labels&&e.input_points){const t=e.input_points.dims.slice(0,-1),n=t.reduce((e,t)=>e*t,1);e.input_labels=new p.Tensor("int64",new BigInt64Array(n).fill(1n),t)}const t={image_embeddings:e.image_embeddings,image_positional_embeddings:e.image_positional_embeddings};return e.input_points&&(t.input_points=e.input_points),e.input_labels&&(t.input_labels=e.input_labels),e.input_boxes&&(t.input_boxes=e.input_boxes),await T(this.sessions.prompt_encoder_mask_decoder,t)}async _call(e){return new ko(await super._call(e))}}class ko extends q{constructor({iou_scores:e,pred_masks:t}){super(),this.iou_scores=e,this.pred_masks=t}}class To extends U{}class $o extends To{}class So extends To{}class Co extends U{}class Eo extends Co{}class Po extends Co{}class Ao extends U{}class Io extends Ao{}class Fo extends Ao{async _call(e){return new _d(await super._call(e))}}class zo extends Ao{async _call(e){return new dd(await super._call(e))}}class Oo extends Ao{async _call(e){return new hd(await super._call(e))}}class Lo extends U{}class Bo extends Lo{async _call(e){return new _d(await super._call(e))}}class Do extends U{}class No extends Do{}class jo extends Do{async _call(e){return new hd(await super._call(e))}}class Ro extends U{}class Vo extends Ro{}class Go extends U{}class Uo extends Go{}class qo extends Go{async _call(e){return new _d(await super._call(e))}}class Wo extends Go{async _call(e){return new dd(await super._call(e))}}class Ho extends U{}class Ko extends Ho{}class Qo extends Ho{async _call(e){return new _d(await super._call(e))}}class Xo extends Ho{async _call(e){return new dd(await super._call(e))}}class Jo extends Ho{async _call(e){return new hd(await super._call(e))}}class Yo extends U{}class Zo extends Yo{}class el extends Yo{async _call(e){return new _d(await super._call(e))}}class tl extends Yo{async _call(e){return new dd(await super._call(e))}}class nl extends U{}class rl extends Ao{}class sl extends Ao{async _call(e){return new _d(await super._call(e))}}class il extends Ao{async _call(e){return new dd(await super._call(e))}}class al extends U{}class ol extends al{}class ll extends al{async _call(e){return new _d(await super._call(e))}}class ul extends al{async _call(e){return new dd(await super._call(e))}}class cl extends al{async _call(e){return new pd(await super._call(e))}}class dl extends al{async _call(e){return new hd(await super._call(e))}}class pl extends U{}class hl extends pl{}class ml extends U{}class fl extends ml{}class _l extends ml{}class gl extends ml{async generate_speech(e,t,{threshold:n=.5,minlenratio:r=0,maxlenratio:s=20,vocoder:i=null}={}){const a={input_ids:e},{encoder_outputs:o,encoder_attention_mask:l}=await P(this,a),u=o.dims[1]/this.config.reduction_factor,c=Math.floor(u*s),d=Math.floor(u*r),h=this.config.num_mel_bins;let m=[],f=null,_=null,g=0;for(;;){++g;const e=C(!!_);let r;r=_?_.output_sequence_out:new p.Tensor("float32",new Float32Array(h),[1,1,h]);let s={use_cache_branch:e,output_sequence:r,encoder_attention_mask:l,speaker_embeddings:t,encoder_hidden_states:o};this.addPastKeyValues(s,f),_=await T(this.sessions.decoder_model_merged,s),f=this.getPastKeyValues(_,f);const{prob:i,spectrum:a}=_;if(m.push(a),g>=d&&(Array.from(i.data).filter(e=>e>=n).length>0||g>=c))break}const w=(0,p.cat)(m),{waveform:y}=await T(i.sessions.model,{spectrogram:w});return{spectrogram:w,waveform:y}}}class wl extends U{main_input_name="spectrogram"}class yl extends U{}class bl extends yl{}class xl extends U{}class vl extends xl{}class Ml extends xl{}class kl extends U{}class Tl extends kl{}class $l extends kl{}class Sl extends U{}class Cl extends Sl{}class El extends Sl{}class Pl extends U{}class Al extends Pl{}class Il extends Pl{}class Fl extends U{}class zl extends Fl{}class Ol extends Fl{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"text_model"})}}class Ll extends Fl{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"audio_model"})}}class Bl extends U{}class Dl extends Bl{async _call(e){return new yd(await super._call(e))}}class Nl extends U{}class jl extends Nl{}class Rl extends Nl{}class Vl extends Nl{}class Gl extends U{}class Ul extends Gl{}class ql extends Gl{}class Wl extends U{}class Hl extends Wl{}class Kl extends Wl{async _call(e){return new dd(await super._call(e))}}class Ql extends U{}class Xl extends Ql{}class Jl extends Ql{}class Yl extends U{forward_params=["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"];_apply_and_filter_by_delay_pattern_mask(e){const[t,n]=e.dims,r=this.config.decoder.num_codebooks,s=n-r;let i=0;for(let t=0;t<e.size;++t){if(e.data[t]===this.config.decoder.pad_token_id)continue;const a=t%n-Math.floor(t/n)%r;a>0&&a<=s&&(e.data[i++]=e.data[t])}const a=Math.floor(t/r),o=i/(a*r);return new p.Tensor(e.type,e.data.slice(0,i),[a,r,o])}prepare_inputs_for_generation(e,t,n){let r=structuredClone(e);for(let e=0;e<r.length;++e)for(let t=0;t<r[e].length;++t)e%this.config.decoder.num_codebooks>=t&&(r[e][t]=BigInt(this.config.decoder.pad_token_id));return null!==n.guidance_scale&&n.guidance_scale>1&&(r=r.concat(r)),super.prepare_inputs_for_generation(r,t,n)}async generate(e){const t=await super.generate(e),n=this._apply_and_filter_by_delay_pattern_mask(t).unsqueeze_(0),{audio_values:r}=await T(this.sessions.encodec_decode,{audio_codes:n});return r}}class Zl extends U{}class eu extends Zl{}class tu extends Zl{async _call(e){return new dd(await super._call(e))}}class nu extends Zl{}class ru extends U{}class su extends ru{}class iu extends ru{async _call(e){return new dd(await super._call(e))}}class au extends ru{}class ou extends U{}class lu extends ou{}class uu extends ou{async _call(e){return new dd(await super._call(e))}}class cu extends ou{}class du extends U{}class pu extends du{}class hu extends du{async _call(e){return new dd(await super._call(e))}}class mu extends du{}class fu extends U{}class _u extends fu{}class gu extends U{}class wu extends gu{forward_params=["input_ids","pixel_values","images_seq_mask","images_emb_mask","attention_mask","position_ids","past_key_values"];constructor(...e){super(...e),this._generation_mode="text"}async forward(e){const t=this._generation_mode??"text";let n;if("text"!==t&&e.past_key_values){const t=this.sessions.gen_img_embeds,r=(0,o.pick)({image_ids:e.input_ids},t.inputNames);n=await T(t,r)}else{const t=this.sessions.prepare_inputs_embeds,r=(0,o.pick)(e,t.inputNames);n=await T(t,r)}const r={...e,...n},s=await I(this,r),i=this.sessions["text"===t?"lm_head":"gen_head"];if(!i)throw new Error(`Unable to find "${i}" generation head`);const a=await T(i,(0,o.pick)(s,i.inputNames));return{...n,...s,...a}}async generate(e){return this._generation_mode="text",super.generate(e)}async generate_images(e){this._generation_mode="image";const t=(e.inputs??e[this.main_input_name]).dims[1],n=(await super.generate(e)).slice(null,[t,null]),r=this.sessions.image_decode,{decoded_image:s}=await T(r,{generated_tokens:n}),i=s.add_(1).mul_(127.5).clamp_(0,255).to("uint8"),a=[];for(const e of i){const t=h.RawImage.fromTensor(e);a.push(t)}return a}}class yu extends q{constructor({char_logits:e,bpe_logits:t,wp_logits:n}){super(),this.char_logits=e,this.bpe_logits=t,this.wp_logits=n}get logits(){return[this.char_logits,this.bpe_logits,this.wp_logits]}}class bu extends U{}class xu extends bu{async _call(e){return new yu(await super._call(e))}}class vu extends U{}class Mu extends vu{}class ku extends vu{}class Tu extends U{}class $u extends Tu{}class Su extends Tu{}class Cu extends U{forward_params=["input_ids","attention_mask","position_ids","audio_values","past_key_values"]}class Eu extends Cu{_merge_input_ids_with_audio_features(e){const t=e.audio_features.dims.at(-1),n=e.audio_features.view(-1,t);return O({audio_token_id:this.config.ignore_index??this.config.audio_token_id,...e,audio_features:n})}}class Pu extends Eu{}class Au extends U{main_input_name="input_values";forward_params=["input_values"]}class Iu extends q{constructor({audio_codes:e}){super(),this.audio_codes=e}}class Fu extends q{constructor({audio_values:e}){super(),this.audio_values=e}}class zu extends Au{async encode(e){return new Iu(await T(this.sessions.encoder_model,e))}async decode(e){return new Fu(await T(this.sessions.decoder_model,e))}}class Ou extends Au{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"encoder_model"})}}class Lu extends Au{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"decoder_model"})}}class Bu extends U{main_input_name="input_values";forward_params=["input_values"]}class Du extends q{constructor({audio_codes:e}){super(),this.audio_codes=e}}class Nu extends q{constructor({audio_values:e}){super(),this.audio_values=e}}class ju extends Bu{async encode(e){return new Du(await T(this.sessions.encoder_model,e))}async decode(e){return new Nu(await T(this.sessions.decoder_model,e))}}class Ru extends Bu{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"encoder_model"})}}class Vu extends Bu{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"decoder_model"})}}class Gu extends U{main_input_name="input_values";forward_params=["input_values"]}class Uu extends Gu{async encode(e){return await T(this.sessions.encoder_model,e)}async decode(e){return await T(this.sessions.decoder_model,e)}}class qu extends Gu{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"encoder_model"})}}class Wu extends Gu{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"decoder_model"})}}class Hu{static MODEL_CLASS_MAPPINGS=null;static BASE_IF_FAIL=!1;static async from_pretrained(e,{progress_callback:t=null,config:n=null,cache_dir:s=null,local_files_only:i=!1,revision:a="main",model_file_name:o=null,subfolder:l="onnx",device:u=null,dtype:c=null,use_external_data_format:d=null,session_options:p={}}={}){const h={progress_callback:t,config:n,cache_dir:s,local_files_only:i,revision:a,model_file_name:o,subfolder:l,device:u,dtype:c,use_external_data_format:d,session_options:p};if(h.config=await r.AutoConfig.from_pretrained(e,h),!this.MODEL_CLASS_MAPPINGS)throw new Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);const m=h.config.model_type;for(const t of this.MODEL_CLASS_MAPPINGS){let n=t.get(m);if(!n){for(const e of t.values())if(e[0]===m){n=e;break}if(!n)continue}return await n[1].from_pretrained(e,h)}if(this.BASE_IF_FAIL)return Ic.has(m)||console.warn(`Unknown model class "${m}", attempting to construct from base class.`),await U.from_pretrained(e,h);throw Error(`Unsupported model type: ${m}`)}}const Ku=new Map([["bert",["BertModel",K]],["neobert",["NeoBertModel",ee]],["modernbert",["ModernBertModel",ae]],["nomic_bert",["NomicBertModel",me]],["roformer",["RoFormerModel",_e]],["electra",["ElectraModel",Ce]],["esm",["EsmModel",st]],["convbert",["ConvBertModel",ve]],["camembert",["CamembertModel",ze]],["deberta",["DebertaModel",je]],["deberta-v2",["DebertaV2Model",We]],["mpnet",["MPNetModel",mt]],["albert",["AlbertModel",Tt]],["distilbert",["DistilBertModel",Ye]],["roberta",["RobertaModel",en]],["xlm",["XLMModel",on]],["xlm-roberta",["XLMRobertaModel",hn]],["clap",["ClapModel",zl]],["clip",["CLIPModel",Wn]],["clipseg",["CLIPSegModel",lr]],["chinese_clip",["ChineseCLIPModel",nr]],["siglip",["SiglipModel",Yn]],["jina_clip",["JinaCLIPModel",sr]],["mobilebert",["MobileBertModel",ut]],["squeezebert",["SqueezeBertModel",bt]],["wav2vec2",["Wav2Vec2Model",Io]],["wav2vec2-bert",["Wav2Vec2BertModel",Zo]],["unispeech",["UniSpeechModel",Uo]],["unispeech-sat",["UniSpeechSatModel",Ko]],["hubert",["HubertModel",rl]],["wavlm",["WavLMModel",ol]],["audio-spectrogram-transformer",["ASTModel",yn]],["vits",["VitsModel",Dl]],["pyannote",["PyAnnoteModel",No]],["wespeaker-resnet",["WeSpeakerResNetModel",Vo]],["detr",["DetrModel",Ui]],["rt_detr",["RTDetrModel",Xi]],["rt_detr_v2",["RTDetrV2Model",ea]],["rf_detr",["RFDetrModel",sa]],["d_fine",["DFineModel",la]],["table-transformer",["TableTransformerModel",da]],["vit",["ViTModel",ai]],["ijepa",["IJepaModel",ui]],["pvt",["PvtModel",mi]],["vit_msn",["ViTMSNModel",yi]],["vit_mae",["ViTMAEModel",gi]],["groupvit",["GroupViTModel",vi]],["fastvit",["FastViTModel",ki]],["mobilevit",["MobileViTModel",Ei]],["mobilevitv2",["MobileViTV2Model",Ii]],["owlvit",["OwlViTModel",Oi]],["owlv2",["Owlv2Model",Di]],["beit",["BeitModel",Ri]],["deit",["DeiTModel",fa]],["hiera",["HieraModel",wa]],["convnext",["ConvNextModel",eo]],["convnextv2",["ConvNextV2Model",ro]],["dinov2",["Dinov2Model",ao]],["dinov2_with_registers",["Dinov2WithRegistersModel",uo]],["dinov3_vit",["DINOv3ViTModel",ho]],["dinov3_convnext",["DINOv3ConvNextModel",fo]],["resnet",["ResNetModel",xa]],["swin",["SwinModel",ka]],["swin2sr",["Swin2SRModel",Ca]],["donut-swin",["DonutSwinModel",Ya]],["yolos",["YolosModel",yo]],["dpt",["DPTModel",Aa]],["glpn",["GLPNModel",Qa]],["hifigan",["SpeechT5HifiGan",wl]],["efficientnet",["EfficientNetModel",Hl]],["decision_transformer",["DecisionTransformerModel",_u]],["patchtst",["PatchTSTForPrediction",Mu]],["patchtsmixer",["PatchTSMixerForPrediction",$u]],["mobilenet_v1",["MobileNetV1Model",eu]],["mobilenet_v2",["MobileNetV2Model",su]],["mobilenet_v3",["MobileNetV3Model",lu]],["mobilenet_v4",["MobileNetV4Model",pu]],["maskformer",["MaskFormerModel",Wa]],["mgp-str",["MgpstrForSceneTextRecognition",xu]],["style_text_to_speech_2",["StyleTextToSpeech2Model",hl]]]),Qu=new Map([["t5",["T5Model",Pt]],["longt5",["LongT5Model",Ft]],["mt5",["MT5Model",Lt]],["bart",["BartModel",Nt]],["mbart",["MBartModel",Gt]],["marian",["MarianModel",$o]],["whisper",["WhisperModel",vn]],["m2m_100",["M2M100Model",Eo]],["blenderbot",["BlenderbotModel",Kt]],["blenderbot-small",["BlenderbotSmallModel",Jt]]]),Xu=new Map([["mimi",["MimiModel",zu]],["dac",["DacModel",ju]],["snac",["SnacModel",Uu]]]),Ju=new Map([["bloom",["BloomModel",Js]],["jais",["JAISModel",mr]],["gpt2",["GPT2Model",dr]],["gptj",["GPTJModel",Mr]],["gpt_bigcode",["GPTBigCodeModel",$r]],["gpt_neo",["GPTNeoModel",gr]],["gpt_neox",["GPTNeoXModel",br]],["codegen",["CodeGenModel",Er]],["llama",["LlamaModel",Ir]],["nanochat",["NanoChatModel",Br]],["arcee",["ArceeModel",jr]],["lfm2",["Lfm2Model",Gr]],["smollm3",["SmolLM3Model",Wr]],["exaone",["ExaoneModel",ts]],["olmo",["OlmoModel",os]],["olmo2",["Olmo2Model",cs]],["mobilellm",["MobileLLMModel",ss]],["granite",["GraniteModel",hs]],["granitemoehybrid",["GraniteMoeHybridModel",_s]],["cohere",["CohereModel",ys]],["gemma",["GemmaModel",vs]],["gemma2",["Gemma2Model",Ts]],["vaultgemma",["VaultGemmaModel",Cs]],["gemma3_text",["Gemma3Model",As]],["helium",["HeliumModel",Qr]],["glm",["GlmModel",Yr]],["openelm",["OpenELMModel",zs]],["qwen2",["Qwen2Model",Bs]],["qwen3",["Qwen3Model",js]],["phi",["PhiModel",qs]],["phi3",["Phi3Model",Ks]],["mpt",["MptModel",ei]],["opt",["OPTModel",ri]],["mistral",["MistralModel",vl]],["ernie4_5",["Ernie4_5_Model",Tl]],["starcoder2",["Starcoder2Model",Cl]],["falcon",["FalconModel",Al]],["stablelm",["StableLmModel",Ul]],["modernbert-decoder",["ModernBertDecoderModel",de]]]),Yu=new Map([["speecht5",["SpeechT5ForSpeechToText",_l]],["whisper",["WhisperForConditionalGeneration",Mn]],["lite-whisper",["LiteWhisperForConditionalGeneration",kn]],["moonshine",["MoonshineForConditionalGeneration",Sn]]]),Zu=new Map([["speecht5",["SpeechT5ForTextToSpeech",gl]]]),ec=new Map([["vits",["VitsModel",Dl]],["musicgen",["MusicgenForConditionalGeneration",Yl]]]),tc=new Map([["bert",["BertForSequenceClassification",X]],["neobert",["NeoBertForSequenceClassification",ne]],["modernbert",["ModernBertForSequenceClassification",le]],["roformer",["RoFormerForSequenceClassification",we]],["electra",["ElectraForSequenceClassification",Pe]],["esm",["EsmForSequenceClassification",at]],["convbert",["ConvBertForSequenceClassification",ke]],["camembert",["CamembertForSequenceClassification",Le]],["deberta",["DebertaForSequenceClassification",Ve]],["deberta-v2",["DebertaV2ForSequenceClassification",Ke]],["mpnet",["MPNetForSequenceClassification",_t]],["albert",["AlbertForSequenceClassification",$t]],["distilbert",["DistilBertForSequenceClassification",Ze]],["roberta",["RobertaForSequenceClassification",nn]],["xlm",["XLMForSequenceClassification",un]],["xlm-roberta",["XLMRobertaForSequenceClassification",fn]],["bart",["BartForSequenceClassification",Rt]],["mbart",["MBartForSequenceClassification",qt]],["mobilebert",["MobileBertForSequenceClassification",dt]],["squeezebert",["SqueezeBertForSequenceClassification",vt]]]),nc=new Map([["bert",["BertForTokenClassification",J]],["neobert",["NeoBertForTokenClassification",re]],["modernbert",["ModernBertForTokenClassification",ue]],["roformer",["RoFormerForTokenClassification",ye]],["electra",["ElectraForTokenClassification",Ae]],["esm",["EsmForTokenClassification",ot]],["convbert",["ConvBertForTokenClassification",Te]],["camembert",["CamembertForTokenClassification",Be]],["deberta",["DebertaForTokenClassification",Ge]],["deberta-v2",["DebertaV2ForTokenClassification",Qe]],["mpnet",["MPNetForTokenClassification",gt]],["distilbert",["DistilBertForTokenClassification",et]],["roberta",["RobertaForTokenClassification",rn]],["xlm",["XLMForTokenClassification",cn]],["xlm-roberta",["XLMRobertaForTokenClassification",_n]]]),rc=new Map([["t5",["T5ForConditionalGeneration",At]],["longt5",["LongT5ForConditionalGeneration",zt]],["mt5",["MT5ForConditionalGeneration",Bt]],["bart",["BartForConditionalGeneration",jt]],["mbart",["MBartForConditionalGeneration",Ut]],["marian",["MarianMTModel",So]],["m2m_100",["M2M100ForConditionalGeneration",Po]],["blenderbot",["BlenderbotForConditionalGeneration",Qt]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",Yt]]]),sc=new Map([["bloom",["BloomForCausalLM",Ys]],["gpt2",["GPT2LMHeadModel",pr]],["jais",["JAISLMHeadModel",fr]],["gptj",["GPTJForCausalLM",kr]],["gpt_bigcode",["GPTBigCodeForCausalLM",Sr]],["gpt_neo",["GPTNeoForCausalLM",wr]],["gpt_neox",["GPTNeoXForCausalLM",xr]],["codegen",["CodeGenForCausalLM",Pr]],["llama",["LlamaForCausalLM",Fr]],["nanochat",["NanoChatForCausalLM",Dr]],["llama4_text",["Llama4ForCausalLM",Or]],["arcee",["ArceeForCausalLM",Rr]],["lfm2",["Lfm2ForCausalLM",Ur]],["smollm3",["SmolLM3ForCausalLM",Hr]],["exaone",["ExaoneForCausalLM",ns]],["olmo",["OlmoForCausalLM",ls]],["olmo2",["Olmo2ForCausalLM",ds]],["mobilellm",["MobileLLMForCausalLM",is]],["granite",["GraniteForCausalLM",ms]],["granitemoehybrid",["GraniteMoeHybridForCausalLM",gs]],["cohere",["CohereForCausalLM",bs]],["gemma",["GemmaForCausalLM",Ms]],["gemma2",["Gemma2ForCausalLM",$s]],["vaultgemma",["VaultGemmaForCausalLM",Es]],["gemma3_text",["Gemma3ForCausalLM",Is]],["helium",["HeliumForCausalLM",Xr]],["glm",["GlmForCausalLM",Zr]],["openelm",["OpenELMForCausalLM",Os]],["qwen2",["Qwen2ForCausalLM",Ds]],["qwen3",["Qwen3ForCausalLM",Rs]],["phi",["PhiForCausalLM",Ws]],["phi3",["Phi3ForCausalLM",Qs]],["mpt",["MptForCausalLM",ti]],["opt",["OPTForCausalLM",si]],["mbart",["MBartForCausalLM",Wt]],["mistral",["MistralForCausalLM",Ml]],["ernie4_5",["Ernie4_5_ForCausalLM",$l]],["starcoder2",["Starcoder2ForCausalLM",El]],["falcon",["FalconForCausalLM",Il]],["trocr",["TrOCRForCausalLM",bl]],["stablelm",["StableLmForCausalLM",ql]],["modernbert-decoder",["ModernBertDecoderForCausalLM",pe]],["phi3_v",["Phi3VForCausalLM",Un]]]),ic=new Map([["multi_modality",["MultiModalityCausalLM",wu]]]),ac=new Map([["bert",["BertForMaskedLM",Q]],["neobert",["NeoBertForMaskedLM",te]],["modernbert",["ModernBertForMaskedLM",oe]],["roformer",["RoFormerForMaskedLM",ge]],["electra",["ElectraForMaskedLM",Ee]],["esm",["EsmForMaskedLM",it]],["convbert",["ConvBertForMaskedLM",Me]],["camembert",["CamembertForMaskedLM",Oe]],["deberta",["DebertaForMaskedLM",Re]],["deberta-v2",["DebertaV2ForMaskedLM",He]],["mpnet",["MPNetForMaskedLM",ft]],["albert",["AlbertForMaskedLM",Ct]],["distilbert",["DistilBertForMaskedLM",nt]],["roberta",["RobertaForMaskedLM",tn]],["xlm",["XLMWithLMHeadModel",ln]],["xlm-roberta",["XLMRobertaForMaskedLM",mn]],["mobilebert",["MobileBertForMaskedLM",ct]],["squeezebert",["SqueezeBertForMaskedLM",xt]]]),oc=new Map([["bert",["BertForQuestionAnswering",Y]],["neobert",["NeoBertForQuestionAnswering",se]],["roformer",["RoFormerForQuestionAnswering",be]],["electra",["ElectraForQuestionAnswering",Ie]],["convbert",["ConvBertForQuestionAnswering",$e]],["camembert",["CamembertForQuestionAnswering",De]],["deberta",["DebertaForQuestionAnswering",Ue]],["deberta-v2",["DebertaV2ForQuestionAnswering",Xe]],["mpnet",["MPNetForQuestionAnswering",wt]],["albert",["AlbertForQuestionAnswering",St]],["distilbert",["DistilBertForQuestionAnswering",tt]],["roberta",["RobertaForQuestionAnswering",sn]],["xlm",["XLMForQuestionAnswering",dn]],["xlm-roberta",["XLMRobertaForQuestionAnswering",gn]],["mobilebert",["MobileBertForQuestionAnswering",pt]],["squeezebert",["SqueezeBertForQuestionAnswering",Mt]]]),lc=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",Cn]],["idefics3",["Idefics3ForConditionalGeneration",Rn]],["smolvlm",["SmolVLMForConditionalGeneration",Vn]]]),uc=new Map([["llava",["LlavaForConditionalGeneration",Pn]],["llava_onevision",["LlavaOnevisionForConditionalGeneration",An]],["moondream1",["Moondream1ForConditionalGeneration",In]],["florence2",["Florence2ForConditionalGeneration",zn]],["qwen2-vl",["Qwen2VLForConditionalGeneration",Gs]],["idefics3",["Idefics3ForConditionalGeneration",Rn]],["smolvlm",["SmolVLMForConditionalGeneration",Vn]],["paligemma",["PaliGemmaForConditionalGeneration",Ln]],["llava_qwen2",["LlavaQwen2ForCausalLM",Bn]],["gemma3n",["Gemma3nForConditionalGeneration",Nn]]]),cc=new Map([["ultravox",["UltravoxModel",Eu]],["voxtral",["VoxtralForConditionalGeneration",Pu]]]),dc=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",Cn]]]),pc=new Map([["vit",["ViTForImageClassification",oi]],["ijepa",["IJepaForImageClassification",ci]],["pvt",["PvtForImageClassification",fi]],["vit_msn",["ViTMSNForImageClassification",bi]],["fastvit",["FastViTForImageClassification",Ti]],["mobilevit",["MobileViTForImageClassification",Pi]],["mobilevitv2",["MobileViTV2ForImageClassification",Fi]],["beit",["BeitForImageClassification",Vi]],["deit",["DeiTForImageClassification",_a]],["hiera",["HieraForImageClassification",ya]],["convnext",["ConvNextForImageClassification",to]],["convnextv2",["ConvNextV2ForImageClassification",so]],["dinov2",["Dinov2ForImageClassification",oo]],["dinov2_with_registers",["Dinov2WithRegistersForImageClassification",co]],["resnet",["ResNetForImageClassification",va]],["swin",["SwinForImageClassification",Ta]],["segformer",["SegformerForImageClassification",Rl]],["efficientnet",["EfficientNetForImageClassification",Kl]],["mobilenet_v1",["MobileNetV1ForImageClassification",tu]],["mobilenet_v2",["MobileNetV2ForImageClassification",iu]],["mobilenet_v3",["MobileNetV3ForImageClassification",uu]],["mobilenet_v4",["MobileNetV4ForImageClassification",hu]]]),hc=new Map([["detr",["DetrForObjectDetection",qi]],["rt_detr",["RTDetrForObjectDetection",Ji]],["rt_detr_v2",["RTDetrV2ForObjectDetection",ta]],["rf_detr",["RFDetrForObjectDetection",ia]],["d_fine",["DFineForObjectDetection",ua]],["table-transformer",["TableTransformerForObjectDetection",pa]],["yolos",["YolosForObjectDetection",bo]]]),mc=new Map([["owlvit",["OwlViTForObjectDetection",Li]],["owlv2",["Owlv2ForObjectDetection",Ni]],["grounding-dino",["GroundingDinoForObjectDetection",go]]]),fc=new Map([["detr",["DetrForSegmentation",Wi]],["clipseg",["CLIPSegForImageSegmentation",ur]]]),_c=new Map([["segformer",["SegformerForSemanticSegmentation",Vl]],["sapiens",["SapiensForSemanticSegmentation",La]],["swin",["SwinForSemanticSegmentation",$a]],["mobilenet_v1",["MobileNetV1ForSemanticSegmentation",nu]],["mobilenet_v2",["MobileNetV2ForSemanticSegmentation",au]],["mobilenet_v3",["MobileNetV3ForSemanticSegmentation",cu]],["mobilenet_v4",["MobileNetV4ForSemanticSegmentation",mu]]]),gc=new Map([["detr",["DetrForSegmentation",Wi]],["maskformer",["MaskFormerForInstanceSegmentation",Ha]]]),wc=new Map([["sam",["SamModel",Mo]]]),yc=new Map([["wav2vec2",["Wav2Vec2ForCTC",Fo]],["wav2vec2-bert",["Wav2Vec2BertForCTC",el]],["unispeech",["UniSpeechForCTC",qo]],["unispeech-sat",["UniSpeechSatForCTC",Qo]],["wavlm",["WavLMForCTC",ll]],["hubert",["HubertForCTC",sl]],["parakeet_ctc",["ParakeetForCTC",Bo]]]),bc=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",zo]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",tl]],["unispeech",["UniSpeechForSequenceClassification",Wo]],["unispeech-sat",["UniSpeechSatForSequenceClassification",Xo]],["wavlm",["WavLMForSequenceClassification",ul]],["hubert",["HubertForSequenceClassification",il]],["audio-spectrogram-transformer",["ASTForAudioClassification",bn]]]),xc=new Map([["wavlm",["WavLMForXVector",cl]]]),vc=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",Jo]],["wavlm",["WavLMForAudioFrameClassification",dl]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",Oo]],["pyannote",["PyAnnoteForAudioFrameClassification",jo]]]),Mc=new Map([["vitmatte",["VitMatteForImageMatting",Si]]]),kc=new Map([["patchtst",["PatchTSTForPrediction",ku]],["patchtsmixer",["PatchTSMixerForPrediction",Su]]]),Tc=new Map([["swin2sr",["Swin2SRForImageSuperResolution",Ea]]]),$c=new Map([["dpt",["DPTForDepthEstimation",Ia]],["depth_anything",["DepthAnythingForDepthEstimation",za]],["glpn",["GLPNForDepthEstimation",Xa]],["sapiens",["SapiensForDepthEstimation",Ba]],["depth_pro",["DepthProForDepthEstimation",ja]],["metric3d",["Metric3DForDepthEstimation",Va]],["metric3dv2",["Metric3Dv2ForDepthEstimation",Ua]]]),Sc=new Map([["sapiens",["SapiensForNormalEstimation",Da]]]),Cc=new Map([["vitpose",["VitPoseForPoseEstimation",pi]]]),Ec=new Map([["clip",["CLIPVisionModelWithProjection",Xn]],["siglip",["SiglipVisionModel",er]],["jina_clip",["JinaCLIPVisionModel",ar]]]),Pc=[[Ku,0],[Qu,1],[Ju,4],[Xu,11],[tc,0],[nc,0],[rc,2],[Yu,2],[sc,4],[ic,8],[ac,0],[oc,0],[lc,3],[uc,6],[cc,10],[pc,0],[fc,0],[gc,0],[_c,0],[Mc,0],[kc,0],[Tc,0],[$c,0],[Sc,0],[Cc,0],[hc,0],[mc,0],[wc,5],[yc,0],[bc,0],[Zu,2],[ec,0],[xc,0],[vc,0],[Ec,0]];for(const[e,t]of Pc)for(const[n,r]of e.values())b.set(n,t),v.set(r,n),x.set(n,r);const Ac=[["MusicgenForConditionalGeneration",Yl,7],["Phi3VForCausalLM",Un,9],["CLIPTextModelWithProjection",Kn,0],["SiglipTextModel",Zn,0],["JinaCLIPTextModel",ir,0],["ClapTextModelWithProjection",Ol,0],["ClapAudioModelWithProjection",Ll,0],["DacEncoderModel",Ru,0],["DacDecoderModel",Vu,0],["MimiEncoderModel",Ou,0],["MimiDecoderModel",Lu,0],["SnacEncoderModel",qu,0],["SnacDecoderModel",Wu,0],["Gemma3nForConditionalGeneration",Nn,12]];for(const[e,t,n]of Ac)b.set(e,n),v.set(t,e),x.set(e,t);const Ic=new Map([["modnet",fc],["birefnet",fc],["isnet",fc],["ben",fc]]);for(const[e,t]of Ic.entries())t.set(e,["PreTrainedModel",U]),b.set(e,0),v.set(U,e),x.set(e,U);class Fc extends Hu{static MODEL_CLASS_MAPPINGS=Pc.map(e=>e[0]);static BASE_IF_FAIL=!0}class zc extends Hu{static MODEL_CLASS_MAPPINGS=[tc]}class Oc extends Hu{static MODEL_CLASS_MAPPINGS=[nc]}class Lc extends Hu{static MODEL_CLASS_MAPPINGS=[rc]}class Bc extends Hu{static MODEL_CLASS_MAPPINGS=[Yu]}class Dc extends Hu{static MODEL_CLASS_MAPPINGS=[Zu]}class Nc extends Hu{static MODEL_CLASS_MAPPINGS=[ec]}class jc extends Hu{static MODEL_CLASS_MAPPINGS=[sc]}class Rc extends Hu{static MODEL_CLASS_MAPPINGS=[ac]}class Vc extends Hu{static MODEL_CLASS_MAPPINGS=[oc]}class Gc extends Hu{static MODEL_CLASS_MAPPINGS=[lc]}class Uc extends Hu{static MODEL_CLASS_MAPPINGS=[pc]}class qc extends Hu{static MODEL_CLASS_MAPPINGS=[fc]}class Wc extends Hu{static MODEL_CLASS_MAPPINGS=[_c]}class Hc extends Hu{static MODEL_CLASS_MAPPINGS=[gc]}class Kc extends Hu{static MODEL_CLASS_MAPPINGS=[hc]}class Qc extends Hu{static MODEL_CLASS_MAPPINGS=[mc]}class Xc extends Hu{static MODEL_CLASS_MAPPINGS=[wc]}class Jc extends Hu{static MODEL_CLASS_MAPPINGS=[yc]}class Yc extends Hu{static MODEL_CLASS_MAPPINGS=[bc]}class Zc extends Hu{static MODEL_CLASS_MAPPINGS=[xc]}class ed extends Hu{static MODEL_CLASS_MAPPINGS=[vc]}class td extends Hu{static MODEL_CLASS_MAPPINGS=[dc]}class nd extends Hu{static MODEL_CLASS_MAPPINGS=[Mc]}class rd extends Hu{static MODEL_CLASS_MAPPINGS=[Tc]}class sd extends Hu{static MODEL_CLASS_MAPPINGS=[$c]}class id extends Hu{static MODEL_CLASS_MAPPINGS=[Sc]}class ad extends Hu{static MODEL_CLASS_MAPPINGS=[Cc]}class od extends Hu{static MODEL_CLASS_MAPPINGS=[Ec]}class ld extends Hu{static MODEL_CLASS_MAPPINGS=[uc]}class ud extends Hu{static MODEL_CLASS_MAPPINGS=[cc]}class cd extends q{constructor({logits:e,past_key_values:t,encoder_outputs:n,decoder_attentions:r=null,cross_attentions:s=null}){super(),this.logits=e,this.past_key_values=t,this.encoder_outputs=n,this.decoder_attentions=r,this.cross_attentions=s}}class dd extends q{constructor({logits:e,...t}){super(),this.logits=e;const n=Object.values(t);n.length>0&&(this.attentions=n)}}class pd extends q{constructor({logits:e,embeddings:t}){super(),this.logits=e,this.embeddings=t}}class hd extends q{constructor({logits:e}){super(),this.logits=e}}class md extends q{constructor({logits:e}){super(),this.logits=e}}class fd extends q{constructor({start_logits:e,end_logits:t}){super(),this.start_logits=e,this.end_logits=t}}class _d extends q{constructor({logits:e}){super(),this.logits=e}}class gd extends q{constructor({logits:e,past_key_values:t}){super(),this.logits=e,this.past_key_values=t}}class wd extends q{constructor({alphas:e}){super(),this.alphas=e}}class yd extends q{constructor({waveform:e,spectrogram:t}){super(),this.waveform=e,this.spectrogram=t}}},"./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js":(e,t,n)=>{n.r(t),n.d(t,{ASTFeatureExtractor:()=>i});var r=n("./src/base/feature_extraction_utils.js"),s=(n("./src/utils/tensor.js"),n("./src/utils/audio.js"));class i extends r.FeatureExtractor{constructor(e){super(e);const t=this.config.sampling_rate,n=(0,s.mel_filter_bank)(257,this.config.num_mel_bins,20,Math.floor(t/2),t,null,"kaldi",!0);this.mel_filters=n,this.window=(0,s.window_function)(400,"hann",{periodic:!1}),this.mean=this.config.mean,this.std=this.config.std}async _extract_fbank_features(e,t){return(0,s.spectrogram)(e,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1.192092955078125e-7,remove_dc_offset:!0,max_num_frames:t,transpose:!0})}async _call(e){(0,r.validate_audio_inputs)(e,"ASTFeatureExtractor");const t=await this._extract_fbank_features(e,this.config.max_length);if(this.config.do_normalize){const e=2*this.std,n=t.data;for(let t=0;t<n.length;++t)n[t]=(n[t]-this.mean)/e}return{input_values:t.unsqueeze_(0)}}}},"./src/models/auto/feature_extraction_auto.js":(e,t,n)=>{n.r(t),n.d(t,{AutoFeatureExtractor:()=>a});var r=n("./src/utils/constants.js"),s=n("./src/utils/hub.js"),i=(n("./src/base/feature_extraction_utils.js"),n("./src/models/feature_extractors.js"));class a{static async from_pretrained(e,t={}){const n=await(0,s.getModelJSON)(e,r.FEATURE_EXTRACTOR_NAME,!0,t),a=n.feature_extractor_type,o=i[a];if(!o)throw new Error(`Unknown feature_extractor_type: '${a}'. Please report this at ${r.GITHUB_ISSUE_URL}.`);return new o(n)}}},"./src/models/auto/image_processing_auto.js":(e,t,n)=>{n.r(t),n.d(t,{AutoImageProcessor:()=>o});var r=n("./src/utils/constants.js"),s=n("./src/utils/hub.js"),i=n("./src/base/image_processors_utils.js"),a=n("./src/models/image_processors.js");class o{static async from_pretrained(e,t={}){const n=await(0,s.getModelJSON)(e,r.IMAGE_PROCESSOR_NAME,!0,t),o=n.image_processor_type??n.feature_extractor_type;let l=a[o?.replace(/Fast$/,"")];return l||(void 0!==o&&console.warn(`Image processor type '${o}' not found, assuming base ImageProcessor. Please report this at ${r.GITHUB_ISSUE_URL}.`),l=i.ImageProcessor),new l(n)}}},"./src/models/auto/processing_auto.js":(e,t,n)=>{n.r(t),n.d(t,{AutoProcessor:()=>u});var r=n("./src/utils/constants.js"),s=n("./src/utils/hub.js"),i=n("./src/base/processing_utils.js"),a=n("./src/models/processors.js"),o=n("./src/models/image_processors.js"),l=n("./src/models/feature_extractors.js");class u{static async from_pretrained(e,t={}){const n=await(0,s.getModelJSON)(e,r.IMAGE_PROCESSOR_NAME,!0,t),{image_processor_type:u,feature_extractor_type:c,processor_class:d}=n;if(d&&a[d])return a[d].from_pretrained(e,t);if(!u&&!c)throw new Error("No `image_processor_type` or `feature_extractor_type` found in the config.");const p={};if(u){const e=o[u.replace(/Fast$/,"")];if(!e)throw new Error(`Unknown image_processor_type: '${u}'.`);p.image_processor=new e(n)}if(c){const e=o[c];if(e)p.image_processor=new e(n);else{const e=l[c];if(!e)throw new Error(`Unknown feature_extractor_type: '${c}'.`);p.feature_extractor=new e(n)}}return new i.Processor({},p,null)}}},"./src/models/beit/image_processing_beit.js":(e,t,n)=>{n.r(t),n.d(t,{BeitFeatureExtractor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}},"./src/models/bit/image_processing_bit.js":(e,t,n)=>{n.r(t),n.d(t,{BitImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}},"./src/models/chinese_clip/image_processing_chinese_clip.js":(e,t,n)=>{n.r(t),n.d(t,{ChineseCLIPFeatureExtractor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}},"./src/models/clap/feature_extraction_clap.js":(e,t,n)=>{n.r(t),n.d(t,{ClapFeatureExtractor:()=>i});var r=n("./src/base/feature_extraction_utils.js"),s=(n("./src/utils/tensor.js"),n("./src/utils/audio.js"));class i extends r.FeatureExtractor{constructor(e){super(e),this.mel_filters=(0,s.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,null,"htk"),this.mel_filters_slaney=(0,s.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,"slaney","slaney"),this.window=(0,s.window_function)(this.config.fft_window_size,"hann")}async _get_input_mel(e,t,n,r){let s,i=!1;const a=e.length-t;if(a>0){if("rand_trunc"!==n)throw new Error(`Truncation strategy "${n}" not implemented`);{i=!0;const n=Math.floor(Math.random()*(a+1));e=e.subarray(n,n+t),s=await this._extract_fbank_features(e,this.mel_filters_slaney,this.config.nb_max_samples)}}else{if(a<0){let n=new Float64Array(t);if(n.set(e),"repeat"===r)for(let r=e.length;r<t;r+=e.length)n.set(e.subarray(0,Math.min(e.length,t-r)),r);else if("repeatpad"===r)for(let t=e.length;t<-a;t+=e.length)n.set(e,t);e=n}if("fusion"===n)throw new Error(`Truncation strategy "${n}" not implemented`);s=await this._extract_fbank_features(e,this.mel_filters_slaney,this.config.nb_max_samples)}return s.unsqueeze_(0)}async _extract_fbank_features(e,t,n=null){return(0,s.spectrogram)(e,this.window,this.config.fft_window_size,this.config.hop_length,{power:2,mel_filters:t,log_mel:"dB",max_num_frames:n,do_pad:!1,transpose:!0})}async _call(e,{max_length:t=null}={}){return(0,r.validate_audio_inputs)(e,"ClapFeatureExtractor"),{input_features:(await this._get_input_mel(e,t??this.config.nb_max_samples,this.config.truncation,this.config.padding)).unsqueeze_(0)}}}},"./src/models/clip/image_processing_clip.js":(e,t,n)=>{n.r(t),n.d(t,{CLIPFeatureExtractor:()=>i,CLIPImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}class i extends s{}},"./src/models/convnext/image_processing_convnext.js":(e,t,n)=>{n.r(t),n.d(t,{ConvNextFeatureExtractor:()=>i,ConvNextImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{constructor(e){super(e),this.crop_pct=this.config.crop_pct??.875}async resize(e){const t=this.size?.shortest_edge;if(void 0===t)throw new Error("Size dictionary must contain 'shortest_edge' key.");if(t<384){const n=Math.floor(t/this.crop_pct),[r,s]=this.get_resize_output_image_size(e,{shortest_edge:n});e=await e.resize(r,s,{resample:this.resample}),e=await e.center_crop(t,t)}else e=await e.resize(t,t,{resample:this.resample});return e}}class i extends s{}},"./src/models/dac/feature_extraction_dac.js":(e,t,n)=>{n.r(t),n.d(t,{DacFeatureExtractor:()=>s});var r=n("./src/models/encodec/feature_extraction_encodec.js");class s extends r.EncodecFeatureExtractor{}},"./src/models/deit/image_processing_deit.js":(e,t,n)=>{n.r(t),n.d(t,{DeiTFeatureExtractor:()=>i,DeiTImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}class i extends s{}},"./src/models/detr/image_processing_detr.js":(e,t,n)=>{n.r(t),n.d(t,{DetrFeatureExtractor:()=>a,DetrImageProcessor:()=>i});var r=n("./src/base/image_processors_utils.js"),s=n("./src/utils/tensor.js");class i extends r.ImageProcessor{async _call(e){const t=await super._call(e),n=[t.pixel_values.dims[0],64,64],r=(0,s.full)(n,1n);return{...t,pixel_mask:r}}post_process_object_detection(...e){return(0,r.post_process_object_detection)(...e)}post_process_panoptic_segmentation(...e){return(0,r.post_process_panoptic_segmentation)(...e)}post_process_instance_segmentation(...e){return(0,r.post_process_instance_segmentation)(...e)}}class a extends i{}},"./src/models/dinov3_vit/image_processing_dinov3_vit.js":(e,t,n)=>{n.r(t),n.d(t,{DINOv3ViTImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}},"./src/models/donut/image_processing_donut.js":(e,t,n)=>{n.r(t),n.d(t,{DonutFeatureExtractor:()=>i,DonutImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{pad_image(e,t,n,r={}){const[s,i,a]=t;let o=this.image_mean;Array.isArray(this.image_mean)||(o=new Array(a).fill(o));let l=this.image_std;Array.isArray(l)||(l=new Array(a).fill(o));const u=o.map((e,t)=>-e/l[t]);return super.pad_image(e,t,n,{center:!0,constant_values:u,...r})}}class i extends s{}},"./src/models/dpt/image_processing_dpt.js":(e,t,n)=>{n.r(t),n.d(t,{DPTFeatureExtractor:()=>i,DPTImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}class i extends s{}},"./src/models/efficientnet/image_processing_efficientnet.js":(e,t,n)=>{n.r(t),n.d(t,{EfficientNetImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{constructor(e){super(e),this.include_top=this.config.include_top??!0,this.include_top&&(this.image_std=this.image_std.map(e=>e*e))}}},"./src/models/encodec/feature_extraction_encodec.js":(e,t,n)=>{n.r(t),n.d(t,{EncodecFeatureExtractor:()=>i});var r=n("./src/base/feature_extraction_utils.js"),s=n("./src/utils/tensor.js");class i extends r.FeatureExtractor{async _call(e){(0,r.validate_audio_inputs)(e,"EncodecFeatureExtractor"),e instanceof Float64Array&&(e=new Float32Array(e));const t=this.config.feature_size;if(e.length%t!==0)throw new Error(`The length of the audio data must be a multiple of the number of channels (${t}).`);const n=[1,t,e.length/t];return{input_values:new s.Tensor("float32",e,n)}}}},"./src/models/feature_extractors.js":(e,t,n)=>{n.r(t),n.d(t,{ASTFeatureExtractor:()=>r.ASTFeatureExtractor,ClapFeatureExtractor:()=>i.ClapFeatureExtractor,DacFeatureExtractor:()=>a.DacFeatureExtractor,EncodecFeatureExtractor:()=>s.EncodecFeatureExtractor,Gemma3nAudioFeatureExtractor:()=>o.Gemma3nAudioFeatureExtractor,ImageFeatureExtractor:()=>g.ImageProcessor,MoonshineFeatureExtractor:()=>l.MoonshineFeatureExtractor,ParakeetFeatureExtractor:()=>u.ParakeetFeatureExtractor,PyAnnoteFeatureExtractor:()=>c.PyAnnoteFeatureExtractor,SeamlessM4TFeatureExtractor:()=>d.SeamlessM4TFeatureExtractor,SnacFeatureExtractor:()=>p.SnacFeatureExtractor,SpeechT5FeatureExtractor:()=>h.SpeechT5FeatureExtractor,Wav2Vec2FeatureExtractor:()=>m.Wav2Vec2FeatureExtractor,WeSpeakerFeatureExtractor:()=>f.WeSpeakerFeatureExtractor,WhisperFeatureExtractor:()=>_.WhisperFeatureExtractor});var r=n("./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js"),s=n("./src/models/encodec/feature_extraction_encodec.js"),i=n("./src/models/clap/feature_extraction_clap.js"),a=n("./src/models/dac/feature_extraction_dac.js"),o=n("./src/models/gemma3n/feature_extraction_gemma3n.js"),l=n("./src/models/moonshine/feature_extraction_moonshine.js"),u=n("./src/models/parakeet/feature_extraction_parakeet.js"),c=n("./src/models/pyannote/feature_extraction_pyannote.js"),d=n("./src/models/seamless_m4t/feature_extraction_seamless_m4t.js"),p=n("./src/models/snac/feature_extraction_snac.js"),h=n("./src/models/speecht5/feature_extraction_speecht5.js"),m=n("./src/models/wav2vec2/feature_extraction_wav2vec2.js"),f=n("./src/models/wespeaker/feature_extraction_wespeaker.js"),_=n("./src/models/whisper/feature_extraction_whisper.js"),g=n("./src/base/image_processors_utils.js")},"./src/models/florence2/processing_florence2.js":(e,t,n)=>{n.r(t),n.d(t,{Florence2Processor:()=>a});var r=n("./src/base/processing_utils.js"),s=n("./src/models/auto/image_processing_auto.js"),i=n("./src/tokenizers.js");class a extends r.Processor{static tokenizer_class=i.AutoTokenizer;static image_processor_class=s.AutoImageProcessor;constructor(e,t,n){super(e,t,n);const{tasks_answer_post_processing_type:r,task_prompts_without_inputs:s,task_prompts_with_input:i}=this.image_processor.config;this.tasks_answer_post_processing_type=new Map(Object.entries(r??{})),this.task_prompts_without_inputs=new Map(Object.entries(s??{})),this.task_prompts_with_input=new Map(Object.entries(i??{})),this.regexes={quad_boxes:/(.+?)<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm,bboxes:/([^<]+)?<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm},this.size_per_bin=1e3}construct_prompts(e){"string"==typeof e&&(e=[e]);const t=[];for(const n of e)if(this.task_prompts_without_inputs.has(n))t.push(this.task_prompts_without_inputs.get(n));else{for(const[e,r]of this.task_prompts_with_input)if(n.includes(e)){t.push(r.replaceAll("{input}",n).replaceAll(e,""));break}t.length!==e.length&&t.push(n)}return t}post_process_generation(e,t,n){const r=this.tasks_answer_post_processing_type.get(t)??"pure_text";let s;switch(e=e.replaceAll("<s>","").replaceAll("</s>",""),r){case"pure_text":s=e;break;case"description_with_bboxes":case"bboxes":case"phrase_grounding":case"ocr":const i="ocr"===r?"quad_boxes":"bboxes",a=e.matchAll(this.regexes[i]),o=[],l=[];for(const[e,t,...r]of a)o.push(t?t.trim():o.at(-1)??""),l.push(r.map((e,t)=>(Number(e)+.5)/this.size_per_bin*n[t%2]));s={labels:o,[i]:l};break;default:throw new Error(`Task "${t}" (of type "${r}") not yet implemented.`)}return{[t]:s}}async _call(e,t=null,n={}){if(!e&&!t)throw new Error("Either text or images must be provided");return{...await this.image_processor(e,n),...t?this.tokenizer(this.construct_prompts(t),n):{}}}}},"./src/models/gemma3n/feature_extraction_gemma3n.js":(e,t,n)=>{n.r(t),n.d(t,{Gemma3nAudioFeatureExtractor:()=>a});var r=n("./src/base/feature_extraction_utils.js"),s=n("./src/utils/tensor.js"),i=n("./src/utils/audio.js");class a extends r.FeatureExtractor{constructor(e){super(e);const{fft_length:t,feature_size:n,min_frequency:r,max_frequency:s,sampling_rate:a,frame_length:o}=this.config,l=(0,i.mel_filter_bank)(Math.floor(1+t/2),n,r,s,a,null,"htk",!1);this.mel_filters=l,this.window=(0,i.window_function)(o,"hann")}async _extract_fbank_features(e,t){return(0,i.spectrogram)(e,this.window,this.config.frame_length,this.config.hop_length,{fft_length:this.config.fft_length,center:!1,onesided:!0,preemphasis:this.config.preemphasis,preemphasis_htk_flavor:this.config.preemphasis_htk_flavor,mel_filters:this.mel_filters,log_mel:"log",mel_floor:this.config.mel_floor,remove_dc_offset:!1,transpose:!0})}async _call(e,{max_length:t=48e4,truncation:n=!0,padding:i=!0,pad_to_multiple_of:a=128}={}){if((0,r.validate_audio_inputs)(e,"Gemma3nAudioFeatureExtractor"),n&&e.length>t&&(e=e.slice(0,t)),i&&e.length%a!==0){const t=a-e.length%a,n=new Float64Array(e.length+t);n.set(e),0!==this.config.padding_value&&n.fill(this.config.padding_value,e.length),e=n}const o=await this._extract_fbank_features(e,this.config.max_length),l=(0,s.full)([1,o.dims[0]],!0);return{input_features:o.unsqueeze_(0),input_features_mask:l}}}},"./src/models/gemma3n/processing_gemma3n.js":(e,t,n)=>{n.r(t),n.d(t,{Gemma3nProcessor:()=>o});var r=n("./src/base/processing_utils.js"),s=n("./src/models/auto/image_processing_auto.js"),i=n("./src/models/auto/feature_extraction_auto.js"),a=n("./src/tokenizers.js");n("./src/utils/image.js"),n("./src/utils/audio.js");class o extends r.Processor{static image_processor_class=s.AutoImageProcessor;static feature_extractor_class=i.AutoFeatureExtractor;static tokenizer_class=a.AutoTokenizer;static uses_processor_config=!0;static uses_chat_template_file=!0;constructor(e,t,n){super(e,t,n),this.audio_seq_length=this.config.audio_seq_length,this.image_seq_length=this.config.image_seq_length;const{audio_token_id:r,boa_token:s,audio_token:i,eoa_token:a,image_token_id:o,boi_token:l,image_token:u,eoi_token:c}=this.tokenizer.config;this.audio_token_id=r,this.boa_token=s,this.audio_token=i;const d=i.repeat(this.audio_seq_length);this.full_audio_sequence=`\n\n${s}${d}${a}\n\n`,this.image_token_id=o,this.boi_token=l,this.image_token=u;const p=u.repeat(this.image_seq_length);this.full_image_sequence=`\n\n${l}${p}${c}\n\n`}async _call(e,t=null,n=null,r={}){let s,i;return"string"==typeof e&&(e=[e]),n&&(s=await this.feature_extractor(n,r),e=e.map(e=>e.replaceAll(this.audio_token,this.full_audio_sequence))),t&&(i=await this.image_processor(t,r),e=e.map(e=>e.replaceAll(this.image_token,this.full_image_sequence))),{...this.tokenizer(e,r),...i,...s}}}},"./src/models/glpn/image_processing_glpn.js":(e,t,n)=>{n.r(t),n.d(t,{GLPNFeatureExtractor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}},"./src/models/grounding_dino/image_processing_grounding_dino.js":(e,t,n)=>{n.r(t),n.d(t,{GroundingDinoImageProcessor:()=>i});var r=n("./src/base/image_processors_utils.js"),s=n("./src/utils/tensor.js");class i extends r.ImageProcessor{async _call(e){const t=await super._call(e),n=t.pixel_values.dims,r=(0,s.ones)([n[0],n[2],n[3]]);return{...t,pixel_mask:r}}}},"./src/models/grounding_dino/processing_grounding_dino.js":(e,t,n)=>{n.r(t),n.d(t,{GroundingDinoProcessor:()=>l});var r=n("./src/base/processing_utils.js"),s=n("./src/models/auto/image_processing_auto.js"),i=n("./src/tokenizers.js"),a=n("./src/base/image_processors_utils.js");function o(e,t){const n=e.dims.at(-1)-1,r=e.tolist();r.fill(!1,0,1),r.fill(!1,n);const s=t.tolist();return r.map((e,t)=>e?t:null).filter(e=>null!==e).map(e=>s[e])}class l extends r.Processor{static tokenizer_class=i.AutoTokenizer;static image_processor_class=s.AutoImageProcessor;async _call(e,t,n={}){const r=e?await this.image_processor(e,n):{};return{...t?this.tokenizer(t,n):{},...r}}post_process_grounded_object_detection(e,t,{box_threshold:n=.25,text_threshold:r=.25,target_sizes:s=null}={}){const{logits:i,pred_boxes:l}=e,u=i.dims[0];if(null!==s&&s.length!==u)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const c=i.dims.at(1),d=i.sigmoid(),p=d.max(-1).tolist(),h=l.tolist().map(e=>e.map(e=>(0,a.center_to_corners_format)(e))),m=[];for(let e=0;e<u;++e){const i=null!==s?s[e]:null;null!==i&&(h[e]=h[e].map(e=>e.map((e,t)=>e*i[(t+1)%2])));const a=p[e],l=[],u=[],f=[];for(let s=0;s<c;++s){const i=a[s];if(i<=n)continue;const c=h[e][s],p=d[e][s];l.push(i),f.push(c);const m=o(p.gt(r),t[e]);u.push(m)}m.push({scores:l,boxes:f,labels:this.batch_decode(u)})}return m}}},"./src/models/idefics3/image_processing_idefics3.js":(e,t,n)=>{n.r(t),n.d(t,{Idefics3ImageProcessor:()=>i});var r=n("./src/base/image_processors_utils.js"),s=n("./src/utils/tensor.js");class i extends r.ImageProcessor{constructor(e){super(e),this.do_image_splitting=e.do_image_splitting??!0,this.max_image_size=e.max_image_size}get_resize_for_vision_encoder(e,t){let[n,r]=e.dims.slice(-2);const s=r/n;return r>=n?(r=Math.ceil(r/t)*t,n=Math.floor(r/s),n=Math.ceil(n/t)*t):(n=Math.ceil(n/t)*t,r=Math.floor(n*s),r=Math.ceil(r/t)*t),{height:n,width:r}}async _call(e,{do_image_splitting:t=null,return_row_col_info:n=!1}={}){let r;if(Array.isArray(e)){if(0===e.length||!e[0])throw new Error("No images provided.");r=Array.isArray(e[0])?e:[e]}else r=[[e]];let i=[],a=[],o=[];const l=[],u=[];for(const e of r){let n=await qd.all(e.map(e=>this.preprocess(e)));l.push(...n.map(e=>e.original_size)),u.push(...n.map(e=>e.reshaped_input_size)),n.forEach(e=>e.pixel_values.unsqueeze_(0));const{longest_edge:r}=this.max_image_size;let c;if(t??this.do_image_splitting){let e=new Array(n.length),t=new Array(n.length);c=await qd.all(n.map(async(n,i)=>{const a=this.get_resize_for_vision_encoder(n.pixel_values,r),o=await(0,s.interpolate_4d)(n.pixel_values,{size:[a.height,a.width]}),{frames:l,num_splits_h:u,num_splits_w:c}=await this.split_image(o,this.max_image_size);return e[i]=u,t[i]=c,(0,s.cat)(l,0)})),a.push(e),o.push(t)}else{const e=[r,r];c=await qd.all(n.map(t=>(0,s.interpolate_4d)(t.pixel_values,{size:e}))),a.push(new Array(n.length).fill(0)),o.push(new Array(n.length).fill(0))}i.push((0,s.cat)(c,0))}const c=i.length,[d,p,h,m]=i[0].dims;let f,_;if(1===c)f=i[0].unsqueeze_(0),_=(0,s.full)([c,d,h,m],!0);else{const e=Math.max(...i.map(e=>e.dims.at(0)));_=(0,s.full)([c,e,h,m],!0);const t=_.data,n=e*h*m;for(let r=0;r<c;++r){const a=i[r].dims[0];if(a<e){i[r]=(0,s.cat)([i[r],(0,s.full)([e-a,p,h,m],0)],0);const o=r*n+a*h*m,l=(r+1)*n;t.fill(!1,o,l)}}f=(0,s.stack)(i,0)}return{pixel_values:f,pixel_attention_mask:_,original_sizes:l,reshaped_input_sizes:u,...n?{rows:a,cols:o}:{}}}async split_image(e,{longest_edge:t}){const n=t,r=t,i=[],[a,o]=e.dims.slice(-2);let l=0,u=0;if(a>n||o>r){l=Math.ceil(a/n),u=Math.ceil(o/r);const t=Math.ceil(a/l),c=Math.ceil(o/u);for(let n=0;n<l;++n)for(let r=0;r<u;++r){let d,p,h,m;n===l-1?(p=a-t,m=a):(p=n*t,m=(n+1)*t),r===u-1?(d=o-c,h=o):(d=r*c,h=(r+1)*c);const f=[p,d],_=[m,h],g=await(0,s.slice)(e,f,_,[2,3]);i.push(g)}const d=n,p=r;a===d&&o===p||(e=await(0,s.interpolate_4d)(e,{size:[d,p]}))}return i.push(e),{frames:i,num_splits_h:l,num_splits_w:u}}}},"./src/models/idefics3/processing_idefics3.js":(e,t,n)=>{n.r(t),n.d(t,{Idefics3Processor:()=>l});var r=n("./src/base/processing_utils.js"),s=n("./src/models/auto/image_processing_auto.js"),i=n("./src/tokenizers.js"),a=(n("./src/utils/image.js"),n("./src/utils/core.js"));function o(e,t,n,r,s,i){return 0===e&&0===t?function(e,t,n,r){return`${t}${r}`+n.repeat(e)+`${t}`}(n,r,s,i):function(e,t,n,r,s,i){let a="";for(let i=0;i<t;++i){for(let t=0;t<n;++t)a+=r+`<row_${i+1}_col_${t+1}>`+s.repeat(e);a+="\n"}return a+=`\n${r}${i}`+s.repeat(e)+`${r}`,a}(n,e,t,r,s,i)}class l extends r.Processor{static image_processor_class=s.AutoImageProcessor;static tokenizer_class=i.AutoTokenizer;static uses_processor_config=!0;fake_image_token="<fake_token_around_image>";image_token="<image>";global_img_token="<global-img>";async _call(e,t=null,n={}){let r;n.return_row_col_info??=!0,t&&(r=await this.image_processor(t,n)),Array.isArray(e)||(e=[e]);const s=r.rows??[new Array(e.length).fill(0)],i=r.cols??[new Array(e.length).fill(0)],l=this.config.image_seq_len,u=[],c=[];for(let t=0;t<e.length;++t){const n=e[t],r=s[t],d=i[t];u.push((0,a.count)(n,this.image_token));const p=r.map((e,t)=>o(e,d[t],l,this.fake_image_token,this.image_token,this.global_img_token)),h=n.split(this.image_token);if(0===h.length)throw new Error("The image token should be present in the text.");let m=h[0];for(let e=0;e<p.length;++e)m+=p[e]+h[e+1];c.push(m)}return{...this.tokenizer(c),...r}}}},"./src/models/image_processors.js":(e,t,n)=>{n.r(t),n.d(t,{BeitFeatureExtractor:()=>r.BeitFeatureExtractor,BitImageProcessor:()=>s.BitImageProcessor,CLIPFeatureExtractor:()=>a.CLIPFeatureExtractor,CLIPImageProcessor:()=>a.CLIPImageProcessor,ChineseCLIPFeatureExtractor:()=>i.ChineseCLIPFeatureExtractor,ConvNextFeatureExtractor:()=>o.ConvNextFeatureExtractor,ConvNextImageProcessor:()=>o.ConvNextImageProcessor,DINOv3ViTImageProcessor:()=>c.DINOv3ViTImageProcessor,DPTFeatureExtractor:()=>p.DPTFeatureExtractor,DPTImageProcessor:()=>p.DPTImageProcessor,DeiTFeatureExtractor:()=>l.DeiTFeatureExtractor,DeiTImageProcessor:()=>l.DeiTImageProcessor,DetrFeatureExtractor:()=>u.DetrFeatureExtractor,DetrImageProcessor:()=>u.DetrImageProcessor,DonutFeatureExtractor:()=>d.DonutFeatureExtractor,DonutImageProcessor:()=>d.DonutImageProcessor,EfficientNetImageProcessor:()=>h.EfficientNetImageProcessor,GLPNFeatureExtractor:()=>m.GLPNFeatureExtractor,GroundingDinoImageProcessor:()=>f.GroundingDinoImageProcessor,Idefics3ImageProcessor:()=>_.Idefics3ImageProcessor,JinaCLIPImageProcessor:()=>w.JinaCLIPImageProcessor,LlavaOnevisionImageProcessor:()=>y.LlavaOnevisionImageProcessor,Mask2FormerImageProcessor:()=>b.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>x.MaskFormerFeatureExtractor,MaskFormerImageProcessor:()=>x.MaskFormerImageProcessor,MobileNetV1FeatureExtractor:()=>v.MobileNetV1FeatureExtractor,MobileNetV1ImageProcessor:()=>v.MobileNetV1ImageProcessor,MobileNetV2FeatureExtractor:()=>M.MobileNetV2FeatureExtractor,MobileNetV2ImageProcessor:()=>M.MobileNetV2ImageProcessor,MobileNetV3FeatureExtractor:()=>k.MobileNetV3FeatureExtractor,MobileNetV3ImageProcessor:()=>k.MobileNetV3ImageProcessor,MobileNetV4FeatureExtractor:()=>T.MobileNetV4FeatureExtractor,MobileNetV4ImageProcessor:()=>T.MobileNetV4ImageProcessor,MobileViTFeatureExtractor:()=>$.MobileViTFeatureExtractor,MobileViTImageProcessor:()=>$.MobileViTImageProcessor,NougatImageProcessor:()=>S.NougatImageProcessor,OwlViTFeatureExtractor:()=>E.OwlViTFeatureExtractor,OwlViTImageProcessor:()=>E.OwlViTImageProcessor,Owlv2ImageProcessor:()=>C.Owlv2ImageProcessor,Phi3VImageProcessor:()=>P.Phi3VImageProcessor,PvtImageProcessor:()=>A.PvtImageProcessor,Qwen2VLImageProcessor:()=>I.Qwen2VLImageProcessor,RTDetrImageProcessor:()=>F.RTDetrImageProcessor,SamImageProcessor:()=>z.SamImageProcessor,SegformerFeatureExtractor:()=>O.SegformerFeatureExtractor,SegformerImageProcessor:()=>O.SegformerImageProcessor,SiglipImageProcessor:()=>L.SiglipImageProcessor,SmolVLMImageProcessor:()=>B.SmolVLMImageProcessor,Swin2SRImageProcessor:()=>D.Swin2SRImageProcessor,VLMImageProcessor:()=>g.VLMImageProcessor,ViTFeatureExtractor:()=>N.ViTFeatureExtractor,ViTImageProcessor:()=>N.ViTImageProcessor,VitMatteImageProcessor:()=>j.VitMatteImageProcessor,VitPoseImageProcessor:()=>R.VitPoseImageProcessor,YolosFeatureExtractor:()=>V.YolosFeatureExtractor,YolosImageProcessor:()=>V.YolosImageProcessor});var r=n("./src/models/beit/image_processing_beit.js"),s=n("./src/models/bit/image_processing_bit.js"),i=n("./src/models/chinese_clip/image_processing_chinese_clip.js"),a=n("./src/models/clip/image_processing_clip.js"),o=n("./src/models/convnext/image_processing_convnext.js"),l=n("./src/models/deit/image_processing_deit.js"),u=n("./src/models/detr/image_processing_detr.js"),c=n("./src/models/dinov3_vit/image_processing_dinov3_vit.js"),d=n("./src/models/donut/image_processing_donut.js"),p=n("./src/models/dpt/image_processing_dpt.js"),h=n("./src/models/efficientnet/image_processing_efficientnet.js"),m=n("./src/models/glpn/image_processing_glpn.js"),f=n("./src/models/grounding_dino/image_processing_grounding_dino.js"),_=n("./src/models/idefics3/image_processing_idefics3.js"),g=n("./src/models/janus/image_processing_janus.js"),w=n("./src/models/jina_clip/image_processing_jina_clip.js"),y=n("./src/models/llava_onevision/image_processing_llava_onevision.js"),b=n("./src/models/mask2former/image_processing_mask2former.js"),x=n("./src/models/maskformer/image_processing_maskformer.js"),v=n("./src/models/mobilenet_v1/image_processing_mobilenet_v1.js"),M=n("./src/models/mobilenet_v2/image_processing_mobilenet_v2.js"),k=n("./src/models/mobilenet_v3/image_processing_mobilenet_v3.js"),T=n("./src/models/mobilenet_v4/image_processing_mobilenet_v4.js"),$=n("./src/models/mobilevit/image_processing_mobilevit.js"),S=n("./src/models/nougat/image_processing_nougat.js"),C=n("./src/models/owlv2/image_processing_owlv2.js"),E=n("./src/models/owlvit/image_processing_owlvit.js"),P=n("./src/models/phi3_v/image_processing_phi3_v.js"),A=n("./src/models/pvt/image_processing_pvt.js"),I=n("./src/models/qwen2_vl/image_processing_qwen2_vl.js"),F=n("./src/models/rt_detr/image_processing_rt_detr.js"),z=n("./src/models/sam/image_processing_sam.js"),O=n("./src/models/segformer/image_processing_segformer.js"),L=n("./src/models/siglip/image_processing_siglip.js"),B=n("./src/models/smolvlm/image_processing_smolvlm.js"),D=n("./src/models/swin2sr/image_processing_swin2sr.js"),N=n("./src/models/vit/image_processing_vit.js"),j=n("./src/models/vitmatte/image_processing_vitmatte.js"),R=n("./src/models/vitpose/image_processing_vitpose.js"),V=n("./src/models/yolos/image_processing_yolos.js")},"./src/models/janus/image_processing_janus.js":(e,t,n)=>{n.r(t),n.d(t,{VLMImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{constructor(e){super({do_pad:!0,pad_size:{width:e.image_size,height:e.image_size},...e}),this.constant_values=this.config.background_color.map(e=>e*this.rescale_factor)}pad_image(e,t,n,r){return super.pad_image(e,t,n,{constant_values:this.constant_values,center:!0,...r})}}},"./src/models/janus/processing_janus.js":(e,t,n)=>{n.r(t),n.d(t,{VLChatProcessor:()=>u});var r=n("./src/base/processing_utils.js"),s=n("./src/models/auto/image_processing_auto.js"),i=n("./src/tokenizers.js"),a=n("./src/utils/core.js"),o=n("./src/utils/tensor.js"),l=n("./src/utils/image.js");class u extends r.Processor{static image_processor_class=s.AutoImageProcessor;static tokenizer_class=i.AutoTokenizer;static uses_processor_config=!0;constructor(e,t,n){super(e,t,n),this.image_tag=this.config.image_tag,this.image_start_tag=this.config.image_start_tag,this.image_end_tag=this.config.image_end_tag,this.num_image_tokens=this.config.num_image_tokens}async _call(e,{images:t=null,chat_template:n="default"}={}){t?Array.isArray(t)||(t=[t]):t=await qd.all(e.filter(e=>e.images).flatMap(e=>e.images).map(e=>l.RawImage.read(e)));const r=this.tokenizer,s=e=>r.encode(e,{add_special_tokens:!1}),i=r.apply_chat_template(e,{tokenize:!1,add_generation_prompt:!0,chat_template:n}).split(this.image_tag),u=i.length-1;if(t.length!==u)throw new Error(`Number of images provided (${t.length}) does not match number of "${this.image_tag}" image tags (${u})`);const[c,d,p]=r.model.convert_tokens_to_ids([this.image_tag,this.image_start_tag,this.image_end_tag]);let h=s(i[0]),m=new Array(h.length).fill(!1);for(let e=1;e<i.length;++e){const t=new Array(this.num_image_tokens).fill(c),n=s(i[e]);h=(0,a.mergeArrays)(h,[d],t,[p],n);const r=new Array(this.num_image_tokens).fill(!0);m=(0,a.mergeArrays)(m,[!1],r,[!1],new Array(n.length).fill(!1))}const f=[1,h.length],_={input_ids:new o.Tensor("int64",h,f),attention_mask:new o.Tensor("int64",new Array(h.length).fill(1),f),images_seq_mask:new o.Tensor("bool",m,f),images_emb_mask:new o.Tensor("bool",new Array(u*this.num_image_tokens).fill(!0),[1,u,this.num_image_tokens])};if(t&&t.length>0){const e=await this.image_processor(t);return e.pixel_values.unsqueeze_(0),{..._,...e}}return _}}},"./src/models/jina_clip/image_processing_jina_clip.js":(e,t,n)=>{n.r(t),n.d(t,{JinaCLIPImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{constructor(e){const{resize_mode:t,fill_color:n,interpolation:r,size:s,...i}=e;super({...i,size:"squash"===t?{width:s,height:s}:"shortest"===t?{shortest_edge:s}:{longest_edge:s},resample:"bicubic"===r?3:2,do_center_crop:!0,crop_size:s,do_normalize:!0})}}},"./src/models/jina_clip/processing_jina_clip.js":(e,t,n)=>{n.r(t),n.d(t,{JinaCLIPProcessor:()=>a});var r=n("./src/base/processing_utils.js"),s=n("./src/models/auto/image_processing_auto.js"),i=n("./src/tokenizers.js");class a extends r.Processor{static tokenizer_class=i.AutoTokenizer;static image_processor_class=s.AutoImageProcessor;async _call(e=null,t=null,n={}){if(!e&&!t)throw new Error("Either text or images must be provided");return{...e?this.tokenizer(e,n):{},...t?await this.image_processor(t,n):{}}}}},"./src/models/llava/processing_llava.js":(e,t,n)=>{n.r(t),n.d(t,{LlavaProcessor:()=>a});var r=n("./src/base/processing_utils.js"),s=n("./src/models/auto/image_processing_auto.js"),i=n("./src/tokenizers.js");class a extends r.Processor{static tokenizer_class=i.AutoTokenizer;static image_processor_class=s.AutoImageProcessor;static uses_processor_config=!0;async _call(e,t=null,n={}){const r=await this.image_processor(e,n);if(t){const[e,n]=r.pixel_values.dims.slice(-2),{image_token:s,patch_size:i,num_additional_image_tokens:a}=this.config,o=Math.floor(e/i)*Math.floor(n/i)+a;t=structuredClone(t),Array.isArray(t)||(t=[t]);for(let e=0;e<t.length;++e)t[e]=t[e].replace(s,s.repeat(o))}const s=t?this.tokenizer(t,n):{};return{...r,...s}}}},"./src/models/llava_onevision/image_processing_llava_onevision.js":(e,t,n)=>{n.r(t),n.d(t,{LlavaOnevisionImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}},"./src/models/mask2former/image_processing_mask2former.js":(e,t,n)=>{n.r(t),n.d(t,{Mask2FormerImageProcessor:()=>s});var r=n("./src/models/maskformer/image_processing_maskformer.js");class s extends r.MaskFormerImageProcessor{}},"./src/models/maskformer/image_processing_maskformer.js":(e,t,n)=>{n.r(t),n.d(t,{MaskFormerFeatureExtractor:()=>i,MaskFormerImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{post_process_panoptic_segmentation(...e){return(0,r.post_process_panoptic_segmentation)(...e)}post_process_instance_segmentation(...e){return(0,r.post_process_instance_segmentation)(...e)}}class i extends s{}},"./src/models/mgp_str/processing_mgp_str.js":(e,t,n)=>{n.r(t),n.d(t,{MgpstrProcessor:()=>l});var r=n("./src/base/processing_utils.js"),s=n("./src/models/auto/image_processing_auto.js"),i=n("./src/tokenizers.js"),a=n("./src/utils/maths.js");const o={char:["char_decode",1],bpe:["bpe_decode",2],wp:["wp_decode",102]};class l extends r.Processor{static tokenizer_class=i.AutoTokenizer;static image_processor_class=s.AutoImageProcessor;get char_tokenizer(){return this.components.char_tokenizer}get bpe_tokenizer(){return this.components.bpe_tokenizer}get wp_tokenizer(){return this.components.wp_tokenizer}_decode_helper(e,t){if(!o.hasOwnProperty(t))throw new Error(`Format ${t} is not supported.`);const[n,r]=o[t],s=this[n].bind(this),[i,l]=e.dims,u=[],c=[],d=e.tolist();for(let e=0;e<i;++e){const t=d[e],n=[],s=[];for(let e=1;e<l;++e){const[i,o]=(0,a.max)((0,a.softmax)(t[e]));if(s.push(i),o==r)break;n.push(o)}const i=s.length>0?s.reduce((e,t)=>e*t,1):0;c.push(n),u.push(i)}return[s(c),u]}char_decode(e){return this.char_tokenizer.batch_decode(e).map(e=>e.replaceAll(" ",""))}bpe_decode(e){return this.bpe_tokenizer.batch_decode(e)}wp_decode(e){return this.wp_tokenizer.batch_decode(e).map(e=>e.replaceAll(" ",""))}batch_decode([e,t,n]){const[r,s]=this._decode_helper(e,"char"),[i,o]=this._decode_helper(t,"bpe"),[l,u]=this._decode_helper(n,"wp"),c=[],d=[];for(let e=0;e<r.length;++e){const[t,n]=(0,a.max)([s[e],o[e],u[e]]);c.push([r[e],i[e],l[e]][n]),d.push(t)}return{generated_text:c,scores:d,char_preds:r,bpe_preds:i,wp_preds:l}}static async from_pretrained(...e){const t=await super.from_pretrained(...e),n=await i.AutoTokenizer.from_pretrained("Xenova/gpt2"),r=await i.AutoTokenizer.from_pretrained("Xenova/bert-base-uncased");return t.components={image_processor:t.image_processor,char_tokenizer:t.tokenizer,bpe_tokenizer:n,wp_tokenizer:r},t}async _call(e,t=null){const n=await this.image_processor(e);return t&&(n.labels=this.tokenizer(t).input_ids),n}}},"./src/models/mobilenet_v1/image_processing_mobilenet_v1.js":(e,t,n)=>{n.r(t),n.d(t,{MobileNetV1FeatureExtractor:()=>i,MobileNetV1ImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}class i extends s{}},"./src/models/mobilenet_v2/image_processing_mobilenet_v2.js":(e,t,n)=>{n.r(t),n.d(t,{MobileNetV2FeatureExtractor:()=>i,MobileNetV2ImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}class i extends s{}},"./src/models/mobilenet_v3/image_processing_mobilenet_v3.js":(e,t,n)=>{n.r(t),n.d(t,{MobileNetV3FeatureExtractor:()=>i,MobileNetV3ImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}class i extends s{}},"./src/models/mobilenet_v4/image_processing_mobilenet_v4.js":(e,t,n)=>{n.r(t),n.d(t,{MobileNetV4FeatureExtractor:()=>i,MobileNetV4ImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}class i extends s{}},"./src/models/mobilevit/image_processing_mobilevit.js":(e,t,n)=>{n.r(t),n.d(t,{MobileViTFeatureExtractor:()=>i,MobileViTImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}class i extends s{}},"./src/models/moonshine/feature_extraction_moonshine.js":(e,t,n)=>{n.r(t),n.d(t,{MoonshineFeatureExtractor:()=>i});var r=n("./src/base/feature_extraction_utils.js"),s=n("./src/utils/tensor.js");class i extends r.FeatureExtractor{async _call(e){(0,r.validate_audio_inputs)(e,"MoonshineFeatureExtractor"),e instanceof Float64Array&&(e=new Float32Array(e));const t=[1,e.length];return{input_values:new s.Tensor("float32",e,t)}}}},"./src/models/moonshine/processing_moonshine.js":(e,t,n)=>{n.r(t),n.d(t,{MoonshineProcessor:()=>a});var r=n("./src/models/auto/feature_extraction_auto.js"),s=n("./src/tokenizers.js"),i=n("./src/base/processing_utils.js");class a extends i.Processor{static tokenizer_class=s.AutoTokenizer;static feature_extractor_class=r.AutoFeatureExtractor;async _call(e){return await this.feature_extractor(e)}}},"./src/models/nougat/image_processing_nougat.js":(e,t,n)=>{n.r(t),n.d(t,{NougatImageProcessor:()=>s});var r=n("./src/models/donut/image_processing_donut.js");class s extends r.DonutImageProcessor{}},"./src/models/owlv2/image_processing_owlv2.js":(e,t,n)=>{n.r(t),n.d(t,{Owlv2ImageProcessor:()=>s});var r=n("./src/models/owlvit/image_processing_owlvit.js");class s extends r.OwlViTImageProcessor{}},"./src/models/owlvit/image_processing_owlvit.js":(e,t,n)=>{n.r(t),n.d(t,{OwlViTFeatureExtractor:()=>i,OwlViTImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{post_process_object_detection(...e){return(0,r.post_process_object_detection)(...e)}}class i extends s{}},"./src/models/owlvit/processing_owlvit.js":(e,t,n)=>{n.r(t),n.d(t,{OwlViTProcessor:()=>a});var r=n("./src/base/processing_utils.js"),s=n("./src/models/auto/image_processing_auto.js"),i=n("./src/tokenizers.js");class a extends r.Processor{static tokenizer_class=i.AutoTokenizer;static image_processor_class=s.AutoImageProcessor}},"./src/models/paligemma/processing_paligemma.js":(e,t,n)=>{n.r(t),n.d(t,{PaliGemmaProcessor:()=>o});var r=n("./src/base/processing_utils.js"),s=n("./src/models/auto/image_processing_auto.js"),i=n("./src/tokenizers.js");const a="<image>";class o extends r.Processor{static tokenizer_class=i.AutoTokenizer;static image_processor_class=s.AutoImageProcessor;static uses_processor_config=!1;async _call(e,t=null,n={}){t||(console.warn("You are using PaliGemma without a text prefix. It will perform as a picture-captioning model."),t=""),Array.isArray(e)||(e=[e]),Array.isArray(t)||(t=[t]);const r=this.tokenizer.bos_token,s=this.image_processor.config.image_seq_length;let i;t.some(e=>e.includes(a))?i=t.map(e=>{const t=e.replaceAll(a,a.repeat(s)),n=t.lastIndexOf(a),i=-1===n?0:n+7;return t.slice(0,i)+r+t.slice(i)+"\n"}):(console.warn("You are passing both `text` and `images` to `PaliGemmaProcessor`. The processor expects special image tokens in the text, as many tokens as there are images per each text. It is recommended to add `<image>` tokens in the very beginning of your text. For this call, we will infer how many images each text has and add special tokens."),i=t.map(t=>function(e,t,n,r,s){return`${r.repeat(n*s)}${t}${e}\n`}(t,r,s,a,e.length)));const o=this.tokenizer(i,n);return{...await this.image_processor(e,n),...o}}}},"./src/models/parakeet/feature_extraction_parakeet.js":(e,t,n)=>{n.r(t),n.d(t,{ParakeetFeatureExtractor:()=>a});var r=n("./src/base/feature_extraction_utils.js"),s=n("./src/utils/tensor.js"),i=n("./src/utils/audio.js");class a extends r.FeatureExtractor{constructor(e){super(e),this.config.mel_filters??=(0,i.mel_filter_bank)(Math.floor(1+this.config.n_fft/2),this.config.feature_size,0,this.config.sampling_rate/2,this.config.sampling_rate,"slaney","slaney");const t=(0,i.window_function)(this.config.win_length,"hann",{periodic:!1});this.window=new Float64Array(this.config.n_fft);const n=Math.floor((this.config.n_fft-this.config.win_length)/2);this.window.set(t,n)}async _extract_fbank_features(e){const t=this.config.preemphasis;for(let n=(e=new Float64Array(e)).length-1;n>=1;--n)e[n]-=t*e[n-1];return await(0,i.spectrogram)(e,this.window,this.window.length,this.config.hop_length,{fft_length:this.config.n_fft,power:2,mel_filters:this.config.mel_filters,log_mel:"log",mel_floor:-1/0,pad_mode:"constant",center:!0,transpose:!0,mel_offset:2**-24})}async _call(e){(0,r.validate_audio_inputs)(e,"ParakeetFeatureExtractor");const t=await this._extract_fbank_features(e),n=Math.floor((e.length+2*Math.floor(this.config.n_fft/2)-this.config.n_fft)/this.config.hop_length),i=t.data;i.fill(0,n*t.dims[1]);const[a,o]=t.dims,l=new Float64Array(o),u=new Float64Array(o);for(let e=0;e<n;++e){const t=e*o;for(let e=0;e<o;++e){const n=i[t+e];l[e]+=n,u[e]+=n*n}}const c=n>1?n-1:1;for(let e=0;e<o;++e){const t=l[e]/n,r=(u[e]-n*t*t)/c,s=1/(Math.sqrt(r)+1e-5);for(let r=0;r<n;++r){const n=r*o+e;i[n]=(i[n]-t)*s}}const d=new BigInt64Array(a);return d.fill(1n,0,n),{input_features:t.unsqueeze_(0),attention_mask:new s.Tensor("int64",d,[1,a])}}}},"./src/models/phi3_v/image_processing_phi3_v.js":(e,t,n)=>{n.r(t),n.d(t,{Phi3VImageProcessor:()=>c});var r=n("./src/base/image_processors_utils.js"),s=n("./src/utils/tensor.js");const i=336,a=[2,3],{ceil:o,floor:l,sqrt:u}=Math;class c extends r.ImageProcessor{constructor(e){super({...e,do_normalize:!0,do_pad:!0,pad_size:"custom",do_convert_rgb:!0,do_resize:!0}),this._num_crops=e.num_crops}calc_num_image_tokens_from_image_size(e,t){const{num_img_tokens:n}=this.config;return l((l(t/i)*l(e/i)+1)*n+1+(l(t/i)+1)*u(n))}get_resize_output_image_size(e,t){const n=this._num_crops,[r,s]=e.size;let i=r/s,a=1;for(;a*Math.ceil(a/i)<=n;)a+=1;a-=1;const o=Math.floor(336*a);return[o,Math.floor(o/i)]}pad_image(e,t,n,r={}){const[s,a]=t,l=i*o(s/i),u=i*o(a/i),c=[1,1,1].map((e,t)=>(e-this.image_mean[t])/this.image_std[t]);return super.pad_image(e,t,{width:u,height:l},{center:!0,constant_values:c,...r})}async _call(e,{num_crops:t=null}={}){if(this._num_crops=t??=this.config.num_crops,t<4||u(t)%1!=0)throw new Error("num_crops must be a square number >= 4");Array.isArray(e)||(e=[e]);const n=e.length,r=await qd.all(e.map(e=>this.preprocess(e))),c=r.map(e=>e.original_size),d=r.map(e=>e.reshaped_input_size),p=[];for(const{pixel_values:e}of r){e.unsqueeze_(0);const[n,r]=e.dims.slice(-2),o=await(0,s.interpolate_4d)(e,{size:[i,i],mode:"bicubic"});if(t>0){const c=[],d=u(t),h=l(r/d),m=l(n/d);for(let t=0;t<d;++t)for(let i=0;i<d;++i){let o,l,u,p;t===d-1?(l=n-m,p=n):(l=t*m,p=(t+1)*m),i===d-1?(o=r-h,u=r):(o=i*h,u=(i+1)*h);const f=[l,o],_=[p,u],g=await(0,s.slice)(e,f,_,a);c.push(g)}const f=await(0,s.interpolate_4d)((0,s.cat)(c,0),{size:[i,i],mode:"bicubic"});p.push((0,s.cat)([o,f],0))}else p.push(o)}const h=(0,s.stack)(p,0),m=d.map(e=>e.map(e=>i*o(e/i)));return{pixel_values:h,original_sizes:c,reshaped_input_sizes:d,image_sizes:new s.Tensor("int64",m.flat(),[n,2]),num_img_tokens:m.map(([e,t])=>this.calc_num_image_tokens_from_image_size(t,e))}}}},"./src/models/phi3_v/processing_phi3_v.js":(e,t,n)=>{n.r(t),n.d(t,{Phi3VProcessor:()=>l});var r=n("./src/base/processing_utils.js"),s=n("./src/models/auto/image_processing_auto.js"),i=n("./src/tokenizers.js");n("./src/utils/image.js");const a="<|image|>",o=/<\|image_\d+\|>/g;class l extends r.Processor{static image_processor_class=s.AutoImageProcessor;static tokenizer_class=i.AutoTokenizer;async _call(e,t=null,{padding:n=!0,truncation:r=!0,num_crops:s=null}={}){let i,l;if(Array.isArray(e)||(e=[e]),t){l=await this.image_processor(t,{num_crops:s});const{num_img_tokens:u}=l,c=e.map((e,t)=>e.split(o).join(a.repeat(u[t])));i=this.tokenizer(c,{padding:n,truncation:r});const d=this.tokenizer.model.convert_tokens_to_ids([a])[0];i.input_ids.map_(e=>e==d?-e:e)}else i=this.tokenizer(e);return{...i,...l}}}},"./src/models/processors.js":(e,t,n)=>{n.r(t),n.d(t,{Florence2Processor:()=>r.Florence2Processor,Gemma3nProcessor:()=>s.Gemma3nProcessor,GroundingDinoProcessor:()=>i.GroundingDinoProcessor,Idefics3Processor:()=>a.Idefics3Processor,JinaCLIPProcessor:()=>l.JinaCLIPProcessor,LlavaProcessor:()=>u.LlavaProcessor,MgpstrProcessor:()=>c.MgpstrProcessor,MoonshineProcessor:()=>d.MoonshineProcessor,OwlViTProcessor:()=>p.OwlViTProcessor,PaliGemmaProcessor:()=>m.PaliGemmaProcessor,Phi3VProcessor:()=>h.Phi3VProcessor,PyAnnoteProcessor:()=>f.PyAnnoteProcessor,Qwen2VLProcessor:()=>_.Qwen2VLProcessor,SamProcessor:()=>g.SamProcessor,SmolVLMProcessor:()=>w.SmolVLMProcessor,SpeechT5Processor:()=>y.SpeechT5Processor,UltravoxProcessor:()=>b.UltravoxProcessor,VLChatProcessor:()=>o.VLChatProcessor,VoxtralProcessor:()=>x.VoxtralProcessor,Wav2Vec2Processor:()=>v.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>M.Wav2Vec2ProcessorWithLM,WhisperProcessor:()=>k.WhisperProcessor});var r=n("./src/models/florence2/processing_florence2.js"),s=n("./src/models/gemma3n/processing_gemma3n.js"),i=n("./src/models/grounding_dino/processing_grounding_dino.js"),a=n("./src/models/idefics3/processing_idefics3.js"),o=n("./src/models/janus/processing_janus.js"),l=n("./src/models/jina_clip/processing_jina_clip.js"),u=n("./src/models/llava/processing_llava.js"),c=n("./src/models/mgp_str/processing_mgp_str.js"),d=n("./src/models/moonshine/processing_moonshine.js"),p=n("./src/models/owlvit/processing_owlvit.js"),h=n("./src/models/phi3_v/processing_phi3_v.js"),m=n("./src/models/paligemma/processing_paligemma.js"),f=n("./src/models/pyannote/processing_pyannote.js"),_=n("./src/models/qwen2_vl/processing_qwen2_vl.js"),g=n("./src/models/sam/processing_sam.js"),w=n("./src/models/smolvlm/processing_smolvlm.js"),y=n("./src/models/speecht5/processing_speecht5.js"),b=n("./src/models/ultravox/processing_ultravox.js"),x=n("./src/models/voxtral/processing_voxtral.js"),v=n("./src/models/wav2vec2/processing_wav2vec2.js"),M=n("./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js"),k=n("./src/models/whisper/processing_whisper.js")},"./src/models/pvt/image_processing_pvt.js":(e,t,n)=>{n.r(t),n.d(t,{PvtImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}},"./src/models/pyannote/feature_extraction_pyannote.js":(e,t,n)=>{n.r(t),n.d(t,{PyAnnoteFeatureExtractor:()=>a});var r=n("./src/base/feature_extraction_utils.js"),s=n("./src/utils/tensor.js"),i=n("./src/utils/maths.js");class a extends r.FeatureExtractor{async _call(e){(0,r.validate_audio_inputs)(e,"PyAnnoteFeatureExtractor"),e instanceof Float64Array&&(e=new Float32Array(e));const t=[1,1,e.length];return{input_values:new s.Tensor("float32",e,t)}}samples_to_frames(e){return(e-this.config.offset)/this.config.step}post_process_speaker_diarization(e,t){const n=t/this.samples_to_frames(t)/this.config.sampling_rate,r=[];for(const t of e.tolist()){const e=[];let s=-1;for(let n=0;n<t.length;++n){const r=(0,i.softmax)(t[n]),[a,o]=(0,i.max)(r),[l,u]=[n,n+1];o!==s?(s=o,e.push({id:o,start:l,end:u,score:a})):(e.at(-1).end=u,e.at(-1).score+=a)}r.push(e.map(({id:e,start:t,end:r,score:s})=>({id:e,start:t*n,end:r*n,confidence:s/(r-t)})))}return r}}},"./src/models/pyannote/processing_pyannote.js":(e,t,n)=>{n.r(t),n.d(t,{PyAnnoteProcessor:()=>i});var r=n("./src/base/processing_utils.js"),s=n("./src/models/pyannote/feature_extraction_pyannote.js");class i extends r.Processor{static feature_extractor_class=s.PyAnnoteFeatureExtractor;async _call(e){return await this.feature_extractor(e)}post_process_speaker_diarization(...e){return this.feature_extractor.post_process_speaker_diarization(...e)}get sampling_rate(){return this.feature_extractor.config.sampling_rate}}},"./src/models/qwen2_vl/image_processing_qwen2_vl.js":(e,t,n)=>{n.r(t),n.d(t,{Qwen2VLImageProcessor:()=>i});var r=n("./src/base/image_processors_utils.js"),s=n("./src/utils/tensor.js");class i extends r.ImageProcessor{async _call(e,...t){const{pixel_values:n,original_sizes:r,reshaped_input_sizes:i}=await super._call(e,...t);let a=n;const{temporal_patch_size:o,merge_size:l,patch_size:u}=this.config;1===a.dims[0]&&(a=(0,s.cat)(Array.from({length:o},()=>a),0));const c=a.dims[0]/o,d=a.dims[1],p=Math.floor(a.dims[2]/u),h=Math.floor(a.dims[3]/u);return{pixel_values:a.view(c,o,d,Math.floor(p/l),l,u,Math.floor(h/l),l,u).permute(0,3,6,4,7,2,1,5,8).view(c*p*h,d*o*u*u),image_grid_thw:new s.Tensor("int64",[c,p,h],[1,3]),original_sizes:r,reshaped_input_sizes:i}}}},"./src/models/qwen2_vl/processing_qwen2_vl.js":(e,t,n)=>{n.r(t),n.d(t,{Qwen2VLProcessor:()=>a});var r=n("./src/base/processing_utils.js"),s=n("./src/models/auto/image_processing_auto.js"),i=n("./src/tokenizers.js");n("./src/utils/image.js");class a extends r.Processor{static image_processor_class=s.AutoImageProcessor;static tokenizer_class=i.AutoTokenizer;async _call(e,t=null,...n){let r,s;if(Array.isArray(e)||(e=[e]),t&&(r=await this.image_processor(t),s=r.image_grid_thw),s){let t=this.image_processor.config.merge_size**2,n=0;const r=s.tolist();e=e.map(e=>{for(;e.includes("<|image_pad|>");){const s=Number(r[n++].reduce((e,t)=>e*t,1n));e=e.replace("<|image_pad|>","<|placeholder|>".repeat(Math.floor(s/t)))}return e.replaceAll("<|placeholder|>","<|image_pad|>")})}return{...this.tokenizer(e),...r}}}},"./src/models/rt_detr/image_processing_rt_detr.js":(e,t,n)=>{n.r(t),n.d(t,{RTDetrImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{post_process_object_detection(...e){return(0,r.post_process_object_detection)(...e)}}},"./src/models/sam/image_processing_sam.js":(e,t,n)=>{n.r(t),n.d(t,{SamImageProcessor:()=>a});var r=n("./src/base/image_processors_utils.js"),s=n("./src/utils/core.js"),i=n("./src/utils/tensor.js");class a extends r.ImageProcessor{reshape_input_points(e,t,n,r=!1){e=structuredClone(e);let a=(0,s.calculateDimensions)(e);if(3===a.length)r||(a=[1,...a]),e=[e];else if(4!==a.length)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");for(let r=0;r<e.length;++r){let s=t[r],i=n[r],a=[i[0]/s[0],i[1]/s[1]];for(let t=0;t<e[r].length;++t)for(let n=0;n<e[r][t].length;++n)for(let s=0;s<e[r][t][n].length;++s)e[r][t][n][s]*=a[s%2]}return new i.Tensor("float32",Float32Array.from(e.flat(1/0)),a)}add_input_labels(e,t){let n=(0,s.calculateDimensions)(e);if(2===n.length)n=[1,...n],e=[e];else if(3!==n.length)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");if(n.some((e,n)=>e!==t.dims[n]))throw Error(`The first ${n.length} dimensions of 'input_points' and 'input_labels' must be the same.`);return new i.Tensor("int64",e.flat(1/0).map(BigInt),n)}async _call(e,{input_points:t=null,input_labels:n=null,input_boxes:r=null}={}){const s=await super._call(e);if(t&&(s.input_points=this.reshape_input_points(t,s.original_sizes,s.reshaped_input_sizes)),n){if(!s.input_points)throw Error("`input_points` must be provided if `input_labels` are provided.");s.input_labels=this.add_input_labels(n,s.input_points)}return r&&(s.input_boxes=this.reshape_input_points(r,s.original_sizes,s.reshaped_input_sizes,!0)),s}async post_process_masks(e,t,n,{mask_threshold:r=0,binarize:s=!0,pad_size:a=null}={}){const o=[],l=[(a=a??this.pad_size).height,a.width];for(let a=0;a<t.length;++a){const u=t[a],c=n[a];let d=await(0,i.interpolate_4d)(e[a],{mode:"bilinear",size:l});if(d=d.slice(null,null,[0,c[0]],[0,c[1]]),d=await(0,i.interpolate_4d)(d,{mode:"bilinear",size:u}),s){const e=d.data,t=new Uint8Array(e.length);for(let n=0;n<e.length;++n)e[n]>r&&(t[n]=1);d=new i.Tensor("bool",t,d.dims)}o.push(d)}return o}generate_crop_boxes(e,t,{crop_n_layers:n=0,overlap_ratio:r=512/1500,points_per_crop:s=32,crop_n_points_downscale_factor:i=1}={}){}}},"./src/models/sam/processing_sam.js":(e,t,n)=>{n.r(t),n.d(t,{SamProcessor:()=>i});var r=n("./src/base/processing_utils.js"),s=n("./src/models/auto/image_processing_auto.js");class i extends r.Processor{static image_processor_class=s.AutoImageProcessor;async _call(...e){return await this.image_processor(...e)}post_process_masks(...e){return this.image_processor.post_process_masks(...e)}reshape_input_points(...e){return this.image_processor.reshape_input_points(...e)}}},"./src/models/seamless_m4t/feature_extraction_seamless_m4t.js":(e,t,n)=>{n.r(t),n.d(t,{SeamlessM4TFeatureExtractor:()=>a});var r=n("./src/base/feature_extraction_utils.js"),s=n("./src/utils/tensor.js"),i=n("./src/utils/audio.js");class a extends r.FeatureExtractor{constructor(e){super(e);const t=this.config.sampling_rate,n=(0,i.mel_filter_bank)(257,this.config.num_mel_bins,20,Math.floor(t/2),t,null,"kaldi",!0);this.mel_filters=n,this.window=(0,i.window_function)(400,"povey",{periodic:!1})}async _extract_fbank_features(e,t){return e=e.map(e=>32768*e),(0,i.spectrogram)(e,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1.192092955078125e-7,remove_dc_offset:!0,max_num_frames:t,transpose:!0})}async _call(e,{padding:t=!0,pad_to_multiple_of:n=2,do_normalize_per_mel_bins:i=!0,return_attention_mask:a=!0}={}){(0,r.validate_audio_inputs)(e,"SeamlessM4TFeatureExtractor");let o,l=await this._extract_fbank_features(e,this.config.max_length);if(i){const[e,t]=l.dims,n=l.data;for(let r=0;r<t;++r){let s=0;for(let i=0;i<e;++i)s+=n[i*t+r];const i=s/e;let a=0;for(let s=0;s<e;++s)a+=(n[s*t+r]-i)**2;a/=e-1;const o=Math.sqrt(a+1e-7);for(let s=0;s<e;++s){const e=s*t+r;n[e]=(n[e]-i)/o}}}if(t){const[e,t]=l.dims,r=l.data,i=e%n;if(i>0){const n=new Float32Array(t*(e+i));n.set(r),n.fill(this.config.padding_value,r.length);const u=e+i;l=new s.Tensor(l.type,n,[u,t]),a&&(o=new s.Tensor("int64",new BigInt64Array(u),[1,u]),o.data.fill(1n,0,e))}}const[u,c]=l.dims,d=this.config.stride;if(0!==u%d)throw new Error(`The number of frames (${u}) must be a multiple of the stride (${d}).`);const p=l.view(1,Math.floor(u/d),c*d),h={input_features:p};if(a){const e=p.dims[1],t=new BigInt64Array(e);if(o){const e=o.data;for(let n=1,r=0;n<u;n+=d,++r)t[r]=e[n]}else t.fill(1n);h.attention_mask=new s.Tensor("int64",t,[1,e])}return h}}},"./src/models/segformer/image_processing_segformer.js":(e,t,n)=>{n.r(t),n.d(t,{SegformerFeatureExtractor:()=>i,SegformerImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{post_process_semantic_segmentation(...e){return(0,r.post_process_semantic_segmentation)(...e)}}class i extends s{}},"./src/models/siglip/image_processing_siglip.js":(e,t,n)=>{n.r(t),n.d(t,{SiglipImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}},"./src/models/smolvlm/image_processing_smolvlm.js":(e,t,n)=>{n.r(t),n.d(t,{SmolVLMImageProcessor:()=>r.Idefics3ImageProcessor});var r=n("./src/models/idefics3/image_processing_idefics3.js")},"./src/models/smolvlm/processing_smolvlm.js":(e,t,n)=>{n.r(t),n.d(t,{SmolVLMProcessor:()=>r.Idefics3Processor});var r=n("./src/models/idefics3/processing_idefics3.js")},"./src/models/snac/feature_extraction_snac.js":(e,t,n)=>{n.r(t),n.d(t,{SnacFeatureExtractor:()=>s});var r=n("./src/models/dac/feature_extraction_dac.js");class s extends r.DacFeatureExtractor{}},"./src/models/speecht5/feature_extraction_speecht5.js":(e,t,n)=>{n.r(t),n.d(t,{SpeechT5FeatureExtractor:()=>s});var r=n("./src/base/feature_extraction_utils.js");class s extends r.FeatureExtractor{}},"./src/models/speecht5/processing_speecht5.js":(e,t,n)=>{n.r(t),n.d(t,{SpeechT5Processor:()=>a});var r=n("./src/base/processing_utils.js"),s=n("./src/tokenizers.js"),i=n("./src/models/auto/feature_extraction_auto.js");class a extends r.Processor{static tokenizer_class=s.AutoTokenizer;static feature_extractor_class=i.AutoFeatureExtractor;async _call(e){return await this.feature_extractor(e)}}},"./src/models/swin2sr/image_processing_swin2sr.js":(e,t,n)=>{n.r(t),n.d(t,{Swin2SRImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{pad_image(e,t,n,r={}){const[s,i,a]=t;return super.pad_image(e,t,{width:i+(n-i%n)%n,height:s+(n-s%n)%n},{mode:"symmetric",center:!1,constant_values:-1,...r})}}},"./src/models/ultravox/processing_ultravox.js":(e,t,n)=>{n.r(t),n.d(t,{UltravoxProcessor:()=>a});var r=n("./src/models/auto/feature_extraction_auto.js"),s=n("./src/tokenizers.js"),i=n("./src/base/processing_utils.js");class a extends i.Processor{static tokenizer_class=s.AutoTokenizer;static feature_extractor_class=r.AutoFeatureExtractor;static uses_processor_config=!0;async _call(e,t=null,n={}){if(Array.isArray(e))throw new Error("Batched inputs are not supported yet.");let r={};if(t){const s=t.length,{input_features:i}=await this.feature_extractor(t,{...n,max_length:s}),a=Math.round(s/this.config.encoder_ds_factor+1e-4),o=1+Math.ceil(a/this.config.stack_factor);r.audio_token_len=[o],r.audio_values=i;const l=this.config.audio_placeholder;if(!e.includes(l))throw new Error(`The input text does not contain the image token ${l}.`);e=e.replaceAll(l,l.repeat(o))}return{...this.tokenizer(e,{add_special_tokens:!1,...n}),...r}}}},"./src/models/vit/image_processing_vit.js":(e,t,n)=>{n.r(t),n.d(t,{ViTFeatureExtractor:()=>i,ViTImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}class i extends s{}},"./src/models/vitmatte/image_processing_vitmatte.js":(e,t,n)=>{n.r(t),n.d(t,{VitMatteImageProcessor:()=>i});var r=n("./src/base/image_processors_utils.js"),s=n("./src/utils/tensor.js");class i extends r.ImageProcessor{async _call(e,t){Array.isArray(e)||(e=[e]),Array.isArray(t)||(t=[t]);const n=await qd.all(e.map(e=>this.preprocess(e))),r=await qd.all(t.map(e=>this.preprocess(e,{do_normalize:!1,do_convert_rgb:!1,do_convert_grayscale:!0})));return{pixel_values:(0,s.stack)(n.map((e,t)=>(0,s.cat)([e.pixel_values,r[t].pixel_values],0)),0),original_sizes:n.map(e=>e.original_size),reshaped_input_sizes:n.map(e=>e.reshaped_input_size)}}}},"./src/models/vitpose/image_processing_vitpose.js":(e,t,n)=>{n.r(t),n.d(t,{VitPoseImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{post_process_pose_estimation(e,t,{threshold:n=null}={}){const r=e.tolist(),[s,i,a,o]=e.dims,l=[];for(let e=0;e<s;++e){const s=r[e],i=t[e],u=[];for(let e=0;e<i.length;++e){const t=i[e],r=[],l=[],c=[],d=t.at(-2)/o,p=t.at(-1)/a;for(let e=0;e<s.length;++e){let[t,i]=[0,0],a=0,o=-1/0;const u=s[e];for(let e=0;e<u.length;++e){const n=u[e];for(let r=0;r<n.length;++r){const s=n[r];a+=s,o=Math.max(o,s),t+=(r+.5)*s,i+=e*s}}if(null!=n&&o<n)continue;const h=[d*t/a,p*i/a];r.push(h),c.push(e),l.push(o)}u.push({bbox:t,scores:l,labels:c,keypoints:r})}l.push(u)}return l}}},"./src/models/voxtral/processing_voxtral.js":(e,t,n)=>{n.r(t),n.d(t,{VoxtralProcessor:()=>l});var r=n("./src/models/auto/feature_extraction_auto.js"),s=n("./src/tokenizers.js"),i=n("./src/base/processing_utils.js"),a=n("./src/utils/tensor.js");const o="[AUDIO]";class l extends i.Processor{static tokenizer_class=s.AutoTokenizer;static feature_extractor_class=r.AutoFeatureExtractor;static uses_processor_config=!1;async _call(e,t=null,n={}){if(Array.isArray(e))throw new Error("Batched inputs are not supported yet.");const r={};if(t){if(!e.includes(o))throw new Error(`The input text does not contain the audio token ${o}.`);Array.isArray(t)||(t=[t]);const s=e.split(o),i=s.length-1;if(i!==t.length)throw new Error(`The number of audio inputs (${t.length}) does not match the number of audio tokens in the text (${i}).`);const l=this.feature_extractor.config.n_samples,u=t.map(e=>function(e,t){const n=[];for(let r=0;r<e.length;r+=t)n.push(e.subarray(r,Math.min(r+t,e.length)));return n}(e,l)),c=u.map(e=>e.length),d=u.flat(),p=(await qd.all(d.map(e=>this.feature_extractor(e,n)))).map(e=>e.input_features);r.audio_values=p.length>1?(0,a.cat)(p,0):p[0];let h=s[0];for(let e=0;e<c.length;++e){h+="[BEGIN_AUDIO]";for(let t=0;t<c[e];++t)h+=o.repeat(375);h+=s[e+1]}e=h}return{...this.tokenizer(e,{add_special_tokens:!1,...n}),...r}}}},"./src/models/wav2vec2/feature_extraction_wav2vec2.js":(e,t,n)=>{n.r(t),n.d(t,{Wav2Vec2FeatureExtractor:()=>i});var r=n("./src/base/feature_extraction_utils.js"),s=n("./src/utils/tensor.js");class i extends r.FeatureExtractor{_zero_mean_unit_var_norm(e){const t=e.reduce((e,t)=>e+t,0)/e.length,n=e.reduce((e,n)=>e+(n-t)**2,0)/e.length;return e.map(e=>(e-t)/Math.sqrt(n+1e-7))}async _call(e){(0,r.validate_audio_inputs)(e,"Wav2Vec2FeatureExtractor"),e instanceof Float64Array&&(e=new Float32Array(e));let t=e;this.config.do_normalize&&(t=this._zero_mean_unit_var_norm(t));const n=[1,t.length];return{input_values:new s.Tensor("float32",t,n),attention_mask:new s.Tensor("int64",new BigInt64Array(t.length).fill(1n),n)}}}},"./src/models/wav2vec2/processing_wav2vec2.js":(e,t,n)=>{n.r(t),n.d(t,{Wav2Vec2Processor:()=>a});var r=n("./src/tokenizers.js"),s=n("./src/models/auto/feature_extraction_auto.js"),i=n("./src/base/processing_utils.js");class a extends i.Processor{static tokenizer_class=r.AutoTokenizer;static feature_extractor_class=s.AutoFeatureExtractor;async _call(e){return await this.feature_extractor(e)}}},"./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js":(e,t,n)=>{n.r(t),n.d(t,{Wav2Vec2ProcessorWithLM:()=>a});var r=n("./src/tokenizers.js"),s=n("./src/models/auto/feature_extraction_auto.js"),i=n("./src/base/processing_utils.js");class a extends i.Processor{static tokenizer_class=r.AutoTokenizer;static feature_extractor_class=s.AutoFeatureExtractor;async _call(e){return await this.feature_extractor(e)}}},"./src/models/wespeaker/feature_extraction_wespeaker.js":(e,t,n)=>{n.r(t),n.d(t,{WeSpeakerFeatureExtractor:()=>i});var r=n("./src/base/feature_extraction_utils.js"),s=(n("./src/utils/tensor.js"),n("./src/utils/audio.js"));class i extends r.FeatureExtractor{constructor(e){super(e);const t=this.config.sampling_rate,n=(0,s.mel_filter_bank)(257,this.config.num_mel_bins,20,Math.floor(t/2),t,null,"kaldi",!0);this.mel_filters=n,this.window=(0,s.window_function)(400,"hamming",{periodic:!1}),this.min_num_frames=this.config.min_num_frames}async _extract_fbank_features(e){return e=e.map(e=>32768*e),(0,s.spectrogram)(e,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1.192092955078125e-7,remove_dc_offset:!0,transpose:!0,min_num_frames:this.min_num_frames})}async _call(e){(0,r.validate_audio_inputs)(e,"WeSpeakerFeatureExtractor");const t=(await this._extract_fbank_features(e)).unsqueeze_(0);if(null===this.config.fbank_centering_span){const e=t.mean(1).data,n=t.data,[r,s,i]=t.dims;for(let t=0;t<r;++t){const r=t*s*i,a=t*i;for(let t=0;t<s;++t){const s=r+t*i;for(let t=0;t<i;++t)n[s+t]-=e[a+t]}}}return{input_features:t}}}},"./src/models/whisper/common_whisper.js":(e,t,n)=>{n.r(t),n.d(t,{WHISPER_LANGUAGE_MAPPING:()=>s,WHISPER_TO_LANGUAGE_CODE_MAPPING:()=>i,whisper_language_to_code:()=>a});const r=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],s=new Map(r),i=new Map([...r.map(([e,t])=>[t,e]),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]);function a(e){e=e.toLowerCase();let t=i.get(e);if(void 0===t){const n=e.match(/^<\|([a-z]{2})\|>$/);if(n&&(e=n[1]),!s.has(e)){const t=2===e.length?s.keys():s.values();throw new Error(`Language "${e}" is not supported. Must be one of: ${JSON.stringify(Array.from(t))}`)}t=e}return t}},"./src/models/whisper/feature_extraction_whisper.js":(e,t,n)=>{n.r(t),n.d(t,{WhisperFeatureExtractor:()=>a});var r=n("./src/base/feature_extraction_utils.js"),s=(n("./src/utils/tensor.js"),n("./src/utils/audio.js")),i=n("./src/utils/maths.js");class a extends r.FeatureExtractor{constructor(e){super(e),this.config.mel_filters??=(0,s.mel_filter_bank)(Math.floor(1+this.config.n_fft/2),this.config.feature_size,0,8e3,this.config.sampling_rate,"slaney","slaney"),this.window=(0,s.window_function)(this.config.n_fft,"hann")}async _extract_fbank_features(e){const t=await(0,s.spectrogram)(e,this.window,this.config.n_fft,this.config.hop_length,{power:2,mel_filters:this.config.mel_filters,log_mel:"log10",max_num_frames:Math.min(Math.floor(e.length/this.config.hop_length),this.config.nb_max_frames)}),n=t.data,r=(0,i.max)(n)[0];for(let e=0;e<n.length;++e)n[e]=(Math.max(n[e],r-8)+4)/4;return t}async _call(e,{max_length:t=null}={}){let n;(0,r.validate_audio_inputs)(e,"WhisperFeatureExtractor");const s=t??this.config.n_samples;return e.length>s?(e.length>this.config.n_samples&&console.warn("Attempting to extract features for audio longer than 30 seconds. If using a pipeline to extract transcript from a long audio clip, remember to specify `chunk_length_s` and/or `stride_length_s`."),n=e.slice(0,s)):(n=new Float32Array(s),n.set(e)),{input_features:(await this._extract_fbank_features(n)).unsqueeze_(0)}}}},"./src/models/whisper/generation_whisper.js":(e,t,n)=>{n.r(t),n.d(t,{WhisperGenerationConfig:()=>s});var r=n("./src/generation/configuration_utils.js");class s extends r.GenerationConfig{return_timestamps=null;return_token_timestamps=null;num_frames=null;alignment_heads=null;task=null;language=null;no_timestamps_token_id=null;prompt_ids=null;is_multilingual=null;lang_to_id=null;task_to_id=null;max_initial_timestamp_index=1}},"./src/models/whisper/processing_whisper.js":(e,t,n)=>{n.r(t),n.d(t,{WhisperProcessor:()=>a});var r=n("./src/models/auto/feature_extraction_auto.js"),s=n("./src/tokenizers.js"),i=n("./src/base/processing_utils.js");class a extends i.Processor{static tokenizer_class=s.AutoTokenizer;static feature_extractor_class=r.AutoFeatureExtractor;async _call(e){return await this.feature_extractor(e)}}},"./src/models/yolos/image_processing_yolos.js":(e,t,n)=>{n.r(t),n.d(t,{YolosFeatureExtractor:()=>i,YolosImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{post_process_object_detection(...e){return(0,r.post_process_object_detection)(...e)}}class i extends s{}},"./src/ops/registry.js":(e,t,n)=>{n.r(t),n.d(t,{TensorOpRegistry:()=>a});var r=n("./src/backends/onnx.js"),s=n("./src/utils/tensor.js");const i=async(e,t,n)=>{const i=await(0,r.createInferenceSession)(new Uint8Array(e),t);return async e=>{const t=(0,r.isONNXProxy)(),a=Object.fromEntries(Object.entries(e).map(([e,n])=>[e,(t?n.clone():n).ort_tensor])),o=await(0,r.runInferenceSession)(i,a);return Array.isArray(n)?n.map(e=>new s.Tensor(o[e])):new s.Tensor(o[n])}};class a{static session_options={};static get nearest_interpolate_4d(){return this._nearest_interpolate_4d||(this._nearest_interpolate_4d=i([8,10,18,0,58,129,1,10,41,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,18,10,4,109,111,100,101,34,7,110,101,97,114,101,115,116,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,21],this.session_options,"y")),this._nearest_interpolate_4d}static get bilinear_interpolate_4d(){return this._bilinear_interpolate_4d||(this._bilinear_interpolate_4d=i([8,9,18,0,58,128,1,10,40,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,17,10,4,109,111,100,101,34,6,108,105,110,101,97,114,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bilinear_interpolate_4d}static get bicubic_interpolate_4d(){return this._bicubic_interpolate_4d||(this._bicubic_interpolate_4d=i([8,9,18,0,58,127,10,39,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,16,10,4,109,111,100,101,34,5,99,117,98,105,99,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bicubic_interpolate_4d}static get matmul(){return this._matmul||(this._matmul=i([8,9,18,0,58,55,10,17,10,1,97,10,1,98,18,1,99,34,6,77,97,116,77,117,108,18,1,114,90,9,10,1,97,18,4,10,2,8,1,90,9,10,1,98,18,4,10,2,8,1,98,9,10,1,99,18,4,10,2,8,1,66,2,16,20],this.session_options,"c")),this._matmul}static get stft(){return this._stft||(this._stft=i([8,7,18,0,58,148,1,10,38,10,1,115,10,1,106,10,1,119,10,1,108,18,1,111,34,4,83,84,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,115,90,26,10,1,115,18,21,10,19,8,1,18,15,10,3,18,1,98,10,3,18,1,115,10,3,18,1,99,90,11,10,1,106,18,6,10,4,8,7,18,0,90,16,10,1,119,18,11,10,9,8,1,18,5,10,3,18,1,119,90,11,10,1,108,18,6,10,4,8,7,18,0,98,31,10,1,111,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,102,10,3,18,1,100,10,3,18,1,99,66,2,16,17],this.session_options,"o")),this._stft}static get rfft(){return this._rfft||(this._rfft=i([8,9,18,0,58,97,10,33,10,1,120,10,0,10,1,97,18,1,121,34,3,68,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,100,90,21,10,1,120,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,90,11,10,1,97,18,6,10,4,8,7,18,0,98,21,10,1,121,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,66,2,16,20],this.session_options,"y")),this._rfft}static get top_k(){return this._top_k||(this._top_k=i([8,10,18,0,58,73,10,18,10,1,120,10,1,107,18,1,118,18,1,105,34,4,84,111,112,75,18,1,116,90,9,10,1,120,18,4,10,2,8,1,90,15,10,1,107,18,10,10,8,8,7,18,4,10,2,8,1,98,9,10,1,118,18,4,10,2,8,1,98,9,10,1,105,18,4,10,2,8,7,66,2,16,21],this.session_options,["v","i"])),this._top_k}static get slice(){return this._slice||(this._slice=i([8,7,18,0,58,96,10,25,10,1,120,10,1,115,10,1,101,10,1,97,10,1,116,18,1,121,34,5,83,108,105,99,101,18,1,114,90,9,10,1,120,18,4,10,2,8,1,90,9,10,1,115,18,4,10,2,8,7,90,9,10,1,101,18,4,10,2,8,7,90,9,10,1,97,18,4,10,2,8,7,90,9,10,1,116,18,4,10,2,8,7,98,9,10,1,121,18,4,10,2,8,1,66,2,16,13],this.session_options,"y")),this._slice}}},"./src/pipelines.js":(e,t,n)=>{n.r(t),n.d(t,{AudioClassificationPipeline:()=>C,AutomaticSpeechRecognitionPipeline:()=>P,BackgroundRemovalPipeline:()=>z,DepthEstimationPipeline:()=>R,DocumentQuestionAnsweringPipeline:()=>D,FeatureExtractionPipeline:()=>$,FillMaskPipeline:()=>y,ImageClassificationPipeline:()=>I,ImageFeatureExtractionPipeline:()=>S,ImageSegmentationPipeline:()=>F,ImageToImagePipeline:()=>j,ImageToTextPipeline:()=>A,ObjectDetectionPipeline:()=>L,Pipeline:()=>f,QuestionAnsweringPipeline:()=>w,SummarizationPipeline:()=>x,Text2TextGenerationPipeline:()=>b,TextClassificationPipeline:()=>_,TextGenerationPipeline:()=>k,TextToAudioPipeline:()=>N,TokenClassificationPipeline:()=>g,TranslationPipeline:()=>v,ZeroShotAudioClassificationPipeline:()=>E,ZeroShotClassificationPipeline:()=>T,ZeroShotImageClassificationPipeline:()=>O,ZeroShotObjectDetectionPipeline:()=>B,pipeline:()=>U});var r=n("./src/tokenizers.js"),s=n("./src/models.js"),i=n("./src/models/auto/processing_auto.js"),a=(n("./src/base/processing_utils.js"),n("./src/utils/generic.js")),o=n("./src/utils/core.js"),l=n("./src/utils/maths.js"),u=n("./src/utils/audio.js"),c=n("./src/utils/tensor.js"),d=n("./src/utils/image.js");async function p(e){return Array.isArray(e)||(e=[e]),await qd.all(e.map(e=>d.RawImage.read(e)))}async function h(e,t){return Array.isArray(e)||(e=[e]),await qd.all(e.map(e=>"string"==typeof e||e instanceof URL?(0,u.read_audio)(e,t):e instanceof Float64Array?new Float32Array(e):e))}function m(e,t){t&&(e=e.map(e=>0|e));const[n,r,s,i]=e;return{xmin:n,ymin:r,xmax:s,ymax:i}}class f extends a.Callable{constructor({task:e,model:t,tokenizer:n=null,processor:r=null}){super(),this.task=e,this.model=t,this.tokenizer=n,this.processor=r}async dispose(){await this.model.dispose()}}class _ extends f{constructor(e){super(e)}async _call(e,{top_k:t=1}={}){const n=this.tokenizer(e,{padding:!0,truncation:!0}),r=await this.model(n),s="multi_label_classification"===this.model.config.problem_type?e=>e.sigmoid():e=>new c.Tensor("float32",(0,l.softmax)(e.data),e.dims),i=this.model.config.id2label,a=[];for(const e of r.logits){const n=s(e),r=await(0,c.topk)(n,t),o=r[0].tolist(),l=r[1].tolist().map((e,t)=>({label:i?i[e]:`LABEL_${e}`,score:o[t]}));1===t?a.push(...l):a.push(l)}return Array.isArray(e)||1===t?a:a[0]}}class g extends f{constructor(e){super(e)}async _call(e,{ignore_labels:t=["O"]}={}){const n=Array.isArray(e),r=this.tokenizer(n?e:[e],{padding:!0,truncation:!0}),s=(await this.model(r)).logits,i=this.model.config.id2label,a=[];for(let e=0;e<s.dims[0];++e){const n=r.input_ids[e],o=s[e],u=[];for(let e=0;e<o.dims[0];++e){const r=o[e],s=(0,l.max)(r.data)[1],a=i?i[s]:`LABEL_${s}`;if(t.includes(a))continue;const c=this.tokenizer.decode([n[e].item()],{skip_special_tokens:!0});if(""===c)continue;const d=(0,l.softmax)(r.data);u.push({entity:a,score:d[s],index:e,word:c})}a.push(u)}return n?a:a[0]}}class w extends f{constructor(e){super(e)}async _call(e,t,{top_k:n=1}={}){const r=this.tokenizer(e,{text_pair:t,padding:!0,truncation:!0}),{start_logits:s,end_logits:i}=await this.model(r),a=r.input_ids.tolist(),u=r.attention_mask.tolist(),c=this.tokenizer.all_special_ids,d=[];for(let e=0;e<s.dims[0];++e){const t=a[e],r=t.findIndex(e=>e==this.tokenizer.sep_token_id),p=(u[e].map((e,n)=>1==e&&(0===n||n>r&&-1===c.findIndex(e=>e==t[n]))),s[e].tolist()),h=i[e].tolist();for(let n=1;n<p.length;++n)(0==u[e]||n<=r||-1!==c.findIndex(e=>e==t[n]))&&(p[n]=-1/0,h[n]=-1/0);const m=(0,l.softmax)(p).map((e,t)=>[e,t]),f=(0,l.softmax)(h).map((e,t)=>[e,t]);m[0][0]=0,f[0][0]=0;const _=(0,o.product)(m,f).filter(e=>e[0][1]<=e[1][1]).map(e=>[e[0][1],e[1][1],e[0][0]*e[1][0]]).sort((e,t)=>t[2]-e[2]);for(let e=0;e<Math.min(_.length,n);++e){const[n,r,s]=_[e],i=t.slice(n,r+1),a=this.tokenizer.decode(i,{skip_special_tokens:!0});d.push({answer:a,score:s})}}return 1===n?d[0]:d}}class y extends f{constructor(e){super(e)}async _call(e,{top_k:t=5}={}){const n=this.tokenizer(e,{padding:!0,truncation:!0}),{logits:r}=await this.model(n),s=[],i=n.input_ids.tolist();for(let e=0;e<i.length;++e){const n=i[e],a=n.findIndex(e=>e==this.tokenizer.mask_token_id);if(-1===a)throw Error(`Mask token (${this.tokenizer.mask_token}) not found in text.`);const o=r[e][a],u=await(0,c.topk)(new c.Tensor("float32",(0,l.softmax)(o.data),o.dims),t),d=u[0].tolist(),p=u[1].tolist();s.push(p.map((e,t)=>{const r=n.slice();return r[a]=e,{score:d[t],token:Number(e),token_str:this.tokenizer.decode([e]),sequence:this.tokenizer.decode(r,{skip_special_tokens:!0})}}))}return Array.isArray(e)?s:s[0]}}class b extends f{_key="generated_text";constructor(e){super(e)}async _call(e,t={}){Array.isArray(e)||(e=[e]),this.model.config.prefix&&(e=e.map(e=>this.model.config.prefix+e));const n=this.model.config.task_specific_params;n&&n[this.task]&&n[this.task].prefix&&(e=e.map(e=>n[this.task].prefix+e));const r=this.tokenizer,s={padding:!0,truncation:!0};let i;i=this instanceof v&&"_build_translation_inputs"in r?r._build_translation_inputs(e,s,t):r(e,s);const a=await this.model.generate({...i,...t});return r.batch_decode(a,{skip_special_tokens:!0}).map(e=>({[this._key]:e}))}}class x extends b{_key="summary_text";constructor(e){super(e)}}class v extends b{_key="translation_text";constructor(e){super(e)}}function M(e){return Array.isArray(e)&&e.every(e=>"role"in e&&"content"in e)}class k extends f{constructor(e){super(e)}async _call(e,t={}){let n,r=!1,s=!1,i=t.add_special_tokens??(this.tokenizer.add_bos_token||this.tokenizer.add_eos_token)??!1;if("string"==typeof e)n=e=[e];else if(Array.isArray(e)&&e.every(e=>"string"==typeof e))r=!0,n=e;else{if(M(e))e=[e];else{if(!Array.isArray(e)||!e.every(M))throw new Error("Input must be a string, an array of strings, a Chat, or an array of Chats");r=!0}s=!0,n=e.map(e=>this.tokenizer.apply_chat_template(e,{tokenize:!1,add_generation_prompt:!0})),i=!1}const a=!s&&(t.return_full_text??!0);this.tokenizer.padding_side="left";const o=this.tokenizer(n,{add_special_tokens:i,padding:!0,truncation:!0}),l=await this.model.generate({...o,...t}),u=this.tokenizer.batch_decode(l,{skip_special_tokens:!0});let c;!a&&o.input_ids.dims.at(-1)>0&&(c=this.tokenizer.batch_decode(o.input_ids,{skip_special_tokens:!0}).map(e=>e.length));const d=Array.from({length:e.length},e=>[]);for(let t=0;t<u.length;++t){const n=Math.floor(t/l.dims[0]*e.length);c&&(u[t]=u[t].slice(c[n])),d[n].push({generated_text:s?[...e[n],{role:"assistant",content:u[t]}]:u[t]})}return r||1!==d.length?d:d[0]}}class T extends f{constructor(e){super(e),this.label2id=Object.fromEntries(Object.entries(this.model.config.label2id).map(([e,t])=>[e.toLowerCase(),t])),this.entailment_id=this.label2id.entailment,void 0===this.entailment_id&&(console.warn("Could not find 'entailment' in label2id mapping. Using 2 as entailment_id."),this.entailment_id=2),this.contradiction_id=this.label2id.contradiction??this.label2id.not_entailment,void 0===this.contradiction_id&&(console.warn("Could not find 'contradiction' in label2id mapping. Using 0 as contradiction_id."),this.contradiction_id=0)}async _call(e,t,{hypothesis_template:n="This example is {}.",multi_label:r=!1}={}){const s=Array.isArray(e);s||(e=[e]),Array.isArray(t)||(t=[t]);const i=t.map(e=>n.replace("{}",e)),a=r||1===t.length,o=[];for(const n of e){const e=[];for(const t of i){const r=this.tokenizer(n,{text_pair:t,padding:!0,truncation:!0}),s=await this.model(r);a?e.push([s.logits.data[this.contradiction_id],s.logits.data[this.entailment_id]]):e.push(s.logits.data[this.entailment_id])}const r=(a?e.map(e=>(0,l.softmax)(e)[1]):(0,l.softmax)(e)).map((e,t)=>[e,t]).sort((e,t)=>t[0]-e[0]);o.push({sequence:n,labels:r.map(e=>t[e[1]]),scores:r.map(e=>e[0])})}return s?o:o[0]}}class $ extends f{constructor(e){super(e)}async _call(e,{pooling:t="none",normalize:n=!1,quantize:r=!1,precision:s="binary"}={}){const i=this.tokenizer(e,{padding:!0,truncation:!0}),a=await this.model(i);let o=a.last_hidden_state??a.logits??a.token_embeddings;switch(t){case"none":break;case"mean":o=(0,c.mean_pooling)(o,i.attention_mask);break;case"first_token":case"cls":o=o.slice(null,0);break;case"last_token":case"eos":o=o.slice(null,-1);break;default:throw Error(`Pooling method '${t}' not supported.`)}return n&&(o=o.normalize(2,-1)),r&&(o=(0,c.quantize_embeddings)(o,s)),o}}class S extends f{constructor(e){super(e)}async _call(e,{pool:t=null}={}){const n=await p(e),{pixel_values:r}=await this.processor(n),s=await this.model({pixel_values:r});let i;if(t){if(!("pooler_output"in s))throw Error("No pooled output was returned. Make sure the model has a 'pooler' layer when using the 'pool' option.");i=s.pooler_output}else i=s.last_hidden_state??s.logits??s.image_embeds;return i}}class C extends f{constructor(e){super(e)}async _call(e,{top_k:t=5}={}){const n=this.processor.feature_extractor.config.sampling_rate,r=await h(e,n),s=this.model.config.id2label,i=[];for(const e of r){const n=await this.processor(e),r=(await this.model(n)).logits[0],a=await(0,c.topk)(new c.Tensor("float32",(0,l.softmax)(r.data),r.dims),t),o=a[0].tolist(),u=a[1].tolist().map((e,t)=>({label:s?s[e]:`LABEL_${e}`,score:o[t]}));i.push(u)}return Array.isArray(e)?i:i[0]}}class E extends f{constructor(e){super(e)}async _call(e,t,{hypothesis_template:n="This is a sound of {}."}={}){const r=!Array.isArray(e);r&&(e=[e]);const s=t.map(e=>n.replace("{}",e)),i=this.tokenizer(s,{padding:!0,truncation:!0}),a=this.processor.feature_extractor.config.sampling_rate,o=await h(e,a),u=[];for(const e of o){const n=await this.processor(e),r=await this.model({...i,...n}),s=(0,l.softmax)(r.logits_per_audio.data);u.push([...s].map((e,n)=>({score:e,label:t[n]})))}return r?u[0]:u}}class P extends f{constructor(e){super(e)}async _call(e,t={}){switch(this.model.config.model_type){case"whisper":case"lite-whisper":return this._call_whisper(e,t);case"wav2vec2":case"wav2vec2-bert":case"unispeech":case"unispeech-sat":case"hubert":case"parakeet_ctc":return this._call_wav2vec2(e,t);case"moonshine":return this._call_moonshine(e,t);default:throw new Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)}}async _call_wav2vec2(e,t){t.language&&console.warn('`language` parameter is not yet supported for `wav2vec2` models, defaulting to "English".'),t.task&&console.warn('`task` parameter is not yet supported for `wav2vec2` models, defaulting to "transcribe".');const n=!Array.isArray(e);n&&(e=[e]);const r=this.processor.feature_extractor.config.sampling_rate,s=await h(e,r),i=[];for(const e of s){const t=await this.processor(e),n=(await this.model(t)).logits[0],r=[];for(const e of n)r.push((0,l.max)(e.data)[1]);const s=this.tokenizer.decode(r,{skip_special_tokens:!0}).trim();i.push({text:s})}return n?i[0]:i}async _call_whisper(e,t){const n=t.return_timestamps??!1,r=t.chunk_length_s??0,s=t.force_full_sequences??!1;let i=t.stride_length_s??null;const a={...t};"word"===n&&(a.return_token_timestamps=!0,a.return_timestamps=!1);const o=!Array.isArray(e);o&&(e=[e]);const u=this.processor.feature_extractor.config.chunk_length/this.model.config.max_source_positions,c=this.processor.feature_extractor.config.hop_length,d=this.processor.feature_extractor.config.sampling_rate,p=await h(e,d),m=[];for(const e of p){let t=[];if(r>0){if(null===i)i=r/6;else if(r<=i)throw Error("`chunk_length_s` must be larger than `stride_length_s`.");const n=d*r,s=d*i,a=n-2*s;let o=0;for(;;){const r=o+n,i=e.subarray(o,r),l=await this.processor(i),u=0===o,c=r>=e.length;if(t.push({stride:[i.length,u?0:s,c?0:s],input_features:l.input_features,is_last:c}),c)break;o+=a}}else t=[{stride:[e.length,0,0],input_features:(await this.processor(e)).input_features,is_last:!0}];for(const e of t){a.num_frames=Math.floor(e.stride[0]/c);const t=await this.model.generate({inputs:e.input_features,...a});"word"===n?(e.tokens=t.sequences.tolist()[0],e.token_timestamps=t.token_timestamps.tolist()[0].map(e=>(0,l.round)(e,2))):e.tokens=t[0].tolist(),e.stride=e.stride.map(e=>e/d)}const[o,p]=this.tokenizer._decode_asr(t,{time_precision:u,return_timestamps:n,force_full_sequences:s});m.push({text:o,...p})}return o?m[0]:m}async _call_moonshine(e,t){const n=!Array.isArray(e);n&&(e=[e]);const r=this.processor.feature_extractor.config.sampling_rate,s=await h(e,r),i=[];for(const e of s){const n=await this.processor(e),s=6*Math.floor(e.length/r),a=await this.model.generate({max_new_tokens:s,...t,...n}),o=this.processor.batch_decode(a,{skip_special_tokens:!0})[0];i.push({text:o})}return n?i[0]:i}}class A extends f{constructor(e){super(e)}async _call(e,t={}){const n=Array.isArray(e),r=await p(e),{pixel_values:s}=await this.processor(r),i=[];for(const e of s){e.dims=[1,...e.dims];const n=await this.model.generate({inputs:e,...t}),r=this.tokenizer.batch_decode(n,{skip_special_tokens:!0}).map(e=>({generated_text:e.trim()}));i.push(r)}return n?i:i[0]}}class I extends f{constructor(e){super(e)}async _call(e,{top_k:t=5}={}){const n=await p(e),{pixel_values:r}=await this.processor(n),s=await this.model({pixel_values:r}),i=this.model.config.id2label,a=[];for(const e of s.logits){const n=await(0,c.topk)(new c.Tensor("float32",(0,l.softmax)(e.data),e.dims),t),r=n[0].tolist(),s=n[1].tolist().map((e,t)=>({label:i?i[e]:`LABEL_${e}`,score:r[t]}));a.push(s)}return Array.isArray(e)?a:a[0]}}class F extends f{constructor(e){super(e),this.subtasks_mapping={panoptic:"post_process_panoptic_segmentation",instance:"post_process_instance_segmentation",semantic:"post_process_semantic_segmentation"}}async _call(e,{threshold:t=.5,mask_threshold:n=.5,overlap_mask_area_threshold:r=.8,label_ids_to_fuse:s=null,target_sizes:i=null,subtask:a=null}={}){if(Array.isArray(e)&&1!==e.length)throw Error("Image segmentation pipeline currently only supports a batch size of 1.");const o=await p(e),l=o.map(e=>[e.height,e.width]),u=await this.processor(o),{inputNames:c,outputNames:h}=this.model.sessions.model;if(!c.includes("pixel_values")){if(1!==c.length)throw Error(`Expected a single input name, but got ${c.length} inputs: ${c}.`);const e=c[0];if(e in u)throw Error(`Input name ${e} already exists in the inputs.`);u[e]=u.pixel_values}const m=await this.model(u);let f=null;if(null!==a)f=this.subtasks_mapping[a];else if(this.processor.image_processor)for(const[e,t]of Object.entries(this.subtasks_mapping))if(t in this.processor.image_processor){f=this.processor.image_processor[t].bind(this.processor.image_processor),a=e;break}const _=this.model.config.id2label,g=[];if(a)if("panoptic"===a||"instance"===a){const e=f(m,t,n,r,s,i??l)[0],a=e.segmentation;for(const t of e.segments_info){const e=new Uint8ClampedArray(a.data.length);for(let n=0;n<a.data.length;++n)a.data[n]===t.id&&(e[n]=255);const n=new d.RawImage(e,a.dims[1],a.dims[0],1);g.push({score:t.score,label:_[t.label_id],mask:n})}}else{if("semantic"!==a)throw Error(`Subtask ${a} not supported.`);{const{segmentation:e,labels:t}=f(m,i??l)[0];for(const n of t){const t=new Uint8ClampedArray(e.data.length);for(let r=0;r<e.data.length;++r)e.data[r]===n&&(t[r]=255);const r=new d.RawImage(t,e.dims[1],e.dims[0],1);g.push({score:null,label:_[n],mask:r})}}}else{const e=1e-5,t=m[h[0]];for(let n=0;n<l.length;++n){const r=l[n],s=t[n];s.data.some(t=>t<-e||t>1+e)&&s.sigmoid_();const i=await d.RawImage.fromTensor(s.mul_(255).to("uint8")).resize(r[1],r[0]);g.push({label:null,score:null,mask:i})}}return g}}class z extends F{constructor(e){super(e)}async _call(e,t={}){if(Array.isArray(e)&&1!==e.length)throw Error("Background removal pipeline currently only supports a batch size of 1.");const n=await p(e),r=await super._call(e,t);return n.map((e,t)=>{const n=e.clone();return n.putAlpha(r[t].mask),n})}}class O extends f{constructor(e){super(e)}async _call(e,t,{hypothesis_template:n="This is a photo of {}"}={}){const r=Array.isArray(e),s=await p(e),i=t.map(e=>n.replace("{}",e)),a=this.tokenizer(i,{padding:"siglip"!==this.model.config.model_type||"max_length",truncation:!0}),{pixel_values:o}=await this.processor(s),u=await this.model({...a,pixel_values:o}),c="siglip"===this.model.config.model_type?e=>e.sigmoid().data:e=>(0,l.softmax)(e.data),d=[];for(const e of u.logits_per_image){const n=[...c(e)].map((e,n)=>({score:e,label:t[n]}));n.sort((e,t)=>t.score-e.score),d.push(n)}return r?d:d[0]}}class L extends f{constructor(e){super(e)}async _call(e,{threshold:t=.9,percentage:n=!1}={}){const r=Array.isArray(e);if(r&&1!==e.length)throw Error("Object detection pipeline currently only supports a batch size of 1.");const s=await p(e),i=n?null:s.map(e=>[e.height,e.width]),{pixel_values:a,pixel_mask:o}=await this.processor(s),l=await this.model({pixel_values:a,pixel_mask:o}),u=this.processor.image_processor.post_process_object_detection(l,t,i),c=this.model.config.id2label,d=u.map(e=>e.boxes.map((t,r)=>({score:e.scores[r],label:c[e.classes[r]],box:m(t,!n)})));return r?d:d[0]}}class B extends f{constructor(e){super(e)}async _call(e,t,{threshold:n=.1,top_k:r=null,percentage:s=!1}={}){const i=Array.isArray(e),a=await p(e),o=this.tokenizer(t,{padding:!0,truncation:!0}),l=await this.processor(a),u=[];for(let e=0;e<a.length;++e){const i=a[e],c=s?null:[[i.height,i.width]],d=l.pixel_values[e].unsqueeze_(0),p=await this.model({...o,pixel_values:d});let h;if("post_process_grounded_object_detection"in this.processor){const e=this.processor.post_process_grounded_object_detection(p,o.input_ids,{box_threshold:n,text_threshold:n,target_sizes:c})[0];h=e.boxes.map((t,n)=>({score:e.scores[n],label:e.labels[n],box:m(t,!s)}))}else{const e=this.processor.image_processor.post_process_object_detection(p,n,c,!0)[0];h=e.boxes.map((n,r)=>({score:e.scores[r],label:t[e.classes[r]],box:m(n,!s)}))}h.sort((e,t)=>t.score-e.score),null!==r&&(h=h.slice(0,r)),u.push(h)}return i?u:u[0]}}class D extends f{constructor(e){super(e)}async _call(e,t,n={}){const r=(await p(e))[0],{pixel_values:s}=await this.processor(r),i=`<s_docvqa><s_question>${t}</s_question><s_answer>`,a=this.tokenizer(i,{add_special_tokens:!1,padding:!0,truncation:!0}).input_ids,o=await this.model.generate({inputs:s,max_length:this.model.config.decoder.max_position_embeddings,decoder_input_ids:a,...n}),l=this.tokenizer.batch_decode(o)[0].match(/<s_answer>(.*?)<\/s_answer>/);let u=null;return l&&l.length>=2&&(u=l[1].trim()),[{answer:u}]}}class N extends f{DEFAULT_VOCODER_ID="Xenova/speecht5_hifigan";constructor(e){super(e),this.vocoder=e.vocoder??null}async _call(e,{speaker_embeddings:t=null}={}){return this.processor?this._call_text_to_spectrogram(e,{speaker_embeddings:t}):this._call_text_to_waveform(e)}async _call_text_to_waveform(e){const t=this.tokenizer(e,{padding:!0,truncation:!0}),{waveform:n}=await this.model(t),r=this.model.config.sampling_rate;return new u.RawAudio(n.data,r)}async _call_text_to_spectrogram(e,{speaker_embeddings:t}){if(this.vocoder||(console.log("No vocoder specified, using default HifiGan vocoder."),this.vocoder=await s.AutoModel.from_pretrained(this.DEFAULT_VOCODER_ID,{dtype:"fp32"})),("string"==typeof t||t instanceof URL)&&(t=new Float32Array(await(await fetch(t)).arrayBuffer())),t instanceof Float32Array)t=new c.Tensor("float32",t,[1,t.length]);else if(!(t instanceof c.Tensor))throw new Error("Speaker embeddings must be a `Tensor`, `Float32Array`, `string`, or `URL`.");const{input_ids:n}=this.tokenizer(e,{padding:!0,truncation:!0}),{waveform:r}=await this.model.generate_speech(n,t,{vocoder:this.vocoder}),i=this.processor.feature_extractor.config.sampling_rate;return new u.RawAudio(r.data,i)}}class j extends f{constructor(e){super(e)}async _call(e){const t=await p(e),n=await this.processor(t),r=await this.model(n),s=[];for(const e of r.reconstruction){const t=e.squeeze().clamp_(0,1).mul_(255).round_().to("uint8");s.push(d.RawImage.fromTensor(t))}return s.length>1?s:s[0]}}class R extends f{constructor(e){super(e)}async _call(e){const t=await p(e),n=await this.processor(t),{predicted_depth:r}=await this.model(n),s=[];for(let e=0;e<t.length;++e){const n=r[e],[i,a]=n.dims.slice(-2),[o,l]=t[e].size,u=(await(0,c.interpolate_4d)(n.view(1,1,i,a),{size:[l,o],mode:"bilinear"})).view(l,o),p=u.min().item(),h=u.max().item(),m=u.sub(p).div_(h-p).mul_(255).to("uint8").unsqueeze(0),f=d.RawImage.fromTensor(m);s.push({predicted_depth:u,depth:f})}return s.length>1?s:s[0]}}const V=Object.freeze({"text-classification":{tokenizer:r.AutoTokenizer,pipeline:_,model:s.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-finetuned-sst-2-english"},type:"text"},"token-classification":{tokenizer:r.AutoTokenizer,pipeline:g,model:s.AutoModelForTokenClassification,default:{model:"Xenova/bert-base-multilingual-cased-ner-hrl"},type:"text"},"question-answering":{tokenizer:r.AutoTokenizer,pipeline:w,model:s.AutoModelForQuestionAnswering,default:{model:"Xenova/distilbert-base-cased-distilled-squad"},type:"text"},"fill-mask":{tokenizer:r.AutoTokenizer,pipeline:y,model:s.AutoModelForMaskedLM,default:{model:"Xenova/bert-base-uncased"},type:"text"},summarization:{tokenizer:r.AutoTokenizer,pipeline:x,model:s.AutoModelForSeq2SeqLM,default:{model:"Xenova/distilbart-cnn-6-6"},type:"text"},translation:{tokenizer:r.AutoTokenizer,pipeline:v,model:s.AutoModelForSeq2SeqLM,default:{model:"Xenova/t5-small"},type:"text"},"text2text-generation":{tokenizer:r.AutoTokenizer,pipeline:b,model:s.AutoModelForSeq2SeqLM,default:{model:"Xenova/flan-t5-small"},type:"text"},"text-generation":{tokenizer:r.AutoTokenizer,pipeline:k,model:s.AutoModelForCausalLM,default:{model:"Xenova/gpt2"},type:"text"},"zero-shot-classification":{tokenizer:r.AutoTokenizer,pipeline:T,model:s.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-mnli"},type:"text"},"audio-classification":{pipeline:C,model:s.AutoModelForAudioClassification,processor:i.AutoProcessor,default:{model:"Xenova/wav2vec2-base-superb-ks"},type:"audio"},"zero-shot-audio-classification":{tokenizer:r.AutoTokenizer,pipeline:E,model:s.AutoModel,processor:i.AutoProcessor,default:{model:"Xenova/clap-htsat-unfused"},type:"multimodal"},"automatic-speech-recognition":{tokenizer:r.AutoTokenizer,pipeline:P,model:[s.AutoModelForSpeechSeq2Seq,s.AutoModelForCTC],processor:i.AutoProcessor,default:{model:"Xenova/whisper-tiny.en"},type:"multimodal"},"text-to-audio":{tokenizer:r.AutoTokenizer,pipeline:N,model:[s.AutoModelForTextToWaveform,s.AutoModelForTextToSpectrogram],processor:[i.AutoProcessor,null],default:{model:"Xenova/speecht5_tts"},type:"text"},"image-to-text":{tokenizer:r.AutoTokenizer,pipeline:A,model:s.AutoModelForVision2Seq,processor:i.AutoProcessor,default:{model:"Xenova/vit-gpt2-image-captioning"},type:"multimodal"},"image-classification":{pipeline:I,model:s.AutoModelForImageClassification,processor:i.AutoProcessor,default:{model:"Xenova/vit-base-patch16-224"},type:"multimodal"},"image-segmentation":{pipeline:F,model:[s.AutoModelForImageSegmentation,s.AutoModelForSemanticSegmentation,s.AutoModelForUniversalSegmentation],processor:i.AutoProcessor,default:{model:"Xenova/detr-resnet-50-panoptic"},type:"multimodal"},"background-removal":{pipeline:z,model:[s.AutoModelForImageSegmentation,s.AutoModelForSemanticSegmentation,s.AutoModelForUniversalSegmentation],processor:i.AutoProcessor,default:{model:"Xenova/modnet"},type:"image"},"zero-shot-image-classification":{tokenizer:r.AutoTokenizer,pipeline:O,model:s.AutoModel,processor:i.AutoProcessor,default:{model:"Xenova/clip-vit-base-patch32"},type:"multimodal"},"object-detection":{pipeline:L,model:s.AutoModelForObjectDetection,processor:i.AutoProcessor,default:{model:"Xenova/detr-resnet-50"},type:"multimodal"},"zero-shot-object-detection":{tokenizer:r.AutoTokenizer,pipeline:B,model:s.AutoModelForZeroShotObjectDetection,processor:i.AutoProcessor,default:{model:"Xenova/owlvit-base-patch32"},type:"multimodal"},"document-question-answering":{tokenizer:r.AutoTokenizer,pipeline:D,model:s.AutoModelForDocumentQuestionAnswering,processor:i.AutoProcessor,default:{model:"Xenova/donut-base-finetuned-docvqa"},type:"multimodal"},"image-to-image":{pipeline:j,model:s.AutoModelForImageToImage,processor:i.AutoProcessor,default:{model:"Xenova/swin2SR-classical-sr-x2-64"},type:"image"},"depth-estimation":{pipeline:R,model:s.AutoModelForDepthEstimation,processor:i.AutoProcessor,default:{model:"Xenova/dpt-large"},type:"image"},"feature-extraction":{tokenizer:r.AutoTokenizer,pipeline:$,model:s.AutoModel,default:{model:"Xenova/all-MiniLM-L6-v2"},type:"text"},"image-feature-extraction":{processor:i.AutoProcessor,pipeline:S,model:[s.AutoModelForImageFeatureExtraction,s.AutoModel],default:{model:"Xenova/vit-base-patch16-224-in21k"},type:"image"}}),G=Object.freeze({"sentiment-analysis":"text-classification",ner:"token-classification",asr:"automatic-speech-recognition","text-to-speech":"text-to-audio",embeddings:"feature-extraction"});async function U(e,t=null,{progress_callback:n=null,config:r=null,cache_dir:s=null,local_files_only:i=!1,revision:a="main",device:l=null,dtype:u=null,subfolder:c="onnx",use_external_data_format:d=null,model_file_name:p=null,session_options:h={}}={}){e=G[e]??e;const m=V[e.split("_",1)[0]];if(!m)throw Error(`Unsupported pipeline: ${e}. Must be one of [${Object.keys(V)}]`);t||(t=m.default.model,console.log(`No model specified. Using default model: "${t}".`));const f={progress_callback:n,config:r,cache_dir:s,local_files_only:i,revision:a,device:l,dtype:u,subfolder:c,use_external_data_format:d,model_file_name:p,session_options:h},_=new Map([["tokenizer",m.tokenizer],["model",m.model],["processor",m.processor]]),g=await async function(e,t,n){const r=Object.create(null),s=[];for(const[i,a]of e.entries()){if(!a)continue;let e;e=Array.isArray(a)?new qd(async(e,r)=>{let s;for(const i of a){if(null===i)return void e(null);try{return void e(await i.from_pretrained(t,n))}catch(e){if(e.message?.includes("Unsupported model type"))s=e;else{if(!e.message?.includes("Could not locate file"))return void r(e);s=e}}}r(s)}):a.from_pretrained(t,n),r[i]=e,s.push(e)}await qd.all(s);for(const[e,t]of Object.entries(r))r[e]=await t;return r}(_,t,f);return g.task=e,(0,o.dispatchCallback)(n,{status:"ready",task:e,model:t}),new(0,m.pipeline)(g)}},"./src/tokenizers.js":(e,t,n)=>{n.r(t),n.d(t,{AlbertTokenizer:()=>ke,AutoTokenizer:()=>gt,BartTokenizer:()=>De,BertTokenizer:()=>Me,BlenderbotSmallTokenizer:()=>ct,BlenderbotTokenizer:()=>ut,BloomTokenizer:()=>Ve,CLIPTokenizer:()=>it,CamembertTokenizer:()=>Fe,CodeGenTokenizer:()=>st,CodeLlamaTokenizer:()=>qe,CohereTokenizer:()=>mt,ConvBertTokenizer:()=>Pe,DebertaTokenizer:()=>Se,DebertaV2Tokenizer:()=>Ce,DistilBertTokenizer:()=>Ie,ElectraTokenizer:()=>Oe,Ernie4_5_Tokenizer:()=>_t,EsmTokenizer:()=>Xe,FalconTokenizer:()=>Ke,GPT2Tokenizer:()=>Be,GPTNeoXTokenizer:()=>Qe,GemmaTokenizer:()=>Ye,Grok1Tokenizer:()=>Ze,HerbertTokenizer:()=>Ee,LlamaTokenizer:()=>Ue,M2M100Tokenizer:()=>nt,MBart50Tokenizer:()=>je,MBartTokenizer:()=>Ne,MPNetTokenizer:()=>He,MarianTokenizer:()=>ot,MgpstrTokenizer:()=>ft,MobileBertTokenizer:()=>Te,NllbTokenizer:()=>tt,NougatTokenizer:()=>pt,PreTrainedTokenizer:()=>ve,Qwen2Tokenizer:()=>Je,RoFormerTokenizer:()=>Ae,RobertaTokenizer:()=>Re,SiglipTokenizer:()=>at,SpeechT5Tokenizer:()=>dt,SqueezeBertTokenizer:()=>$e,T5Tokenizer:()=>Le,TokenizerModel:()=>M,VitsTokenizer:()=>ht,Wav2Vec2CTCTokenizer:()=>lt,WhisperTokenizer:()=>rt,XLMRobertaTokenizer:()=>We,XLMTokenizer:()=>ze,is_chinese_char:()=>g});var r=n("./src/utils/generic.js"),s=n("./src/utils/core.js"),i=n("./src/utils/hub.js"),a=n("./src/utils/maths.js"),o=n("./src/utils/tensor.js"),l=n("./src/utils/data-structures.js"),u=n("./node_modules/@huggingface/jinja/dist/index.js"),c=n("./src/models/whisper/common_whisper.js");async function d(e,t){const n=await qd.all([(0,i.getModelJSON)(e,"tokenizer.json",!0,t),(0,i.getModelJSON)(e,"tokenizer_config.json",!0,t)]);return null!==t.legacy&&(n[1].legacy=t.legacy),n}function p(e,t=!0){if(void 0!==e.Regex){let t=e.Regex.replace(/\\([#&~])/g,"$1");for(const[e,n]of x)t=t.replaceAll(e,n);return new RegExp(t,"gu")}if(void 0!==e.String){const n=(0,s.escapeRegExp)(e.String);return new RegExp(t?n:`(${n})`,"gu")}return console.warn("Unknown pattern type:",e),null}function h(e){return new Map(Object.entries(e))}function m(e){const t=e.dims;switch(t.length){case 1:return e.tolist();case 2:if(1!==t[0])throw new Error("Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.");return e.tolist()[0];default:throw new Error(`Expected tensor to have 1-2 dimensions, got ${t.length}.`)}}function f(e){return e.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function _(e){return e.replace(/\p{M}/gu,"")}function g(e){return e>=19968&&e<=40959||e>=13312&&e<=19903||e>=131072&&e<=173791||e>=173824&&e<=177983||e>=177984&&e<=178207||e>=178208&&e<=183983||e>=63744&&e<=64255||e>=194560&&e<=195103}const w="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E",y=new RegExp(`^[${w}]+$`,"gu"),b=".,!?…。，、।۔،",x=new Map([["(?i:'s|'t|'re|'ve|'m|'ll|'d)","(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))"],["(?i:[sdmt]|ll|ve|re)","(?:[sS]|[dD]|[mM]|[tT]|[lL][lL]|[vV][eE]|[rR][eE])"],["[^\\r\\n\\p{L}\\p{N}]?+","[^\\r\\n\\p{L}\\p{N}]?"],["[^\\s\\p{L}\\p{N}]++","[^\\s\\p{L}\\p{N}]+"],[` ?[^(\\s|[${b}])]+`,` ?[^\\s${b}]+`]]);class v{constructor(e){this.content=e.content,this.id=e.id,this.single_word=e.single_word??!1,this.lstrip=e.lstrip??!1,this.rstrip=e.rstrip??!1,this.special=e.special??!1,this.normalized=e.normalized??null}}class M extends r.Callable{constructor(e){super(),this.config=e,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig(e,...t){switch(e.type){case"WordPiece":return new k(e);case"Unigram":return new T(e,...t);case"BPE":return new C(e);default:if(e.vocab)return Array.isArray(e.vocab)?new T(e,...t):Object.hasOwn(e,"continuing_subword_prefix")&&Object.hasOwn(e,"unk_token")?Object.hasOwn(e,"merges")?new C(e):new k(e):new E(e,...t);throw new Error(`Unknown TokenizerModel type: ${e.type}`)}}_call(e){return e=this.encode(e),this.fuse_unk&&(e=function(e,t,n){const r=[];let s=0;for(;s<e.length;)if(r.push(e[s]),(t.get(e[s])??n)===n)for(;++s<e.length&&(t.get(e[s])??n)===n;)t.get(r.at(-1))!==n&&(r[r.length-1]+=e[s]);else++s;return r}(e,this.tokens_to_ids,this.unk_token_id)),e}encode(e){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids(e){return e.map(e=>this.tokens_to_ids.get(e)??this.unk_token_id)}convert_ids_to_tokens(e){return e.map(e=>this.vocab[e]??this.unk_token)}}class k extends M{constructor(e){super(e),this.tokens_to_ids=h(e.vocab),this.unk_token_id=this.tokens_to_ids.get(e.unk_token),this.unk_token=e.unk_token,this.max_input_chars_per_word=e.max_input_chars_per_word??100,this.vocab=new Array(this.tokens_to_ids.size);for(const[e,t]of this.tokens_to_ids)this.vocab[t]=e}encode(e){const t=[];for(const n of e){const e=[...n];if(e.length>this.max_input_chars_per_word){t.push(this.unk_token);continue}let r=!1,s=0;const i=[];for(;s<e.length;){let t=e.length,n=null;for(;s<t;){let r=e.slice(s,t).join("");if(s>0&&(r=this.config.continuing_subword_prefix+r),this.tokens_to_ids.has(r)){n=r;break}--t}if(null===n){r=!0;break}i.push(n),s=t}r?t.push(this.unk_token):t.push(...i)}return t}}class T extends M{constructor(e,t){super(e);const n=e.vocab.length;this.vocab=new Array(n),this.scores=new Array(n);for(let t=0;t<n;++t)[this.vocab[t],this.scores[t]]=e.vocab[t];this.unk_token_id=e.unk_id,this.unk_token=this.vocab[e.unk_id],this.tokens_to_ids=new Map(this.vocab.map((e,t)=>[e,t])),this.bos_token=" ",this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=t.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.unk_token=this.vocab[this.unk_token_id],this.minScore=(0,a.min)(this.scores)[0],this.unk_score=this.minScore-10,this.scores[this.unk_token_id]=this.unk_score,this.trie=new l.CharTrie,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes(e){const t=e.chars;let n=0;for(;n<t.length;){let r=!1;const i=[],a=t.slice(n).join(""),o=this.trie.commonPrefixSearch(a);for(const t of o){i.push(t);const a=this.tokens_to_ids.get(t),o=this.scores[a],l=(0,s.len)(t);e.insert(n,l,o,a),r||1!==l||(r=!0)}r||e.insert(n,1,this.unk_score,this.unk_token_id),n+=1}}tokenize(e){const t=new l.TokenLattice(e,this.bos_token_id,this.eos_token_id);return this.populateNodes(t),t.tokens()}encode(e){const t=[];for(const n of e){const e=this.tokenize(n);t.push(...e)}return t}}const $=(()=>{const e=[...Array.from({length:"~".charCodeAt(0)-"!".charCodeAt(0)+1},(e,t)=>t+"!".charCodeAt(0)),...Array.from({length:"¬".charCodeAt(0)-"¡".charCodeAt(0)+1},(e,t)=>t+"¡".charCodeAt(0)),...Array.from({length:"ÿ".charCodeAt(0)-"®".charCodeAt(0)+1},(e,t)=>t+"®".charCodeAt(0))],t=e.slice();let n=0;for(let r=0;r<256;++r)e.includes(r)||(e.push(r),t.push(256+n),n+=1);const r=t.map(e=>String.fromCharCode(e));return Object.fromEntries(e.map((e,t)=>[e,r[t]]))})(),S=(0,s.reverseDictionary)($);class C extends M{constructor(e){super(e),this.tokens_to_ids=h(e.vocab),this.unk_token_id=this.tokens_to_ids.get(e.unk_token),this.unk_token=e.unk_token,this.vocab=new Array(this.tokens_to_ids.size);for(const[e,t]of this.tokens_to_ids)this.vocab[t]=e;const t=Array.isArray(e.merges[0]);this.merges=t?e.merges:e.merges.map(e=>e.split(" ",2)),this.bpe_ranks=new Map(this.merges.map((e,t)=>[JSON.stringify(e),t])),this.end_of_word_suffix=e.end_of_word_suffix,this.continuing_subword_suffix=e.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.ignore_merges=this.config.ignore_merges??!1,this.max_length_to_cache=256,this.cache_capacity=1e4,this.cache=new l.LRUCache(this.cache_capacity)}clear_cache(){this.cache.clear()}bpe(e){if(0===e.length)return[];const t=this.cache.get(e);if(void 0!==t)return t;const n=Array.from(e);this.end_of_word_suffix&&(n[n.length-1]+=this.end_of_word_suffix);let r=[];if(n.length>1){const e=new l.PriorityQueue((e,t)=>e.score<t.score);let t={token:n[0],bias:0,prev:null,next:null},s=t;for(let t=1;t<n.length;++t){const r={bias:t/n.length,token:n[t],prev:s,next:null};s.next=r,this._add_node(e,s),s=r}for(;!e.isEmpty();){const n=e.pop();if(n.deleted||!n.next||n.next.deleted)continue;if(n.deleted=!0,n.next.deleted=!0,n.prev){const e={...n.prev};n.prev.deleted=!0,n.prev=e,e.prev?e.prev.next=e:t=e}const r={token:n.token+n.next.token,bias:n.bias,prev:n.prev,next:n.next.next};r.prev?(r.prev.next=r,this._add_node(e,r.prev)):t=r,r.next&&(r.next.prev=r,this._add_node(e,r))}for(let e=t;null!==e;e=e.next)r.push(e.token)}else r=n;if(this.continuing_subword_suffix)for(let e=0;e<r.length-1;++e)r[e]+=this.continuing_subword_suffix;return e.length<this.max_length_to_cache&&this.cache.put(e,r),r}_add_node(e,t){const n=this.bpe_ranks.get(JSON.stringify([t.token,t.next.token]));void 0!==n&&(t.score=n+t.bias,e.push(t))}encode(e){const t=[];for(const n of e){if(this.ignore_merges&&this.tokens_to_ids.has(n)){t.push(n);continue}const e=this.bpe(n);for(const n of e)if(this.tokens_to_ids.has(n))t.push(n);else if(this.byte_fallback){const e=Array.from(this.text_encoder.encode(n)).map(e=>`<0x${e.toString(16).toUpperCase().padStart(2,"0")}>`);e.every(e=>this.tokens_to_ids.has(e))?t.push(...e):t.push(this.unk_token)}else t.push(this.unk_token)}return t}}class E extends M{constructor(e,t){super(e),this.tokens_to_ids=h(t.target_lang?e.vocab[t.target_lang]:e.vocab),this.bos_token=t.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=t.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=t.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=t.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=new Array(this.tokens_to_ids.size);for(const[e,t]of this.tokens_to_ids)this.vocab[t]=e}encode(e){return e}}class P extends r.Callable{constructor(e){super(),this.config=e}static fromConfig(e){if(null===e)return null;switch(e.type){case"BertNormalizer":return new V(e);case"Precompiled":return new me(e);case"Sequence":return new R(e);case"Replace":return new A(e);case"NFC":return new F(e);case"NFD":return new z(e);case"NFKC":return new O(e);case"NFKD":return new L(e);case"Strip":return new B(e);case"StripAccents":return new D(e);case"Lowercase":return new N(e);case"Prepend":return new j(e);default:throw new Error(`Unknown Normalizer type: ${e.type}`)}}normalize(e){throw Error("normalize should be implemented in subclass.")}_call(e){return this.normalize(e)}}class A extends P{normalize(e){const t=p(this.config.pattern);return null===t?e:e.replaceAll(t,this.config.content)}}class I extends P{form=void 0;normalize(e){return e.normalize(this.form)}}class F extends I{form="NFC"}class z extends I{form="NFD"}class O extends I{form="NFKC"}class L extends I{form="NFKD"}class B extends P{normalize(e){return this.config.strip_left&&this.config.strip_right?e=e.trim():(this.config.strip_left&&(e=e.trimStart()),this.config.strip_right&&(e=e.trimEnd())),e}}class D extends P{normalize(e){return _(e)}}class N extends P{normalize(e){return e.toLowerCase()}}class j extends P{normalize(e){return this.config.prepend+e}}class R extends P{constructor(e){super(e),this.normalizers=e.normalizers.map(e=>P.fromConfig(e))}normalize(e){return this.normalizers.reduce((e,t)=>t.normalize(e),e)}}class V extends P{_tokenize_chinese_chars(e){const t=[];for(let n=0;n<e.length;++n){const r=e[n];g(r.charCodeAt(0))?(t.push(" "),t.push(r),t.push(" ")):t.push(r)}return t.join("")}stripAccents(e){return e.normalize("NFD").replace(/\p{Mn}/gu,"")}_is_control(e){switch(e){case"\t":case"\n":case"\r":return!1;default:return/^\p{Cc}|\p{Cf}|\p{Co}|\p{Cs}$/u.test(e)}}_clean_text(e){const t=[];for(const n of e){const e=n.charCodeAt(0);0===e||65533===e||this._is_control(n)||(/^\s$/.test(n)?t.push(" "):t.push(n))}return t.join("")}normalize(e){return this.config.clean_text&&(e=this._clean_text(e)),this.config.handle_chinese_chars&&(e=this._tokenize_chinese_chars(e)),this.config.lowercase?(e=e.toLowerCase(),!1!==this.config.strip_accents&&(e=this.stripAccents(e))):this.config.strip_accents&&(e=this.stripAccents(e)),e}}class G extends r.Callable{static fromConfig(e){if(null===e)return null;switch(e.type){case"BertPreTokenizer":return new U(e);case"Sequence":return new fe(e);case"Whitespace":return new _e(e);case"WhitespaceSplit":return new ge(e);case"Metaspace":return new pe(e);case"ByteLevel":return new q(e);case"Split":return new W(e);case"Punctuation":return new H(e);case"Digits":return new K(e);case"Replace":return new we(e);default:throw new Error(`Unknown PreTokenizer type: ${e.type}`)}}pre_tokenize_text(e,t){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize(e,t){return(Array.isArray(e)?e.map(e=>this.pre_tokenize_text(e,t)):this.pre_tokenize_text(e,t)).flat()}_call(e,t){return this.pre_tokenize(e,t)}}class U extends G{constructor(e){super(),this.pattern=new RegExp(`[^\\s${w}]+|[${w}]`,"gu")}pre_tokenize_text(e,t){return e.trim().match(this.pattern)||[]}}class q extends G{constructor(e){super(),this.config=e,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=/'s|'t|'re|'ve|'m|'ll|'d| ?\p{L}+| ?\p{N}+| ?[^\s\p{L}\p{N}]+|\s+(?!\S)|\s+/gu,this.byte_encoder=$,this.text_encoder=new TextEncoder}pre_tokenize_text(e,t){return this.add_prefix_space&&!e.startsWith(" ")&&(e=" "+e),(this.use_regex?e.match(this.pattern)||[]:[e]).map(e=>Array.from(this.text_encoder.encode(e),e=>this.byte_encoder[e]).join(""))}}class W extends G{constructor(e){super(),this.config=e,this.pattern=p(this.config.pattern,this.config.invert)}pre_tokenize_text(e,t){return null===this.pattern?[]:this.config.invert?e.match(this.pattern)||[]:"removed"===this.config.behavior?.toLowerCase()?e.split(this.pattern).filter(e=>e):function(e,t){const n=[];let r=0;for(const s of e.matchAll(t)){const t=s[0];r<s.index&&n.push(e.slice(r,s.index)),t.length>0&&n.push(t),r=s.index+t.length}return r<e.length&&n.push(e.slice(r)),n}(e,this.pattern)}}class H extends G{constructor(e){super(),this.config=e,this.pattern=new RegExp(`[^${w}]+|[${w}]+`,"gu")}pre_tokenize_text(e,t){return e.match(this.pattern)||[]}}class K extends G{constructor(e){super(),this.config=e;const t="[^\\d]+|\\d"+(this.config.individual_digits?"":"+");this.pattern=new RegExp(t,"gu")}pre_tokenize_text(e,t){return e.match(this.pattern)||[]}}class Q extends r.Callable{constructor(e){super(),this.config=e}static fromConfig(e){if(null===e)return null;switch(e.type){case"TemplateProcessing":return new Y(e);case"ByteLevel":return new Z(e);case"RobertaProcessing":return new J(e);case"BertProcessing":return new X(e);case"Sequence":return new ee(e);default:throw new Error(`Unknown PostProcessor type: ${e.type}`)}}post_process(e,...t){throw Error("post_process should be implemented in subclass.")}_call(e,...t){return this.post_process(e,...t)}}class X extends Q{constructor(e){super(e),this.cls=e.cls[0],this.sep=e.sep[0]}post_process(e,t=null,{add_special_tokens:n=!0}={}){n&&(e=(0,s.mergeArrays)([this.cls],e,[this.sep]));let r=new Array(e.length).fill(0);if(null!==t){const i=n&&this instanceof J?[this.sep]:[],a=n?[this.sep]:[];e=(0,s.mergeArrays)(e,i,t,a),r=(0,s.mergeArrays)(r,new Array(t.length+i.length+a.length).fill(1))}return{tokens:e,token_type_ids:r}}}class J extends X{}class Y extends Q{constructor(e){super(e),this.single=e.single,this.pair=e.pair}post_process(e,t=null,{add_special_tokens:n=!0}={}){const r=null===t?this.single:this.pair;let i=[],a=[];for(const o of r)"SpecialToken"in o?n&&(i.push(o.SpecialToken.id),a.push(o.SpecialToken.type_id)):"Sequence"in o&&("A"===o.Sequence.id?(i=(0,s.mergeArrays)(i,e),a=(0,s.mergeArrays)(a,new Array(e.length).fill(o.Sequence.type_id))):"B"===o.Sequence.id&&(i=(0,s.mergeArrays)(i,t),a=(0,s.mergeArrays)(a,new Array(t.length).fill(o.Sequence.type_id))));return{tokens:i,token_type_ids:a}}}class Z extends Q{post_process(e,t=null){return t&&(e=(0,s.mergeArrays)(e,t)),{tokens:e}}}class ee extends Q{constructor(e){super(e),this.processors=e.processors.map(e=>Q.fromConfig(e))}post_process(e,t=null,n={}){let r;for(const s of this.processors)if(s instanceof Z)e=s.post_process(e).tokens,t&&(t=s.post_process(t).tokens);else{const i=s.post_process(e,t,n);e=i.tokens,r=i.token_type_ids}return{tokens:e,token_type_ids:r}}}class te extends r.Callable{constructor(e){super(),this.config=e,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=e.trim_offsets}static fromConfig(e){if(null===e)return null;switch(e.type){case"WordPiece":return new ae(e);case"Metaspace":return new he(e);case"ByteLevel":return new oe(e);case"Replace":return new ne(e);case"ByteFallback":return new re(e);case"Fuse":return new se(e);case"Strip":return new ie(e);case"Sequence":return new ue(e);case"CTC":return new le(e);case"BPEDecoder":return new ce(e);default:throw new Error(`Unknown Decoder type: ${e.type}`)}}_call(e){return this.decode(e)}decode(e){return this.decode_chain(e).join("")}decode_chain(e){throw Error("`decode_chain` should be implemented in subclass.")}}class ne extends te{decode_chain(e){const t=p(this.config.pattern);return null===t?e:e.map(e=>e.replaceAll(t,this.config.content))}}class re extends te{constructor(e){super(e),this.text_decoder=new TextDecoder}decode_chain(e){const t=[];let n=[];for(const r of e){let e=null;if(6===r.length&&r.startsWith("<0x")&&r.endsWith(">")){const t=parseInt(r.slice(3,5),16);isNaN(t)||(e=t)}if(null!==e)n.push(e);else{if(n.length>0){const e=this.text_decoder.decode(Uint8Array.from(n));t.push(e),n=[]}t.push(r)}}if(n.length>0){const e=this.text_decoder.decode(Uint8Array.from(n));t.push(e),n=[]}return t}}class se extends te{decode_chain(e){return[e.join("")]}}class ie extends te{constructor(e){super(e),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain(e){return e.map(e=>{let t=0;for(let n=0;n<this.start&&e[n]===this.content;++n)t=n+1;let n=e.length;for(let t=0;t<this.stop;++t){const r=e.length-t-1;if(e[r]!==this.content)break;n=r}return e.slice(t,n)})}}class ae extends te{constructor(e){super(e),this.cleanup=e.cleanup}decode_chain(e){return e.map((e,t)=>(0!==t&&(e=e.startsWith(this.config.prefix)?e.replace(this.config.prefix,""):" "+e),this.cleanup&&(e=f(e)),e))}}class oe extends te{constructor(e){super(e),this.byte_decoder=S,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string(e){const t=e.join(""),n=new Uint8Array([...t].map(e=>this.byte_decoder[e]));return this.text_decoder.decode(n)}decode_chain(e){const t=[];let n=[];for(const r of e)void 0!==this.added_tokens.find(e=>e.content===r)?(n.length>0&&(t.push(this.convert_tokens_to_string(n)),n=[]),t.push(r)):n.push(r);return n.length>0&&t.push(this.convert_tokens_to_string(n)),t}}class le extends te{constructor(e){super(e),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string(e){if(0===e.length)return"";const t=[e[0]];for(let n=1;n<e.length;++n)e[n]!==t.at(-1)&&t.push(e[n]);let n=t.filter(e=>e!==this.pad_token).join("");return this.cleanup&&(n=f(n).replaceAll(this.word_delimiter_token," ").trim()),n}decode_chain(e){return[this.convert_tokens_to_string(e)]}}class ue extends te{constructor(e){super(e),this.decoders=e.decoders.map(e=>te.fromConfig(e))}decode_chain(e){return this.decoders.reduce((e,t)=>t.decode_chain(e),e)}}class ce extends te{constructor(e){super(e),this.suffix=this.config.suffix}decode_chain(e){return e.map((t,n)=>t.replaceAll(this.suffix,n===e.length-1?"":" "))}}class de extends te{decode_chain(e){let t="";for(let n=1;n<e.length;n+=2)t+=e[n];return[t]}}class pe extends G{constructor(e){super(),this.addPrefixSpace=e.add_prefix_space,this.replacement=e.replacement,this.strRep=e.str_rep||this.replacement,this.prepend_scheme=e.prepend_scheme??"always"}pre_tokenize_text(e,{section_index:t}={}){let n=e.replaceAll(" ",this.strRep);return this.addPrefixSpace&&!n.startsWith(this.replacement)&&("always"===this.prepend_scheme||"first"===this.prepend_scheme&&0===t)&&(n=this.strRep+n),[n]}}class he extends te{constructor(e){super(e),this.addPrefixSpace=e.add_prefix_space,this.replacement=e.replacement}decode_chain(e){const t=[];for(let n=0;n<e.length;++n){let r=e[n].replaceAll(this.replacement," ");this.addPrefixSpace&&0==n&&r.startsWith(" ")&&(r=r.substring(1)),t.push(r)}return t}}class me extends P{constructor(e){super(e),this.charsmap=e.precompiled_charsmap}normalize(e){if((e=(e=e.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,"")).replace(/[\u0009\u000A\u000C\u000D\u00A0\u1680\u2000-\u200F\u2028\u2029\u202F\u205F\u2581\u3000\uFEFF\uFFFD]/gm," ")).includes("～")){const t=e.split("～");e=t.map(e=>e.normalize("NFKC")).join("～")}else e=e.normalize("NFKC");return e}}class fe extends G{constructor(e){super(),this.tokenizers=e.pretokenizers.map(e=>G.fromConfig(e))}pre_tokenize_text(e,t){return this.tokenizers.reduce((e,n)=>n.pre_tokenize(e,t),[e])}}class _e extends G{constructor(e){super()}pre_tokenize_text(e,t){return e.match(/\w+|[^\w\s]+/g)||[]}}class ge extends G{constructor(e){super()}pre_tokenize_text(e,t){return function(e){return e.match(/\S+/g)||[]}(e)}}class we extends G{constructor(e){super(),this.config=e,this.pattern=p(this.config.pattern),this.content=this.config.content}pre_tokenize_text(e,t){return null===this.pattern?[e]:[e.replaceAll(this.pattern,this.config.content)]}}const ye=["bos_token","eos_token","unk_token","sep_token","pad_token","cls_token","mask_token"];function be(e,t,n,r){for(const i of Object.keys(e)){const a=t-e[i].length,o=n(i),l=new Array(a).fill(o);e[i]="right"===r?(0,s.mergeArrays)(e[i],l):(0,s.mergeArrays)(l,e[i])}}function xe(e,t){for(const n of Object.keys(e))e[n].length=t}class ve extends r.Callable{return_token_type_ids=!1;padding_side="right";constructor(e,t){super(),this.config=t,this.normalizer=P.fromConfig(e.normalizer),this.pre_tokenizer=G.fromConfig(e.pre_tokenizer),this.model=M.fromConfig(e.model,t),this.post_processor=Q.fromConfig(e.post_processor),this.decoder=te.fromConfig(e.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[];for(const t of e.added_tokens){const e=new v(t);this.added_tokens.push(e),this.model.tokens_to_ids.set(e.content,e.id),this.model.vocab[e.id]=e.content,e.special&&(this.special_tokens.push(e.content),this.all_special_ids.push(e.id))}if(this.additional_special_tokens=t.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_splitter=new l.DictionarySplitter(this.added_tokens.map(e=>e.content)),this.added_tokens_map=new Map(this.added_tokens.map(e=>[e.content,e])),this.mask_token=this.getToken("mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken("pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken("sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken("unk_token"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.bos_token=this.getToken("bos_token"),this.bos_token_id=this.model.tokens_to_ids.get(this.bos_token),this.eos_token=this.getToken("eos_token"),this.eos_token_id=this.model.tokens_to_ids.get(this.eos_token),this.model_max_length=t.model_max_length,this.remove_space=t.remove_space,this.clean_up_tokenization_spaces=t.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=t.do_lowercase_and_remove_accent??!1,t.padding_side&&(this.padding_side=t.padding_side),this.add_bos_token=t.add_bos_token,this.add_eos_token=t.add_eos_token,this.legacy=!1,this.chat_template=t.chat_template??null,Array.isArray(this.chat_template)){const e=Object.create(null);for(const{name:t,template:n}of this.chat_template){if("string"!=typeof t||"string"!=typeof n)throw new Error('Chat template must be a list of objects with "name" and "template" properties');e[t]=n}this.chat_template=e}this._compiled_template_cache=new Map}getToken(...e){for(const t of e){const e=this.config[t];if(e){if("object"==typeof e){if("AddedToken"===e.__type)return e.content;throw Error(`Unknown token: ${e}`)}return e}}return null}static async from_pretrained(e,{progress_callback:t=null,config:n=null,cache_dir:r=null,local_files_only:s=!1,revision:i="main",legacy:a=null}={}){return new this(...await d(e,{progress_callback:t,config:n,cache_dir:r,local_files_only:s,revision:i,legacy:a}))}_call(e,{text_pair:t=null,add_special_tokens:n=!0,padding:r=!1,truncation:s=null,max_length:i=null,return_tensor:l=!0,return_token_type_ids:u=null}={}){const c=Array.isArray(e);let d;if(c){if(0===e.length)throw Error("text array must be non-empty");if(null!==t){if(!Array.isArray(t))throw Error("text_pair must also be an array");if(e.length!==t.length)throw Error("text and text_pair must have the same length");d=e.map((e,r)=>this._encode_plus(e,{text_pair:t[r],add_special_tokens:n,return_token_type_ids:u}))}else d=e.map(e=>this._encode_plus(e,{add_special_tokens:n,return_token_type_ids:u}))}else{if(null==e)throw Error("text may not be null or undefined");if(Array.isArray(t))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");d=[this._encode_plus(e,{text_pair:t,add_special_tokens:n,return_token_type_ids:u})]}if(null===i?i=this.model_max_length:null===s&&(!0===r?(console.warn("`max_length` is ignored when `padding: true` and there is no truncation strategy. To pad to max length, use `padding: 'max_length'`."),i=this.model_max_length):!1===r&&(console.warn("Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation: true` to explicitly truncate examples to max length."),s=!0)),!0===r&&(i=Math.min((0,a.max)(d.map(e=>e.input_ids.length))[0],i??1/0)),i=Math.min(i,this.model_max_length??1/0),r||s)for(let e=0;e<d.length;++e)d[e].input_ids.length!==i&&(d[e].input_ids.length>i?s&&xe(d[e],i):r&&be(d[e],i,e=>"input_ids"===e?this.pad_token_id:0,this.padding_side));const p={};if(l){if((!r||!s)&&d.some(e=>{for(const t of Object.keys(e))if(e[t].length!==d[0][t]?.length)return!0;return!1}))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");const e=[d.length,d[0].input_ids.length];for(const t of Object.keys(d[0]))p[t]=new o.Tensor("int64",BigInt64Array.from(d.flatMap(e=>e[t]).map(BigInt)),e)}else{for(const e of Object.keys(d[0]))p[e]=d.map(t=>t[e]);if(!c)for(const e of Object.keys(p))p[e]=p[e][0]}return p}_encode_text(e){if(null===e)return null;const t=this.added_tokens_splitter.split(e);for(let e=0;e<t.length;++e){const n=this.added_tokens_map.get(t[e]);n&&(n.lstrip&&e>0&&(t[e-1]=t[e-1].trimEnd()),n.rstrip&&e<t.length-1&&(t[e+1]=t[e+1].trimStart()))}const n=t.flatMap((e,t)=>{if(0===e.length)return[];if(this.added_tokens_map.has(e))return[e];if(!0===this.remove_space&&(e=e.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(e=function(e){return _(e.toLowerCase())}(e)),null!==this.normalizer&&(e=this.normalizer(e)),0===e.length)return[];const n=null!==this.pre_tokenizer?this.pre_tokenizer(e,{section_index:t}):[e];return this.model(n)});return n}_encode_plus(e,{text_pair:t=null,add_special_tokens:n=!0,return_token_type_ids:r=null}={}){const{tokens:s,token_type_ids:i}=this._tokenize_helper(e,{pair:t,add_special_tokens:n}),a=this.model.convert_tokens_to_ids(s),o={input_ids:a,attention_mask:new Array(a.length).fill(1)};return(r??this.return_token_type_ids)&&i&&(o.token_type_ids=i),o}_tokenize_helper(e,{pair:t=null,add_special_tokens:n=!1}={}){const r=this._encode_text(e),i=this._encode_text(t);return this.post_processor?this.post_processor(r,i,{add_special_tokens:n}):{tokens:(0,s.mergeArrays)(r??[],i??[])}}tokenize(e,{pair:t=null,add_special_tokens:n=!1}={}){return this._tokenize_helper(e,{pair:t,add_special_tokens:n}).tokens}encode(e,{text_pair:t=null,add_special_tokens:n=!0,return_token_type_ids:r=null}={}){return this._encode_plus(e,{text_pair:t,add_special_tokens:n,return_token_type_ids:r}).input_ids}batch_decode(e,t={}){return e instanceof o.Tensor&&(e=e.tolist()),e.map(e=>this.decode(e,t))}decode(e,t={}){if(e instanceof o.Tensor&&(e=m(e)),!Array.isArray(e)||0===e.length||!(0,s.isIntegralNumber)(e[0]))throw Error("token_ids must be a non-empty array of integers.");return this.decode_single(e,t)}decode_single(e,{skip_special_tokens:t=!1,clean_up_tokenization_spaces:n=null}){let r=this.model.convert_ids_to_tokens(e);t&&(r=r.filter(e=>!this.special_tokens.includes(e)));let s=this.decoder?this.decoder(r):r.join(" ");return this.decoder&&this.decoder.end_of_word_suffix&&(s=s.replaceAll(this.decoder.end_of_word_suffix," "),t&&(s=s.trim())),(n??this.clean_up_tokenization_spaces)&&(s=f(s)),s}get_chat_template({chat_template:e=null,tools:t=null}={}){if(this.chat_template&&"object"==typeof this.chat_template){const n=this.chat_template;if(null!==e&&Object.hasOwn(n,e))e=n[e];else if(null===e)if(null!==t&&"tool_use"in n)e=n.tool_use;else{if(!("default"in n))throw Error(`This model has multiple chat templates with no default specified! Please either pass a chat template or the name of the template you wish to use to the 'chat_template' argument. Available template names are ${Object.keys(n).sort()}.`);e=n.default}}else if(null===e){if(!this.chat_template)throw Error("Cannot use apply_chat_template() because tokenizer.chat_template is not set and no template argument was passed! For information about writing templates and setting the tokenizer.chat_template attribute, please see the documentation at https://huggingface.co/docs/transformers/main/en/chat_templating");e=this.chat_template}return e}apply_chat_template(e,{tools:t=null,documents:n=null,chat_template:r=null,add_generation_prompt:s=!1,tokenize:i=!0,padding:a=!1,truncation:o=!1,max_length:l=null,return_tensor:c=!0,return_dict:d=!1,tokenizer_kwargs:p={},...h}={}){if("string"!=typeof(r=this.get_chat_template({chat_template:r,tools:t})))throw Error("chat_template must be a string, but got "+typeof r);let m=this._compiled_template_cache.get(r);void 0===m&&(m=new u.Template(r),this._compiled_template_cache.set(r,m));const f=Object.create(null);for(const e of ye){const t=this.getToken(e);t&&(f[e]=t)}const _=m.render({messages:e,add_generation_prompt:s,tools:t,documents:n,...f,...h});if(i){const e=this._call(_,{add_special_tokens:!1,padding:a,truncation:o,max_length:l,return_tensor:c,...p});return d?e:e.input_ids}return _}}class Me extends ve{return_token_type_ids=!0}class ke extends ve{return_token_type_ids=!0}class Te extends ve{return_token_type_ids=!0}class $e extends ve{return_token_type_ids=!0}class Se extends ve{return_token_type_ids=!0}class Ce extends ve{return_token_type_ids=!0}class Ee extends ve{return_token_type_ids=!0}class Pe extends ve{return_token_type_ids=!0}class Ae extends ve{return_token_type_ids=!0}class Ie extends ve{}class Fe extends ve{}class ze extends ve{return_token_type_ids=!0;constructor(e,t){super(e,t),console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}}class Oe extends ve{return_token_type_ids=!0}class Le extends ve{}class Be extends ve{}class De extends ve{}class Ne extends ve{constructor(e,t){super(e,t),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter(e=>this.languageRegex.test(e)),this.lang_to_token=e=>e}_build_translation_inputs(e,t,n){return et(this,e,t,n)}}class je extends Ne{}class Re extends ve{}class Ve extends ve{}const Ge="▁";class Ue extends ve{padding_side="left";constructor(e,t){super(e,t),this.legacy=t.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new pe({replacement:Ge,add_prefix_space:!0,prepend_scheme:"first"}))}_encode_text(e){if(null===e)return null;if(this.legacy||0===e.length)return super._encode_text(e);let t=super._encode_text(Ge+e.replaceAll(Ge," "));return t.length>1&&t[0]===Ge&&this.special_tokens.includes(t[1])&&(t=t.slice(1)),t}}class qe extends ve{}class We extends ve{}class He extends ve{}class Ke extends ve{}class Qe extends ve{}class Xe extends ve{}class Je extends ve{}class Ye extends ve{}class Ze extends ve{}function et(e,t,n,r){if(!("language_codes"in e)||!Array.isArray(e.language_codes))throw new Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in e&&e.languageRegex instanceof RegExp))throw new Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in e)||"function"!=typeof e.lang_to_token)throw new Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");const s=r.src_lang,i=r.tgt_lang;if(!e.language_codes.includes(i))throw new Error(`Target language code "${i}" is not valid. Must be one of: {${e.language_codes.join(", ")}}`);if(void 0!==s){if(!e.language_codes.includes(s))throw new Error(`Source language code "${s}" is not valid. Must be one of: {${e.language_codes.join(", ")}}`);for(const t of e.post_processor.config.single)if("SpecialToken"in t&&e.languageRegex.test(t.SpecialToken.id)){t.SpecialToken.id=e.lang_to_token(s);break}}return r.forced_bos_token_id=e.model.convert_tokens_to_ids([e.lang_to_token(i)])[0],e._call(t,n)}class tt extends ve{constructor(e,t){super(e,t),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter(e=>this.languageRegex.test(e)),this.lang_to_token=e=>e}_build_translation_inputs(e,t,n){return et(this,e,t,n)}}class nt extends ve{constructor(e,t){super(e,t),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter(e=>this.languageRegex.test(e)).map(e=>e.slice(2,-2)),this.lang_to_token=e=>`__${e}__`}_build_translation_inputs(e,t,n){return et(this,e,t,n)}}class rt extends ve{get timestamp_begin(){return this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1}_decode_asr(e,{return_timestamps:t=!1,return_language:n=!1,time_precision:r=null,force_full_sequences:s=!0}={}){if(null===r)throw Error("Must specify time_precision");let i=null;const o="word"===t;function l(){return{language:i,timestamp:[null,null],text:""}}const u=[];let d=l(),p=0;const h=this.timestamp_begin,m=h+1500;let f=[],_=[],g=!1,w=null;const b=new Set(this.all_special_ids);for(const n of e){const e=n.tokens,s=o?n.token_timestamps:null;let x=null,v=h;if("stride"in n){const[t,s,i]=n.stride;if(p-=s,w=t-i,s&&(v=s/r+h),i)for(let t=e.length-1;t>=0;--t){const n=Number(e[t]);if(n>=h){if(null!==x&&(n-h)*r<w)break;x=n}}}let M=[],k=[];for(let n=0;n<e.length;++n){const w=Number(e[n]);if(b.has(w)){const e=this.decode([w]),n=c.WHISPER_LANGUAGE_MAPPING.get(e.slice(2,-2));if(void 0!==n){if(null!==i&&n!==i&&!t){f.push(M);const e=this.findLongestCommonSequence(f)[0],t=this.decode(e);d.text=t,u.push(d),f=[],M=[],d=l()}i=d.language=n}}else if(w>=h&&w<=m){const e=(w-h)*r+p,t=(0,a.round)(e,2);if(null!==x&&w>=x)g=!0;else if(g||f.length>0&&w<v)g=!1;else if(null===d.timestamp[0])d.timestamp[0]=t;else if(t===d.timestamp[0]);else{d.timestamp[1]=t,f.push(M),o&&_.push(k);const[e,n]=this.findLongestCommonSequence(f,_),r=this.decode(e);d.text=r,o&&(d.words=this.collateWordTimestamps(e,n,i)),u.push(d),f=[],M=[],_=[],k=[],d=l()}}else if(M.push(w),o){let e,t=(0,a.round)(s[n]+p,2);if(n+1<s.length){e=(0,a.round)(s[n+1]+p,2);const i=this.decode([w]);y.test(i)&&(e=(0,a.round)(Math.min(t+r,e),2))}else e=null;k.push([t,e])}}if("stride"in n){const[e,t,r]=n.stride;p+=e-r}M.length>0?(f.push(M),o&&_.push(k)):f.every(e=>0===e.length)&&(d=l(),f=[],M=[],_=[],k=[])}if(f.length>0){if(s&&t)throw new Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");const[e,n]=this.findLongestCommonSequence(f,_),r=this.decode(e);d.text=r,o&&(d.words=this.collateWordTimestamps(e,n,i)),u.push(d)}let x=Object.create(null);const v=u.map(e=>e.text).join("");if(t||n){for(let e=0;e<u.length;++e){const r=u[e];t||delete r.timestamp,n||delete r.language}if(o){const e=[];for(const t of u)for(const n of t.words)e.push(n);x={chunks:e}}else x={chunks:u}}return[v,x]}findLongestCommonSequence(e,t=null){let n=e[0],r=n.length,s=[];const i=Array.isArray(t)&&t.length>0;let a=i?[]:null,o=i?t[0]:null;for(let l=1;l<e.length;++l){const u=e[l];let c=0,d=[r,r,0,0];const p=u.length;for(let e=1;e<r+p;++e){const s=Math.max(0,r-e),a=Math.min(r,r+p-e),h=n.slice(s,a),m=Math.max(0,e-r),f=Math.min(p,e),_=u.slice(m,f);if(h.length!==_.length)throw new Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");let g;g=i?h.filter((e,n)=>e===_[n]&&o[s+n]<=t[l][m+n]).length:h.filter((e,t)=>e===_[t]).length;const w=g/e+e/1e4;g>1&&w>c&&(c=w,d=[s,a,m,f])}const[h,m,f,_]=d,g=Math.floor((m+h)/2),w=Math.floor((_+f)/2);s.push(...n.slice(0,g)),n=u.slice(w),r=n.length,i&&(a.push(...o.slice(0,g)),o=t[l].slice(w))}return s.push(...n),i?(a.push(...o),[s,a]):[s,[]]}collateWordTimestamps(e,t,n){const[r,s,i]=this.combineTokensIntoWords(e,n),a=[];for(let e=0;e<r.length;++e){const n=i[e];a.push({text:r[e],timestamp:[t[n.at(0)][0],t[n.at(-1)][1]]})}return a}combineTokensIntoWords(e,t,n="\"'“¡¿([{-",r="\"'.。,，!！?？:：”)]}、"){let s,i,a;return["chinese","japanese","thai","lao","myanmar"].includes(t=t??"english")?[s,i,a]=this.splitTokensOnUnicode(e):[s,i,a]=this.splitTokensOnSpaces(e),this.mergePunctuations(s,i,a,n,r)}decode(e,t){let n;return t?.decode_with_timestamps?(e instanceof o.Tensor&&(e=m(e)),n=this.decodeWithTimestamps(e,t)):n=super.decode(e,t),n}decodeWithTimestamps(e,t){const n=t?.time_precision??.02,r=Array.from(this.all_special_ids).at(-1)+1;let s=[[]];for(let t of e)if(t=Number(t),t>=r){const e=((t-r)*n).toFixed(2);s.push(`<|${e}|>`),s.push([])}else s[s.length-1].push(t);return s=s.map(e=>"string"==typeof e?e:super.decode(e,t)),s.join("")}splitTokensOnUnicode(e){const t=this.decode(e,{decode_with_timestamps:!0}),n=[],r=[],s=[];let i=[],a=[],o=0;for(let l=0;l<e.length;++l){const u=e[l];i.push(u),a.push(l);const c=this.decode(i,{decode_with_timestamps:!0});c.includes("�")&&"�"!==t[o+c.indexOf("�")]||(n.push(c),r.push(i),s.push(a),i=[],a=[],o+=c.length)}return[n,r,s]}splitTokensOnSpaces(e){const[t,n,r]=this.splitTokensOnUnicode(e),s=[],i=[],a=[],o=new RegExp(`^[${w}]$`,"gu");for(let e=0;e<t.length;++e){const l=t[e],u=n[e],c=r[e],d=u[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),p=l.startsWith(" "),h=l.trim(),m=o.test(h);if(d||p||m||0===s.length)s.push(l),i.push(u),a.push(c);else{const e=s.length-1;s[e]+=l,i[e].push(...u),a[e].push(...c)}}return[s,i,a]}mergePunctuations(e,t,n,r,i){const a=structuredClone(e),o=structuredClone(t),l=structuredClone(n);let u=a.length-2,c=a.length-1;for(;u>=0;)a[u].startsWith(" ")&&r.includes(a[u].trim())?(a[c]=a[u]+a[c],o[c]=(0,s.mergeArrays)(o[u],o[c]),l[c]=(0,s.mergeArrays)(l[u],l[c]),a[u]="",o[u]=[],l[u]=[]):c=u,--u;for(u=0,c=1;c<a.length;)!a[u].endsWith(" ")&&i.includes(a[c])?(a[u]+=a[c],o[u]=(0,s.mergeArrays)(o[u],o[c]),l[u]=(0,s.mergeArrays)(l[u],l[c]),a[c]="",o[c]=[],l[c]=[]):u=c,++c;return[a.filter(e=>e),o.filter(e=>e.length>0),l.filter(e=>e.length>0)]}}class st extends ve{}class it extends ve{}class at extends ve{}class ot extends ve{constructor(e,t){super(e,t),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter(e=>this.languageRegex.test(e)),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text(e){if(null===e)return null;const[t,...n]=e.trim().split(this.languageRegex);if(0===n.length)return super._encode_text(t);if(2===n.length){const[e,t]=n;return this.supported_language_codes.includes(e)||console.warn(`Unsupported language code "${e}" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),(0,s.mergeArrays)([e],super._encode_text(t))}}}class lt extends ve{}class ut extends ve{}class ct extends ve{}class dt extends ve{}class pt extends ve{}class ht extends ve{constructor(e,t){super(e,t),this.decoder=new de({})}}class mt extends ve{}class ft extends ve{}class _t extends ve{}class gt{static TOKENIZER_CLASS_MAPPING={T5Tokenizer:Le,DistilBertTokenizer:Ie,CamembertTokenizer:Fe,DebertaTokenizer:Se,DebertaV2Tokenizer:Ce,BertTokenizer:Me,HerbertTokenizer:Ee,ConvBertTokenizer:Pe,RoFormerTokenizer:Ae,XLMTokenizer:ze,ElectraTokenizer:Oe,MobileBertTokenizer:Te,SqueezeBertTokenizer:$e,AlbertTokenizer:ke,GPT2Tokenizer:Be,BartTokenizer:De,MBartTokenizer:Ne,MBart50Tokenizer:je,RobertaTokenizer:Re,WhisperTokenizer:rt,CodeGenTokenizer:st,CLIPTokenizer:it,SiglipTokenizer:at,MarianTokenizer:ot,BloomTokenizer:Ve,NllbTokenizer:tt,M2M100Tokenizer:nt,LlamaTokenizer:Ue,CodeLlamaTokenizer:qe,XLMRobertaTokenizer:We,MPNetTokenizer:He,FalconTokenizer:Ke,GPTNeoXTokenizer:Qe,EsmTokenizer:Xe,Wav2Vec2CTCTokenizer:lt,BlenderbotTokenizer:ut,BlenderbotSmallTokenizer:ct,SpeechT5Tokenizer:dt,NougatTokenizer:pt,VitsTokenizer:ht,Qwen2Tokenizer:Je,GemmaTokenizer:Ye,Grok1Tokenizer:Ze,CohereTokenizer:mt,MgpstrTokenizer:ft,Ernie4_5_Tokenizer:_t,PreTrainedTokenizer:ve};static async from_pretrained(e,{progress_callback:t=null,config:n=null,cache_dir:r=null,local_files_only:s=!1,revision:i="main",legacy:a=null}={}){const[o,l]=await d(e,{progress_callback:t,config:n,cache_dir:r,local_files_only:s,revision:i,legacy:a}),u=l.tokenizer_class?.replace(/Fast$/,"")??"PreTrainedTokenizer";let c=this.TOKENIZER_CLASS_MAPPING[u];return c||(console.warn(`Unknown tokenizer class "${u}", attempting to construct from base class.`),c=ve),new c(o,l)}}},"./src/utils/audio.js":(e,t,n)=>{n.r(t),n.d(t,{RawAudio:()=>v,hamming:()=>p,hanning:()=>d,mel_filter_bank:()=>g,read_audio:()=>u,spectrogram:()=>y,window_function:()=>b});var r=n("./src/utils/hub.js"),s=n("./src/utils/maths.js"),i=n("./src/utils/core.js"),a=n("./src/env.js"),o=n("./src/utils/tensor.js"),l=n("?7992");async function u(e,t){if("undefined"==typeof AudioContext)throw Error("Unable to load audio from path/URL since `AudioContext` is not available in your environment. Instead, audio data should be passed directly to the pipeline/processor. For more information and some example code, see https://huggingface.co/docs/transformers.js/guides/node-audio-processing.");const n=await(await(0,r.getFile)(e)).arrayBuffer(),s=new AudioContext({sampleRate:t});void 0===t&&console.warn(`No sampling rate provided, using default of ${s.sampleRate}Hz.`);const i=await s.decodeAudioData(n);let a;if(2===i.numberOfChannels){const e=Math.sqrt(2),t=i.getChannelData(0),n=i.getChannelData(1);a=new Float32Array(t.length);for(let r=0;r<i.length;++r)a[r]=e*(t[r]+n[r])/2}else a=i.getChannelData(0);return a}function c(e,t){if(e<1)return new Float64Array;if(1===e)return new Float64Array([1]);const n=1-t,r=2*Math.PI/(e-1),s=new Float64Array(e);for(let i=0;i<e;++i)s[i]=t-n*Math.cos(i*r);return s}function d(e){return c(e,.5)}function p(e){return c(e,.54)}const h={htk:e=>2595*Math.log10(1+e/700),kaldi:e=>1127*Math.log(1+e/700),slaney:(e,t=1e3,n=15,r=27/Math.log(6.4))=>e>=t?n+Math.log(e/t)*r:3*e/200};function m(e,t="htk"){const n=h[t];if(!n)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return"number"==typeof e?n(e):e.map(e=>n(e))}const f={htk:e=>700*(10**(e/2595)-1),kaldi:e=>700*(Math.exp(e/1127)-1),slaney:(e,t=1e3,n=15,r=Math.log(6.4)/27)=>e>=n?t*Math.exp(r*(e-n)):200*e/3};function _(e,t,n){const r=(t-e)/(n-1);return Float64Array.from({length:n},(t,n)=>e+r*n)}function g(e,t,n,r,s,i=null,a="htk",o=!1){if(null!==i&&"slaney"!==i)throw new Error('norm must be one of null or "slaney"');if(e<2)throw new Error(`Require num_frequency_bins: ${e} >= 2`);if(n>r)throw new Error(`Require min_frequency: ${n} <= max_frequency: ${r}`);const l=_(m(n,a),m(r,a),t+2);let u,c=function(e,t="htk"){const n=f[t];if(!n)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return"number"==typeof e?n(e):e.map(e=>n(e))}(l,a);if(o){const t=s/(2*(e-1));u=m(Float64Array.from({length:e},(e,n)=>n*t),a),c=l}else u=_(0,Math.floor(s/2),e);const d=function(e,t){const n=Float64Array.from({length:t.length-1},(e,n)=>t[n+1]-t[n]),r=Array.from({length:e.length},()=>new Array(t.length));for(let n=0;n<e.length;++n){const s=r[n];for(let r=0;r<t.length;++r)s[r]=t[r]-e[n]}const s=t.length-2,i=Array.from({length:s},()=>new Array(e.length));for(let t=0;t<e.length;++t){const e=r[t];for(let r=0;r<s;++r){const s=-e[r]/n[r],a=e[r+2]/n[r+1];i[r][t]=Math.max(0,Math.min(s,a))}}return i}(u,c);if(null!==i&&"slaney"===i)for(let n=0;n<t;++n){const t=d[n],r=2/(c[n+2]-c[n]);for(let n=0;n<e;++n)t[n]*=r}return d}function w(e,t,n,r,i){if(n<=0)throw new Error("reference must be greater than zero");if(r<=0)throw new Error("min_value must be greater than zero");n=Math.max(r,n);const a=Math.log10(n);for(let n=0;n<e.length;++n)e[n]=t*Math.log10(Math.max(r,e[n])-a);if(null!==i){if(i<=0)throw new Error("db_range must be greater than zero");const t=(0,s.max)(e)[0]-i;for(let n=0;n<e.length;++n)e[n]=Math.max(e[n],t)}return e}async function y(e,t,n,r,{fft_length:a=null,power:l=1,center:u=!0,pad_mode:c="reflect",onesided:d=!0,preemphasis:p=null,preemphasis_htk_flavor:h=!0,mel_filters:m=null,mel_floor:f=1e-10,log_mel:_=null,reference:g=1,min_value:y=1e-10,db_range:b=null,remove_dc_offset:x=null,min_num_frames:v=null,max_num_frames:M=null,do_pad:k=!0,transpose:T=!1,mel_offset:$=0}={}){const S=t.length;if(null===a&&(a=n),n>a)throw Error(`frame_length (${n}) may not be larger than fft_length (${a})`);if(S!==n)throw new Error(`Length of the window (${S}) must equal frame_length (${n})`);if(r<=0)throw new Error("hop_length must be greater than zero");if(null===l&&null!==m)throw new Error("You have provided `mel_filters` but `power` is `None`. Mel spectrogram computation is not yet supported for complex-valued spectrogram. Specify `power` to fix this issue.");if(!h)throw new Error("`preemphasis_htk_flavor=false` is not currently supported.");if(u)switch(c){case"reflect":{const t=Math.floor((a-1)/2)+1;e=function(e,t,n){const r=new e.constructor(e.length+t+n),s=e.length-1;for(let n=0;n<e.length;++n)r[t+n]=e[n];for(let n=1;n<=t;++n)r[t-n]=e[(0,i.calculateReflectOffset)(n,s)];for(let a=1;a<=n;++a)r[s+t+a]=e[(0,i.calculateReflectOffset)(s-a,s)];return r}(e,t,t);break}case"constant":{const t=Math.floor(a/2),n=new e.constructor(e.length+2*t);n.set(e,t),e=n;break}default:throw new Error(`pad_mode="${c}" not implemented yet.`)}let C=Math.floor(1+Math.floor((e.length-n)/r));null!==v&&C<v&&(C=v);const E=d?Math.floor(a/2)+1:a;let P=C,A=C;null!==M&&(M>C?k&&(A=M):A=P=M);const I=new s.FFT(a),F=new Float64Array(a),z=new Float64Array(I.outputBufferSize),O=new Float32Array(E*A);for(let s=0;s<P;++s){const i=s*r,a=Math.min(e.length-i,n);a!==n&&F.fill(0,0,n);for(let t=0;t<a;++t)F[t]=e[i+t];if(x){let e=0;for(let t=0;t<a;++t)e+=F[t];const t=e/a;for(let e=0;e<a;++e)F[e]-=t}if(null!==p){for(let e=a-1;e>=1;--e)F[e]-=p*F[e-1];F[0]*=1-p}for(let e=0;e<t.length;++e)F[e]*=t[e];I.realTransform(z,F);for(let e=0;e<E;++e){const t=e<<1;O[e*A+s]=z[t]**2+z[t+1]**2}}if(null!==l&&2!==l){const e=l/2;for(let t=0;t<O.length;++t)O[t]**=e}const L=m.length;let B=await(0,o.matmul)(new o.Tensor("float32",m.flat(),[L,E]),new o.Tensor("float32",O,[E,A]));T&&(B=B.transpose(1,0));const D=B.data;for(let e=0;e<D.length;++e)D[e]=$+Math.max(f,D[e]);if(null!==l&&null!==_){const e=Math.min(D.length,P*L);switch(_){case"log":for(let t=0;t<e;++t)D[t]=Math.log(D[t]);break;case"log10":for(let t=0;t<e;++t)D[t]=Math.log10(D[t]);break;case"dB":if(1===l)!function(e,t=1,n=1e-5,r=null){w(e,20,t,n,r)}(D,g,y,b);else{if(2!==l)throw new Error(`Cannot use log_mel option '${_}' with power ${l}`);!function(e,t=1,n=1e-10,r=null){w(e,10,t,n,r)}(D,g,y,b)}break;default:throw new Error(`log_mel must be one of null, 'log', 'log10' or 'dB'. Got '${_}'`)}}return B}function b(e,t,{periodic:n=!0,frame_length:r=null,center:s=!0}={}){const i=n?e+1:e;let a;switch(t){case"boxcar":a=new Float64Array(i).fill(1);break;case"hann":case"hann_window":a=d(i);break;case"hamming":a=p(i);break;case"povey":a=d(i).map(e=>Math.pow(e,.85));break;default:throw new Error(`Unknown window type ${t}.`)}if(n&&(a=a.subarray(0,e)),null===r)return a;if(e>r)throw new Error(`Length of the window (${e}) may not be larger than frame_length (${r})`);return a}function x(e,t,n){for(let r=0;r<n.length;++r)e.setUint8(t+r,n.charCodeAt(r))}class v{constructor(e,t){this.audio=e,this.sampling_rate=t}toWav(){return function(e,t){let n=44;const r=new ArrayBuffer(n+4*e.length),s=new DataView(r);x(s,0,"RIFF"),s.setUint32(4,36+4*e.length,!0),x(s,8,"WAVE"),x(s,12,"fmt "),s.setUint32(16,16,!0),s.setUint16(20,3,!0),s.setUint16(22,1,!0),s.setUint32(24,t,!0),s.setUint32(28,4*t,!0),s.setUint16(32,4,!0),s.setUint16(34,32,!0),x(s,36,"data"),s.setUint32(40,4*e.length,!0);for(let t=0;t<e.length;++t,n+=4)s.setFloat32(n,e[t],!0);return r}(this.audio,this.sampling_rate)}toBlob(){const e=this.toWav();return new Blob([e],{type:"audio/wav"})}async save(e){let t;if(a.apis.IS_BROWSER_ENV){if(a.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save a file from a Web Worker.");t=i.saveBlob}else{if(!a.apis.IS_FS_AVAILABLE)throw new Error("Unable to save because filesystem is disabled in this environment.");t=async(e,t)=>{let n=await t.arrayBuffer();l.writeFileSync(e,Buffer.from(n))}}await t(e,this.toBlob())}}},"./src/utils/constants.js":(e,t,n)=>{n.r(t),n.d(t,{CHAT_TEMPLATE_NAME:()=>l,CONFIG_NAME:()=>s,FEATURE_EXTRACTOR_NAME:()=>i,GENERATION_CONFIG_NAME:()=>u,GITHUB_ISSUE_URL:()=>r,IMAGE_PROCESSOR_NAME:()=>a,PROCESSOR_NAME:()=>o});const r="https://github.com/huggingface/transformers.js/issues/new/choose",s="config.json",i="preprocessor_config.json",a=i,o="processor_config.json",l="chat_template.jinja",u="generation_config.json"},"./src/utils/core.js":(e,t,n)=>{function r(e,t){e&&e(t)}function s(e){return Object.fromEntries(Object.entries(e).map(([e,t])=>[t,e]))}function i(e){return e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function a(e){return"TypedArray"===e?.prototype?.__proto__?.constructor?.name}function o(e){return Number.isInteger(e)||"bigint"==typeof e}function l(e){return null==e||-1===e}function u(e){const t=[];let n=e;for(;Array.isArray(n);)t.push(n.length),n=n[0];return t}function c(e,t,n=void 0){const r=e[t];if(void 0!==r)return delete e[t],r;if(void 0===n)throw Error(`Key ${t} does not exist in object.`);return n}function d(...e){return Array.prototype.concat.apply([],e)}function p(...e){return e.reduce((e,t)=>e.flatMap(e=>t.map(t=>[e,t])))}function h(e,t){return Math.abs((e+t)%(2*t)-t)}function m(e,t){const n=URL.createObjectURL(t),r=document.createElement("a");r.href=n,r.download=e,r.click(),r.remove(),URL.revokeObjectURL(n)}function f(e,t){return Object.assign({},...t.map(t=>{if(void 0!==e[t])return{[t]:e[t]}}))}function _(e){let t=0;for(const n of e)++t;return t}function g(e,t){let n=0;for(const r of e)r===t&&++n;return n}n.r(t),n.d(t,{calculateDimensions:()=>u,calculateReflectOffset:()=>h,count:()=>g,dispatchCallback:()=>r,escapeRegExp:()=>i,isIntegralNumber:()=>o,isNullishDimension:()=>l,isTypedArray:()=>a,len:()=>_,mergeArrays:()=>d,pick:()=>f,pop:()=>c,product:()=>p,reverseDictionary:()=>s,saveBlob:()=>m})},"./src/utils/data-structures.js":(e,t,n)=>{n.r(t),n.d(t,{CharTrie:()=>s,DictionarySplitter:()=>l,LRUCache:()=>u,PriorityQueue:()=>r,TokenLattice:()=>a});class r{constructor(e=(e,t)=>e>t,t=1/0){this._heap=[],this._comparator=e,this._maxSize=t}get size(){return this._heap.length}isEmpty(){return 0===this.size}peek(){return this._heap[0]}push(...e){return this.extend(e)}extend(e){for(const t of e)if(this.size<this._maxSize)this._heap.push(t),this._siftUp();else{const e=this._smallest();this._comparator(t,this._heap[e])&&(this._heap[e]=t,this._siftUpFrom(e))}return this.size}pop(){const e=this.peek(),t=this.size-1;return t>0&&this._swap(0,t),this._heap.pop(),this._siftDown(),e}replace(e){const t=this.peek();return this._heap[0]=e,this._siftDown(),t}_parent(e){return(e+1>>>1)-1}_left(e){return 1+(e<<1)}_right(e){return e+1<<1}_greater(e,t){return this._comparator(this._heap[e],this._heap[t])}_swap(e,t){const n=this._heap[e];this._heap[e]=this._heap[t],this._heap[t]=n}_siftUp(){this._siftUpFrom(this.size-1)}_siftUpFrom(e){for(;e>0&&this._greater(e,this._parent(e));)this._swap(e,this._parent(e)),e=this._parent(e)}_siftDown(){let e=0;for(;this._left(e)<this.size&&this._greater(this._left(e),e)||this._right(e)<this.size&&this._greater(this._right(e),e);){const t=this._right(e)<this.size&&this._greater(this._right(e),this._left(e))?this._right(e):this._left(e);this._swap(e,t),e=t}}_smallest(){return 2**Math.floor(Math.log2(this.size))-1}}class s{constructor(){this.root=i.default()}extend(e){for(const t of e)this.push(t)}push(e){let t=this.root;for(const n of e){let e=t.children.get(n);void 0===e&&(e=i.default(),t.children.set(n,e)),t=e}t.isLeaf=!0}*commonPrefixSearch(e){let t=this.root;if(void 0===t)return;let n="";for(const r of e){if(n+=r,t=t.children.get(r),void 0===t)return;t.isLeaf&&(yield n)}}}class i{constructor(e,t){this.isLeaf=e,this.children=t}static default(){return new i(!1,new Map)}}class a{constructor(e,t,n){this.chars=Array.from(e),this.len=this.chars.length,this.bosTokenId=t,this.eosTokenId=n,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},()=>[]),this.endNodes=Array.from({length:this.len+1},()=>[]);const r=new o(this.bosTokenId,0,0,0,0),s=new o(this.eosTokenId,1,this.len,0,0);this.nodes.push(r.clone()),this.nodes.push(s.clone()),this.beginNodes[this.len].push(s),this.endNodes[0].push(r)}insert(e,t,n,r){const s=this.nodes.length,i=new o(r,s,e,t,n);this.beginNodes[e].push(i),this.endNodes[e+t].push(i),this.nodes.push(i)}viterbi(){const e=this.len;let t=0;for(;t<=e;){if(0==this.beginNodes[t].length)return[];for(let e of this.beginNodes[t]){e.prev=null;let n=0,r=null;for(let s of this.endNodes[t]){const t=s.backtraceScore+e.score;(null===r||t>n)&&(r=s.clone(),n=t)}if(null===r)return[];e.prev=r,e.backtraceScore=n}++t}const n=[],r=this.beginNodes[e][0].prev;if(null===r)return[];let s=r.clone();for(;null!==s.prev;){n.push(s.clone());const e=s.clone();s=e.prev.clone()}return n.reverse(),n}piece(e){return this.chars.slice(e.pos,e.pos+e.length).join("")}tokens(){return this.viterbi().map(e=>this.piece(e))}tokenIds(){return this.viterbi().map(e=>e.tokenId)}}class o{constructor(e,t,n,r,s){this.tokenId=e,this.nodeId=t,this.pos=n,this.length=r,this.score=s,this.prev=null,this.backtraceScore=0}clone(){const e=new o(this.tokenId,this.nodeId,this.pos,this.length,this.score);return e.prev=this.prev,e.backtraceScore=this.backtraceScore,e}}class l{constructor(e){this.trie=this._buildTrie(e)}_buildTrie(e){const t=Object.create(null);for(const n of e){let e=t;for(let t=0;t<n.length;++t)e=e[n[t]]??=Object.create(null);e.end=n}return t}split(e){const t=[],n=e.length;let r=0,s=0;for(;s<n;){let i=this.trie,a=null,o=s;for(;o<n&&(i=i[e[o]]);)i.end&&(a=i.end),++o;a?(s>r&&t.push(e.slice(r,s)),t.push(a),s+=a.length,r=s):++s}return r<n&&t.push(e.slice(r)),t}}class u{constructor(e){this.capacity=e,this.cache=new Map}get(e){if(!this.cache.has(e))return;const t=this.cache.get(e);return this.cache.delete(e),this.cache.set(e,t),t}put(e,t){this.cache.has(e)&&this.cache.delete(e),this.cache.set(e,t),this.cache.size>this.capacity&&this.cache.delete(this.cache.keys().next().value)}clear(){this.cache.clear()}}},"./src/utils/devices.js":(e,t,n)=>{n.r(t),n.d(t,{DEVICE_TYPES:()=>r});const r=Object.freeze({auto:"auto",gpu:"gpu",cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:"webnn","webnn-npu":"webnn-npu","webnn-gpu":"webnn-gpu","webnn-cpu":"webnn-cpu"})},"./src/utils/dtypes.js":(e,t,n)=>{n.r(t),n.d(t,{DATA_TYPES:()=>a,DEFAULT_DEVICE_DTYPE_MAPPING:()=>o,DEFAULT_DTYPE_SUFFIX_MAPPING:()=>l,isWebGpuFp16Supported:()=>i});var r=n("./src/env.js"),s=n("./src/utils/devices.js");const i=function(){let e;return async function(){if(void 0===e)if(r.apis.IS_WEBGPU_AVAILABLE)try{const t=await navigator.gpu.requestAdapter();e=t.features.has("shader-f16")}catch(t){e=!1}else e=!1;return e}}(),a=Object.freeze({auto:"auto",fp32:"fp32",fp16:"fp16",q8:"q8",int8:"int8",uint8:"uint8",q4:"q4",bnb4:"bnb4",q4f16:"q4f16"}),o=Object.freeze({[s.DEVICE_TYPES.wasm]:a.q8}),l=Object.freeze({[a.fp32]:"",[a.fp16]:"_fp16",[a.int8]:"_int8",[a.uint8]:"_uint8",[a.q8]:"_quantized",[a.q4]:"_q4",[a.q4f16]:"_q4f16",[a.bnb4]:"_bnb4"})},"./src/utils/generic.js":(e,t,n)=>{n.r(t),n.d(t,{Callable:()=>r});const r=class{constructor(){let e=function(...t){return e._call(...t)};return Object.setPrototypeOf(e,new.target.prototype)}_call(...e){throw Error("Must implement _call method in subclass")}}},"./src/utils/hub.js":(e,t,n)=>{n.r(t),n.d(t,{MAX_EXTERNAL_DATA_CHUNKS:()=>o,getFile:()=>p,getModelFile:()=>f,getModelJSON:()=>g,getModelText:()=>_});var r=n("?7992"),s=n("?5af5"),i=n("./src/env.js"),a=n("./src/utils/core.js");const o=100,l={txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"};class u{constructor(e){if(this.filePath=e,this.headers=new Headers,this.exists=r.existsSync(e),this.exists){this.status=200,this.statusText="OK";let t=r.statSync(e);this.headers.set("content-length",t.size.toString()),this.updateContentType();const n=r.createReadStream(e);this.body=new ReadableStream({start(e){n.on("data",t=>e.enqueue(t)),n.on("end",()=>e.close()),n.on("error",t=>e.error(t))},cancel(){n.destroy()}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){const e=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",l[e]??"application/octet-stream")}clone(){let e=new u(this.filePath);return e.exists=this.exists,e.status=this.status,e.statusText=this.statusText,e.headers=new Headers(this.headers),e}async arrayBuffer(){return(await r.promises.readFile(this.filePath)).buffer}async blob(){const e=await r.promises.readFile(this.filePath);return new Blob([e],{type:this.headers.get("content-type")})}async text(){return await r.promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function c(e,t=null,n=null){let r;try{r=new URL(e)}catch(e){return!1}return!(t&&!t.includes(r.protocol)||n&&!n.includes(r.hostname))}const d=/^(\b[\w\-.]+\b\/)?\b[\w\-.]{1,96}\b$/;async function p(e){if(i.env.useFS&&!c(e,["http:","https:","blob:"]))return new u(e instanceof URL?"file:"===e.protocol?e.pathname:e.toString():e);if("undefined"!=typeof process&&"node"===process?.release?.name){const t=!!process.env?.TESTING_REMOTELY,n=i.env.version,r=new Headers;if(r.set("User-Agent",`transformers.js/${n}; is_ci/${t};`),c(e,["http:","https:"],["huggingface.co","hf.co"])){const e=process.env?.HF_TOKEN??process.env?.HF_ACCESS_TOKEN;e&&r.set("Authorization",`Bearer ${e}`)}return fetch(e,{headers:r})}return fetch(e)}const h={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};class m{constructor(e){this.path=e}async match(e){let t=s.join(this.path,e),n=new u(t);return n.exists?n:void 0}async put(e,t,n=void 0){let i=s.join(this.path,e);try{const e=t.headers.get("Content-Length"),a=parseInt(e??"0");let o=0;await r.promises.mkdir(s.dirname(i),{recursive:!0});const l=r.createWriteStream(i),u=t.body.getReader();for(;;){const{done:e,value:t}=await u.read();if(e)break;await new qd((e,n)=>{l.write(t,t=>{t?n(t):e()})}),o+=t.length;const r=a?o/a*100:0;n?.({progress:r,loaded:o,total:a})}l.close()}catch(e){try{await r.promises.unlink(i)}catch{}throw e}}}async function f(e,t,n=!0,r={},s=!1){if(!i.env.allowLocalModels){if(r.local_files_only)throw Error("Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).");if(!i.env.allowRemoteModels)throw Error("Invalid configuration detected: both local and remote models are disabled. Fix by setting `env.allowLocalModels` or `env.allowRemoteModels` to `true`.")}let o;if((0,a.dispatchCallback)(r.progress_callback,{status:"initiate",name:e,file:t}),!o&&i.env.useCustomCache){if(!i.env.customCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");if(!i.env.customCache.match||!i.env.customCache.put)throw new Error("`env.customCache` must be an object which implements the `match` and `put` functions of the Web Cache API. For more information, see https://developer.mozilla.org/en-US/docs/Web/API/Cache");o=i.env.customCache}if(!o&&i.env.useBrowserCache){if("undefined"==typeof caches)throw Error("Browser cache is not available in this environment.");try{o=await caches.open("transformers-cache")}catch(e){console.warn("An error occurred while opening the browser cache:",e)}}if(!o&&i.env.useFSCache){if(!i.apis.IS_FS_AVAILABLE)throw Error("File System Cache is not available in this environment.");o=new m(r.cache_dir??i.env.cacheDir)}const l=r.revision??"main",f=w(e,t),_=(g=e,!(!d.test(g)||g.includes("..")||g.includes("--")||g.endsWith(".git")||g.endsWith(".ipynb")));var g;const y=_?w(i.env.localModelPath,f):f,b=w(i.env.remoteHost,i.env.remotePathTemplate.replaceAll("{model}",e).replaceAll("{revision}",encodeURIComponent(l)),t);let x;const v=o instanceof m?"main"===l?f:w(e,l,t):b;let M,k=!1;o&&(M=await async function(e,...t){for(let n of t)try{let t=await e.match(n);if(t)return t}catch(e){continue}}(o,y,v));const T=void 0!==M;if(void 0===M){if(i.env.allowLocalModels)if(c(f,["http:","https:"])){if(r.local_files_only)throw new Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${f}.`);if(!i.env.allowRemoteModels)throw new Error(`\`env.allowRemoteModels=false\`, but attempted to load a remote file from: ${f}.`)}else try{M=await p(y),x=y}catch(e){console.warn(`Unable to load from local path "${y}": "${e}"`)}if(void 0===M||404===M.status){if(r.local_files_only||!i.env.allowRemoteModels){if(n)throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${y}".`);return null}if(!_)throw Error(`Local file missing at "${y}" and download aborted due to invalid model ID "${e}".`);if(M=await p(b),200!==M.status)return function(e,t,n){if(!n)return null;const r=h[e]??`Error (${e}) occurred while trying to load file`;throw Error(`${r}: "${t}".`)}(M.status,b,n);x=v}k=o&&"undefined"!=typeof Response&&M instanceof Response&&200===M.status}let $;if((0,a.dispatchCallback)(r.progress_callback,{status:"download",name:e,file:t}),!i.apis.IS_NODE_ENV||!s){let n;r.progress_callback?T&&"undefined"!=typeof navigator&&/firefox/i.test(navigator.userAgent)?(n=new Uint8Array(await M.arrayBuffer()),(0,a.dispatchCallback)(r.progress_callback,{status:"progress",name:e,file:t,progress:100,loaded:n.length,total:n.length})):n=await async function(n){const s=n.headers.get("Content-Length");null===s&&console.warn("Unable to determine content-length from response headers. Will expand buffer when needed.");let i=parseInt(s??"0"),o=new Uint8Array(i),l=0;const u=n.body.getReader();return await async function n(){const{done:s,value:c}=await u.read();if(s)return;const d=l+c.length;if(d>i){i=d;const e=new Uint8Array(i);e.set(o),o=e}return o.set(c,l),l=d,p={progress:l/i*100,loaded:l,total:i},(0,a.dispatchCallback)(r.progress_callback,{status:"progress",name:e,file:t,...p}),n();var p}(),o}(M):n=new Uint8Array(await M.arrayBuffer()),$=n}if(k&&x&&void 0===await o.match(x))if($)await o.put(x,new Response($,{headers:M.headers})).catch(e=>{console.warn(`Unable to add response to browser cache: ${e}.`)});else{const n=r.progress_callback?n=>(0,a.dispatchCallback)(r.progress_callback,{status:"progress",name:e,file:t,...n}):void 0;await o.put(x,M,n)}if((0,a.dispatchCallback)(r.progress_callback,{status:"done",name:e,file:t}),$){if(!i.apis.IS_NODE_ENV&&s)throw new Error("Cannot return path in a browser environment.");return $}if(M instanceof u)return M.filePath;const S=await(o?.match(x));if(S instanceof u)return S.filePath;if(S instanceof Response)return new Uint8Array(await S.arrayBuffer());if("string"==typeof S)return S;throw new Error("Unable to get model file path or buffer.")}async function _(e,t,n=!0,r={}){const s=await f(e,t,n,r,!1);return null===s?null:new TextDecoder("utf-8").decode(s)}async function g(e,t,n=!0,r={}){const s=await _(e,t,n,r);return null===s?{}:JSON.parse(s)}function w(...e){return(e=e.map((t,n)=>(n&&(t=t.replace(new RegExp("^/"),"")),n!==e.length-1&&(t=t.replace(new RegExp("/$"),"")),t))).join("/")}},"./src/utils/image.js":(e,t,n)=>{n.r(t),n.d(t,{RawImage:()=>m,load_image:()=>f});var r=n("./src/utils/core.js"),s=n("./src/utils/hub.js"),i=n("./src/env.js"),a=n("./src/utils/tensor.js"),o=n("?2b25");let l,u,c;const d=i.apis.IS_BROWSER_ENV||i.apis.IS_WEBWORKER_ENV;if(d)l=(e,t)=>{if(!self.OffscreenCanvas)throw new Error("OffscreenCanvas not supported by this browser.");return new self.OffscreenCanvas(e,t)},c=self.createImageBitmap,u=self.ImageData;else{if(!o)throw new Error("Unable to load image processing library.");c=async e=>{const t=(await e.metadata()).channels,{data:n,info:r}=await e.rotate().raw().toBuffer({resolveWithObject:!0}),s=new m(new Uint8ClampedArray(n),r.width,r.height,r.channels);return void 0!==t&&t!==r.channels&&s.convert(t),s}}const p={0:"nearest",1:"lanczos",2:"bilinear",3:"bicubic",4:"box",5:"hamming"},h=new Map([["png","image/png"],["jpg","image/jpeg"],["jpeg","image/jpeg"],["gif","image/gif"]]);class m{constructor(e,t,n,r){this.data=e,this.width=t,this.height=n,this.channels=r}get size(){return[this.width,this.height]}static async read(e){if(e instanceof m)return e;if("string"==typeof e||e instanceof URL)return await this.fromURL(e);if(e instanceof Blob)return await this.fromBlob(e);if("undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof OffscreenCanvas&&e instanceof OffscreenCanvas)return this.fromCanvas(e);throw new Error("Unsupported input type: "+typeof e)}static fromCanvas(e){if(!d)throw new Error("fromCanvas() is only supported in browser environments.");const t=e.getContext("2d").getImageData(0,0,e.width,e.height).data;return new m(t,e.width,e.height,4)}static async fromURL(e){const t=await(0,s.getFile)(e);if(200!==t.status)throw new Error(`Unable to read image from "${e}" (${t.status} ${t.statusText})`);const n=await t.blob();return this.fromBlob(n)}static async fromBlob(e){if(d){const t=await c(e),n=l(t.width,t.height).getContext("2d");return n.drawImage(t,0,0),new this(n.getImageData(0,0,t.width,t.height).data,t.width,t.height,4)}{const t=o(await e.arrayBuffer());return await c(t)}}static fromTensor(e,t="CHW"){if(3!==e.dims.length)throw new Error(`Tensor should have 3 dimensions, but has ${e.dims.length} dimensions.`);if("CHW"===t)e=e.transpose(1,2,0);else if("HWC"!==t)throw new Error(`Unsupported channel format: ${t}`);if(!(e.data instanceof Uint8ClampedArray||e.data instanceof Uint8Array))throw new Error(`Unsupported tensor type: ${e.type}`);switch(e.dims[2]){case 1:case 2:case 3:case 4:return new m(e.data,e.dims[1],e.dims[0],e.dims[2]);default:throw new Error(`Unsupported number of channels: ${e.dims[2]}`)}}grayscale(){if(1===this.channels)return this;const e=new Uint8ClampedArray(this.width*this.height*1);switch(this.channels){case 3:case 4:for(let t=0,n=0;t<this.data.length;t+=this.channels){const r=this.data[t],s=this.data[t+1],i=this.data[t+2];e[n++]=Math.round(.2989*r+.587*s+.114*i)}break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(e,this.width,this.height,1)}rgb(){if(3===this.channels)return this;const e=new Uint8ClampedArray(this.width*this.height*3);switch(this.channels){case 1:for(let t=0,n=0;t<this.data.length;++t)e[n++]=this.data[t],e[n++]=this.data[t],e[n++]=this.data[t];break;case 4:for(let t=0,n=0;t<this.data.length;t+=4)e[n++]=this.data[t],e[n++]=this.data[t+1],e[n++]=this.data[t+2];break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(e,this.width,this.height,3)}rgba(){if(4===this.channels)return this;const e=new Uint8ClampedArray(this.width*this.height*4);switch(this.channels){case 1:for(let t=0,n=0;t<this.data.length;++t)e[n++]=this.data[t],e[n++]=this.data[t],e[n++]=this.data[t],e[n++]=255;break;case 3:for(let t=0,n=0;t<this.data.length;t+=3)e[n++]=this.data[t],e[n++]=this.data[t+1],e[n++]=this.data[t+2],e[n++]=255;break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(e,this.width,this.height,4)}putAlpha(e){if(e.width!==this.width||e.height!==this.height)throw new Error(`Expected mask size to be ${this.width}x${this.height}, but got ${e.width}x${e.height}`);if(1!==e.channels)throw new Error(`Expected mask to have 1 channel, but got ${e.channels}`);const t=this.data,n=e.data,r=this.width*this.height;if(3===this.channels){const e=new Uint8ClampedArray(4*r);for(let s=0,i=0,a=0;s<r;++s)e[a++]=t[i++],e[a++]=t[i++],e[a++]=t[i++],e[a++]=n[s];return this._update(e,this.width,this.height,4)}if(4===this.channels){for(let e=0;e<r;++e)t[4*e+3]=n[e];return this}throw new Error(`Expected image to have 3 or 4 channels, but got ${this.channels}`)}async resize(e,t,{resample:n=2}={}){if(this.width===e&&this.height===t)return this;let s=p[n]??n;const i=(0,r.isNullishDimension)(e),a=(0,r.isNullishDimension)(t);if(i&&a)return this;if(i?e=t/this.height*this.width:a&&(t=e/this.width*this.height),d){const n=this.channels,r=this.toCanvas(),s=l(e,t).getContext("2d");return s.drawImage(r,0,0,e,t),new m(s.getImageData(0,0,e,t).data,e,t,4).convert(n)}{let n=this.toSharp();switch(s){case"box":case"hamming":"box"!==s&&"hamming"!==s||(console.warn(`Resampling method ${s} is not yet supported. Using bilinear instead.`),s="bilinear");case"nearest":case"bilinear":case"bicubic":n=n.affine([e/this.width,0,0,t/this.height],{interpolator:s});break;case"lanczos":n=n.resize({width:e,height:t,fit:"fill",kernel:"lanczos3"});break;default:throw new Error(`Resampling method ${s} is not supported.`)}return await c(n)}}async pad([e,t,n,r]){if(e=Math.max(e,0),t=Math.max(t,0),n=Math.max(n,0),r=Math.max(r,0),0===e&&0===t&&0===n&&0===r)return this;if(d){const s=this.channels,i=this.toCanvas(),a=this.width+e+t,o=this.height+n+r,u=l(a,o).getContext("2d");return u.drawImage(i,0,0,this.width,this.height,e,n,this.width,this.height),new m(u.getImageData(0,0,a,o).data,a,o,4).convert(s)}{const s=this.toSharp().extend({left:e,right:t,top:n,bottom:r});return await c(s)}}async crop([e,t,n,r]){if(e=Math.max(e,0),t=Math.max(t,0),n=Math.min(n,this.width-1),r=Math.min(r,this.height-1),0===e&&0===t&&n===this.width-1&&r===this.height-1)return this;const s=n-e+1,i=r-t+1;if(d){const n=this.channels,r=this.toCanvas(),a=l(s,i).getContext("2d");return a.drawImage(r,e,t,s,i,0,0,s,i),new m(a.getImageData(0,0,s,i).data,s,i,4).convert(n)}{const n=this.toSharp().extract({left:e,top:t,width:s,height:i});return await c(n)}}async center_crop(e,t){if(this.width===e&&this.height===t)return this;const n=(this.width-e)/2,r=(this.height-t)/2;if(d){const s=this.channels,i=this.toCanvas(),a=l(e,t).getContext("2d");let o=0,u=0,c=0,d=0;return n>=0?o=n:c=-n,r>=0?u=r:d=-r,a.drawImage(i,o,u,e,t,c,d,e,t),new m(a.getImageData(0,0,e,t).data,e,t,4).convert(s)}{let s=this.toSharp();if(n>=0&&r>=0)s=s.extract({left:Math.floor(n),top:Math.floor(r),width:e,height:t});else if(n<=0&&r<=0){const i=Math.floor(-r),a=Math.floor(-n);s=s.extend({top:i,left:a,right:e-this.width-a,bottom:t-this.height-i})}else{let i=[0,0],a=0;r<0?(i[0]=Math.floor(-r),i[1]=t-this.height-i[0]):a=Math.floor(r);let o=[0,0],l=0;n<0?(o[0]=Math.floor(-n),o[1]=e-this.width-o[0]):l=Math.floor(n),s=s.extend({top:i[0],bottom:i[1],left:o[0],right:o[1]}).extract({left:l,top:a,width:e,height:t})}return await c(s)}}async toBlob(e="image/png",t=1){if(!d)throw new Error("toBlob() is only supported in browser environments.");const n=this.toCanvas();return await n.convertToBlob({type:e,quality:t})}toTensor(e="CHW"){let t=new a.Tensor("uint8",new Uint8Array(this.data),[this.height,this.width,this.channels]);if("HWC"===e);else{if("CHW"!==e)throw new Error(`Unsupported channel format: ${e}`);t=t.permute(2,0,1)}return t}toCanvas(){if(!d)throw new Error("toCanvas() is only supported in browser environments.");const e=this.clone().rgba(),t=l(e.width,e.height),n=new u(e.data,e.width,e.height);return t.getContext("2d").putImageData(n,0,0),t}split(){const{data:e,width:t,height:n,channels:r}=this,s=e.constructor,i=e.length/r,a=Array.from({length:r},()=>new s(i));for(let t=0;t<i;++t){const n=r*t;for(let s=0;s<r;++s)a[s][t]=e[n+s]}return a.map(e=>new m(e,t,n,1))}_update(e,t,n,r=null){return this.data=e,this.width=t,this.height=n,null!==r&&(this.channels=r),this}clone(){return new m(this.data.slice(),this.width,this.height,this.channels)}convert(e){if(this.channels===e)return this;switch(e){case 1:this.grayscale();break;case 3:this.rgb();break;case 4:this.rgba();break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this}async save(e){if(!d){if(i.apis.IS_FS_AVAILABLE){const t=this.toSharp();return await t.toFile(e)}throw new Error("Unable to save the image because filesystem is disabled in this environment.")}{if(i.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save an image from a Web Worker.");const t=e.split(".").pop().toLowerCase(),n=h.get(t)??"image/png",s=await this.toBlob(n);(0,r.saveBlob)(e,s)}}toSharp(){if(d)throw new Error("toSharp() is only supported in server-side environments.");return o(this.data,{raw:{width:this.width,height:this.height,channels:this.channels}})}}const f=m.read.bind(m)},"./src/utils/maths.js":(e,t,n)=>{function r(e,[t,n,r],[s,i],a="bilinear",o=!1){const l=i/r,u=s/n,c=new e.constructor(s*i*t),d=n*r,p=s*i;for(let a=0;a<s;++a)for(let s=0;s<i;++s){const o=a*i+s,h=(s+.5)/l-.5,m=(a+.5)/u-.5;let f=Math.floor(h),_=Math.floor(m);const g=Math.min(f+1,r-1),w=Math.min(_+1,n-1);f=Math.max(f,0),_=Math.max(_,0);const y=h-f,b=m-_,x=(1-y)*(1-b),v=y*(1-b),M=(1-y)*b,k=y*b,T=_*r,$=w*r,S=T+f,C=T+g,E=$+f,P=$+g;for(let n=0;n<t;++n){const t=n*d;c[n*p+o]=x*e[t+S]+v*e[t+C]+M*e[t+E]+k*e[t+P]}}return c}function s(e,t,n){const r=new Array(n.length),s=new Array(n.length);for(let e=n.length-1,i=1;e>=0;--e)s[e]=i,r[e]=t[n[e]],i*=r[e];const i=n.map((e,t)=>s[n.indexOf(t)]),a=new e.constructor(e.length);for(let n=0;n<e.length;++n){let r=0;for(let e=t.length-1,s=n;e>=0;--e)r+=s%t[e]*i[e],s=Math.floor(s/t[e]);a[r]=e[n]}return[a,r]}function i(e){const t=d(e)[0],n=e.map(e=>Math.exp(e-t)),r=n.reduce((e,t)=>e+t,0);return n.map(e=>e/r)}function a(e){const t=d(e)[0];let n=0;for(let r=0;r<e.length;++r)n+=Math.exp(e[r]-t);const r=Math.log(n);return e.map(e=>e-t-r)}function o(e,t){let n=0;for(let r=0;r<e.length;++r)n+=e[r]*t[r];return n}function l(e,t){return o(e,t)/(u(e)*u(t))}function u(e){return Math.sqrt(e.reduce((e,t)=>e+t*t,0))}function c(e){if(0===e.length)throw Error("Array must not be empty");let t=e[0],n=0;for(let r=1;r<e.length;++r)e[r]<t&&(t=e[r],n=r);return[t,n]}function d(e){if(0===e.length)throw Error("Array must not be empty");let t=e[0],n=0;for(let r=1;r<e.length;++r)e[r]>t&&(t=e[r],n=r);return[t,n]}function p(e){return e>0&&!(e&e-1)}n.r(t),n.d(t,{FFT:()=>f,bankers_round:()=>w,cos_sim:()=>l,dot:()=>o,dynamic_time_warping:()=>y,interpolate_data:()=>r,log_softmax:()=>a,magnitude:()=>u,max:()=>d,medianFilter:()=>_,min:()=>c,permute_data:()=>s,round:()=>g,softmax:()=>i});class h{constructor(e){if(this.size=0|e,this.size<=1||!p(this.size))throw new Error("FFT size must be a power of two larger than 1");this._csize=e<<1,this.table=new Float64Array(2*this.size);for(let e=0;e<this.table.length;e+=2){const t=Math.PI*e/this.size;this.table[e]=Math.cos(t),this.table[e+1]=-Math.sin(t)}let t=0;for(let e=1;this.size>e;e<<=1)++t;this._width=t%2==0?t-1:t,this._bitrev=new Int32Array(1<<this._width);for(let e=0;e<this._bitrev.length;++e){this._bitrev[e]=0;for(let t=0;t<this._width;t+=2){const n=this._width-t-2;this._bitrev[e]|=(e>>>t&3)<<n}}}createComplexArray(){return new Float64Array(this._csize)}fromComplexArray(e,t){const n=t||new Array(e.length>>>1);for(let t=0;t<e.length;t+=2)n[t>>>1]=e[t];return n}toComplexArray(e,t){const n=t||this.createComplexArray();for(let t=0;t<n.length;t+=2)n[t]=e[t>>>1],n[t+1]=0;return n}transform(e,t){if(e===t)throw new Error("Input and output buffers must be different");this._transform4(e,t,1)}realTransform(e,t){if(e===t)throw new Error("Input and output buffers must be different");this._realTransform4(e,t,1)}inverseTransform(e,t){if(e===t)throw new Error("Input and output buffers must be different");this._transform4(e,t,-1);for(let t=0;t<e.length;++t)e[t]/=this.size}_transform4(e,t,n){const r=this._csize;let s,i,a=1<<this._width,o=r/a<<1;const l=this._bitrev;if(4===o)for(s=0,i=0;s<r;s+=o,++i){const n=l[i];this._singleTransform2(t,e,s,n,a)}else for(s=0,i=0;s<r;s+=o,++i){const r=l[i];this._singleTransform4(t,e,s,r,a,n)}const u=this.table;for(a>>=2;a>=2;a>>=2){o=r/a<<1;const t=o>>>2;for(s=0;s<r;s+=o){const r=s+t-1;for(let i=s,o=0;i<r;i+=2,o+=a){const r=i,s=r+t,a=s+t,l=a+t,c=e[r],d=e[r+1],p=e[s],h=e[s+1],m=e[a],f=e[a+1],_=e[l],g=e[l+1],w=u[o],y=n*u[o+1],b=p*w-h*y,x=p*y+h*w,v=u[2*o],M=n*u[2*o+1],k=m*v-f*M,T=m*M+f*v,$=u[3*o],S=n*u[3*o+1],C=_*$-g*S,E=_*S+g*$,P=c+k,A=d+T,I=c-k,F=d-T,z=b+C,O=x+E,L=n*(b-C),B=n*(x-E);e[r]=P+z,e[r+1]=A+O,e[s]=I+B,e[s+1]=F-L,e[a]=P-z,e[a+1]=A-O,e[l]=I-B,e[l+1]=F+L}}}}_singleTransform2(e,t,n,r,s){const i=e[r],a=e[r+1],o=e[r+s],l=e[r+s+1];t[n]=i+o,t[n+1]=a+l,t[n+2]=i-o,t[n+3]=a-l}_singleTransform4(e,t,n,r,s,i){const a=2*s,o=3*s,l=e[r],u=e[r+1],c=e[r+s],d=e[r+s+1],p=e[r+a],h=e[r+a+1],m=e[r+o],f=e[r+o+1],_=l+p,g=u+h,w=l-p,y=u-h,b=c+m,x=d+f,v=i*(c-m),M=i*(d-f);t[n]=_+b,t[n+1]=g+x,t[n+2]=w+M,t[n+3]=y-v,t[n+4]=_-b,t[n+5]=g-x,t[n+6]=w-M,t[n+7]=y+v}_realTransform4(e,t,n){const r=this._csize;let s,i,a=1<<this._width,o=r/a<<1;const l=this._bitrev;if(4===o)for(s=0,i=0;s<r;s+=o,++i){const n=l[i];this._singleRealTransform2(t,e,s,n>>>1,a>>>1)}else for(s=0,i=0;s<r;s+=o,++i){const r=l[i];this._singleRealTransform4(t,e,s,r>>>1,a>>>1,n)}const u=this.table;for(a>>=2;a>=2;a>>=2){o=r/a<<1;const t=o>>>1,i=t>>>1,l=i>>>1;for(s=0;s<r;s+=o)for(let r=0,o=0;r<=l;r+=2,o+=a){const a=s+r,c=a+i,d=c+i,p=d+i,h=e[a],m=e[a+1],f=e[c],_=e[c+1],g=e[d],w=e[d+1],y=e[p],b=e[p+1],x=h,v=m,M=u[o],k=n*u[o+1],T=f*M-_*k,$=f*k+_*M,S=u[2*o],C=n*u[2*o+1],E=g*S-w*C,P=g*C+w*S,A=u[3*o],I=n*u[3*o+1],F=y*A-b*I,z=y*I+b*A,O=x+E,L=v+P,B=x-E,D=v-P,N=T+F,j=$+z,R=n*(T-F),V=n*($-z);if(e[a]=O+N,e[a+1]=L+j,e[c]=B+V,e[c+1]=D-R,0===r){e[d]=O-N,e[d+1]=L-j;continue}if(r===l)continue;const G=s+i-r,U=s+t-r;e[G]=B-n*V,e[G+1]=-D-n*R,e[U]=O-n*N,e[U+1]=n*j-L}}const c=r>>>1;for(let t=2;t<c;t+=2)e[r-t]=e[t],e[r-t+1]=-e[t+1]}_singleRealTransform2(e,t,n,r,s){const i=e[r],a=e[r+s];t[n]=i+a,t[n+1]=0,t[n+2]=i-a,t[n+3]=0}_singleRealTransform4(e,t,n,r,s,i){const a=2*s,o=3*s,l=e[r],u=e[r+s],c=e[r+a],d=e[r+o],p=l+c,h=l-c,m=u+d,f=i*(u-d);t[n]=p+m,t[n+1]=0,t[n+2]=h,t[n+3]=-f,t[n+4]=p-m,t[n+5]=0,t[n+6]=h,t[n+7]=f}}class m{constructor(e){const t=2*(e-1),n=2*(2*e-1),r=2**Math.ceil(Math.log2(n));this.bufferSize=r,this._a=t;const s=new Float64Array(n),i=new Float64Array(r);this._chirpBuffer=new Float64Array(r),this._buffer1=new Float64Array(r),this._buffer2=new Float64Array(r),this._outBuffer1=new Float64Array(r),this._outBuffer2=new Float64Array(r);const a=-2*Math.PI/e,o=Math.cos(a),l=Math.sin(a);for(let t=0;t<n>>1;++t){const n=(t+1-e)**2/2,r=Math.sqrt(o**2+l**2)**n,a=n*Math.atan2(l,o),u=2*t;s[u]=r*Math.cos(a),s[u+1]=r*Math.sin(a),i[u]=s[u],i[u+1]=-s[u+1]}this._slicedChirpBuffer=s.subarray(t,n),this._f=new h(r>>1),this._f.transform(this._chirpBuffer,i)}_transform(e,t,n){const r=this._buffer1,s=this._buffer2,i=this._outBuffer1,a=this._outBuffer2,o=this._chirpBuffer,l=this._slicedChirpBuffer,u=this._a;if(n)for(let e=0;e<l.length;e+=2){const n=e+1,s=t[e>>1];r[e]=s*l[e],r[n]=s*l[n]}else for(let e=0;e<l.length;e+=2){const n=e+1;r[e]=t[e]*l[e]-t[n]*l[n],r[n]=t[e]*l[n]+t[n]*l[e]}this._f.transform(i,r);for(let e=0;e<o.length;e+=2){const t=e+1;s[e]=i[e]*o[e]-i[t]*o[t],s[t]=i[e]*o[t]+i[t]*o[e]}this._f.inverseTransform(a,s);for(let t=0;t<a.length;t+=2){const n=a[t+u],r=a[t+u+1],s=l[t],i=l[t+1];e[t]=n*s-r*i,e[t+1]=n*i+r*s}}transform(e,t){this._transform(e,t,!1)}realTransform(e,t){this._transform(e,t,!0)}}class f{constructor(e){this.fft_length=e,this.isPowerOfTwo=p(e),this.isPowerOfTwo?(this.fft=new h(e),this.outputBufferSize=2*e):(this.fft=new m(e),this.outputBufferSize=this.fft.bufferSize)}realTransform(e,t){this.fft.realTransform(e,t)}transform(e,t){this.fft.transform(e,t)}}function _(e,t){if(t%2==0||t<=0)throw new Error("Window size must be a positive odd number");const n=new e.constructor(e.length),r=new e.constructor(t),s=Math.floor(t/2);for(let t=0;t<e.length;++t){let i=0;for(let n=-s;n<=s;++n){let s=t+n;s<0?s=Math.abs(s):s>=e.length&&(s=2*(e.length-1)-s),r[i++]=e[s]}r.sort(),n[t]=r[s]}return n}function g(e,t){const n=Math.pow(10,t);return Math.round(e*n)/n}function w(e){const t=Math.round(e);return Math.abs(e)%1==.5?t%2==0?t:t-1:t}function y(e){const t=e.length,n=e[0].length,r=[t+1,n+1],s=Array.from({length:r[0]},()=>Array(r[1]).fill(1/0));s[0][0]=0;const i=Array.from({length:r[0]},()=>Array(r[1]).fill(-1));for(let t=1;t<r[1];++t)for(let n=1;n<r[0];++n){const r=s[n-1][t-1],a=s[n-1][t],o=s[n][t-1];let l,u;r<a&&r<o?(l=r,u=0):a<r&&a<o?(l=a,u=1):(l=o,u=2),s[n][t]=e[n-1][t-1]+l,i[n][t]=u}for(let e=0;e<r[1];++e)i[0][e]=2;for(let e=0;e<r[0];++e)i[e][0]=1;let a=t,o=n,l=[],u=[];for(;a>0||o>0;)switch(l.push(a-1),u.push(o-1),i[a][o]){case 0:--a,--o;break;case 1:--a;break;case 2:--o;break;default:throw new Error(`Internal error in dynamic time warping. Unexpected trace[${a}, ${o}]. Please file a bug report.`)}return l.reverse(),u.reverse(),[l,u]}},"./src/utils/tensor.js":(e,t,n)=>{n.r(t),n.d(t,{DataTypeMap:()=>a,Tensor:()=>o,cat:()=>x,full:()=>S,full_like:()=>C,interpolate:()=>u,interpolate_4d:()=>c,layer_norm:()=>g,matmul:()=>d,mean:()=>T,mean_pooling:()=>_,ones:()=>E,ones_like:()=>P,permute:()=>l,quantize_embeddings:()=>z,rand:()=>F,rfft:()=>p,slice:()=>f,stack:()=>v,std_mean:()=>k,topk:()=>h,zeros:()=>A,zeros_like:()=>I});var r=n("./src/utils/maths.js"),s=n("./src/backends/onnx.js"),i=n("./src/ops/registry.js");const a=Object.freeze({float32:Float32Array,float16:"undefined"!=typeof Float16Array?Float16Array:Uint16Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array,uint4:Uint8Array,int4:Int8Array});class o{get dims(){return this.ort_tensor.dims}set dims(e){this.ort_tensor.dims=e}get type(){return this.ort_tensor.type}get data(){return this.ort_tensor.data}get size(){return this.ort_tensor.size}get location(){return this.ort_tensor.location}ort_tensor;constructor(...e){return(0,s.isONNXTensor)(e[0])?this.ort_tensor=e[0]:this.ort_tensor=new s.Tensor(e[0],e[1],e[2]),new Proxy(this,{get:(e,t)=>{if("string"==typeof t){let n=Number(t);if(Number.isInteger(n))return e._getitem(n)}return e[t]},set:(e,t,n)=>e[t]=n})}dispose(){this.ort_tensor.dispose()}*[Symbol.iterator](){const[e,...t]=this.dims;if(t.length>0){const n=t.reduce((e,t)=>e*t);for(let r=0;r<e;++r)yield this._subarray(r,n,t)}else yield*this.data}_getitem(e){const[t,...n]=this.dims;if(e=b(e,t),n.length>0){const t=n.reduce((e,t)=>e*t);return this._subarray(e,t,n)}return new o(this.type,[this.data[e]],n)}indexOf(e){const t=this.data;for(let n=0;n<t.length;++n)if(t[n]==e)return n;return-1}_subarray(e,t,n){const r=e*t,s=(e+1)*t,i="subarray"in this.data?this.data.subarray(r,s):this.data.slice(r,s);return new o(this.type,i,n)}item(){const e=this.data;if(1!==e.length)throw new Error(`a Tensor with ${e.length} elements cannot be converted to Scalar`);return e[0]}tolist(){return function(e,t){const n=e.length;if(n!==t.reduce((e,t)=>e*t))throw Error(`cannot reshape array of size ${n} into shape (${t})`);let r=e;for(let e=t.length-1;e>=0;e--)r=r.reduce((n,r)=>{let s=n[n.length-1];return s.length<t[e]?s.push(r):n.push([r]),n},[[]]);return r[0]}(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){const e=this.data;for(let t=0;t<e.length;++t)e[t]=1/(1+Math.exp(-e[t]));return this}map(e){return this.clone().map_(e)}map_(e){const t=this.data;for(let n=0;n<t.length;++n)t[n]=e(t[n],n,t);return this}mul(e){return this.clone().mul_(e)}mul_(e){const t=this.data;for(let n=0;n<t.length;++n)t[n]*=e;return this}div(e){return this.clone().div_(e)}div_(e){const t=this.data;for(let n=0;n<t.length;++n)t[n]/=e;return this}add(e){return this.clone().add_(e)}add_(e){const t=this.data;for(let n=0;n<t.length;++n)t[n]+=e;return this}sub(e){return this.clone().sub_(e)}sub_(e){const t=this.data;for(let n=0;n<t.length;++n)t[n]-=e;return this}clone(){return new o(this.type,this.data.slice(),this.dims.slice())}slice(...e){const t=[],n=[];for(let r=0;r<this.dims.length;++r){let s=e[r];if(null==s)n.push([0,this.dims[r]]),t.push(this.dims[r]);else if("number"==typeof s)s=b(s,this.dims[r],r),n.push([s,s+1]);else{if(!Array.isArray(s)||2!==s.length)throw new Error(`Invalid slice: ${s}`);{let[e,i]=s;if(e=null===e?0:b(e,this.dims[r],r,!1),i=null===i?this.dims[r]:b(i,this.dims[r],r,!1),e>i)throw new Error(`Invalid slice: ${s}`);const a=[Math.max(e,0),Math.min(i,this.dims[r])];n.push(a),t.push(a[1]-a[0])}}}const r=n.map(([e,t])=>t-e),s=r.reduce((e,t)=>e*t),i=this.data,a=new i.constructor(s),l=this.stride();let u=!0;for(let e=1;e<r.length;++e)if(0!==n[e][0]||n[e][1]!==this.dims[e]){u=!1;break}if(u){const e=n[0][0]*l[0],t=n[0][1]*l[0];if(ArrayBuffer.isView(i))a.set(i.subarray(e,t));else{if(!Array.isArray(i))throw new Error("Unsupported data type for slicing");{const n=i.slice(e,t);for(let e=0;e<n.length;++e)a[e]=n[e]}}}else for(let e=0;e<s;++e){let t=0;for(let s=r.length-1,i=e;s>=0;--s){const e=r[s];t+=(i%e+n[s][0])*l[s],i=Math.floor(i/e)}a[e]=i[t]}return new o(this.type,a,t)}permute(...e){return l(this,e)}transpose(...e){return this.permute(...e)}sum(e=null,t=!1){return this.norm(1,e,t)}norm(e="fro",t=null,n=!1){if("fro"===e)e=2;else if("string"==typeof e)throw Error(`Unsupported norm: ${e}`);const r=this.data,s=(t,n)=>t+n**e;if(null===t){const t=r.reduce(s,0)**(1/e);return new o(this.type,[t],[])}const[i,a,l]=M(s,this,t,n);if(1!==e)for(let t=0;t<a.length;++t)a[t]=a[t]**(1/e);return new o(i,a,l)}normalize_(e=2,t=1){t=b(t,this.dims.length);const n=this.norm(e,t,!0),r=this.data,s=n.data;for(let e=0;e<r.length;++e){let n=0;for(let r=this.dims.length-1,s=e,i=1;r>=0;--r){const e=this.dims[r];r!==t&&(n+=s%e*i,i*=this.dims[r]),s=Math.floor(s/e)}r[e]/=s[n]}return this}normalize(e=2,t=1){return this.clone().normalize_(e,t)}stride(){return function(e){const t=new Array(e.length);for(let n=e.length-1,r=1;n>=0;--n)t[n]=r,r*=e[n];return t}(this.dims)}squeeze(e=null){return new o(this.type,this.data,w(this.dims,e))}squeeze_(e=null){return this.dims=w(this.dims,e),this}unsqueeze(e=null){return new o(this.type,this.data,y(this.dims,e))}unsqueeze_(e=null){return this.dims=y(this.dims,e),this}flatten_(e=0,t=-1){t=(t+this.dims.length)%this.dims.length;let n=this.dims.slice(0,e),r=this.dims.slice(e,t+1),s=this.dims.slice(t+1);return this.dims=[...n,r.reduce((e,t)=>e*t,1),...s],this}flatten(e=0,t=-1){return this.clone().flatten_(e,t)}view(...e){let t=-1;for(let n=0;n<e.length;++n)if(-1===e[n]){if(-1!==t)throw new Error("Only one dimension can be inferred");t=n}const n=this.data;if(-1!==t){const r=e.reduce((e,n,r)=>r!==t?e*n:e,1);e[t]=n.length/r}return new o(this.type,n,e)}neg_(){const e=this.data;for(let t=0;t<e.length;++t)e[t]=-e[t];return this}neg(){return this.clone().neg_()}gt(e){const t=new Uint8Array(this.data.length),n=this.data;for(let r=0;r<n.length;++r)t[r]=n[r]>e?1:0;return new o("bool",t,this.dims)}lt(e){const t=new Uint8Array(this.data.length),n=this.data;for(let r=0;r<n.length;++r)t[r]=n[r]<e?1:0;return new o("bool",t,this.dims)}clamp_(e,t){const n=this.data;for(let r=0;r<n.length;++r)n[r]=Math.min(Math.max(n[r],e),t);return this}clamp(e,t){return this.clone().clamp_(e,t)}round_(){const e=this.data;for(let t=0;t<e.length;++t)e[t]=Math.round(e[t]);return this}round(){return this.clone().round_()}mean(e=null,t=!1){return T(this,e,t)}min(e=null,t=!1){if(null===e){const e=(0,r.min)(this.data)[0];return new o(this.type,[e],[])}const[n,s,i]=M((e,t)=>Math.min(e,t),this,e,t,1/0);return new o(n,s,i)}max(e=null,t=!1){if(null===e){const e=(0,r.max)(this.data)[0];return new o(this.type,[e],[])}const[n,s,i]=M((e,t)=>Math.max(e,t),this,e,t,-1/0);return new o(n,s,i)}argmin(e=null,t=!1){if(null!==e)throw new Error("`dim !== null` not yet implemented.");const n=(0,r.min)(this.data)[1];return new o("int64",[BigInt(n)],[])}argmax(e=null,t=!1){if(null!==e)throw new Error("`dim !== null` not yet implemented.");const n=(0,r.max)(this.data)[1];return new o("int64",[BigInt(n)],[])}to(e){if(this.type===e)return this;if(!a.hasOwnProperty(e))throw new Error(`Unsupported type: ${e}`);let t;const n=["int64","uint64"].includes(this.type),r=["int64","uint64"].includes(e);return n&&!r?t=Number:!n&&r&&(t=BigInt),new o(e,a[e].from(this.data,t),this.dims)}}function l(e,t){const[n,s]=(0,r.permute_data)(e.data,e.dims,t);return new o(e.type,n,s)}function u(e,[t,n],s="bilinear",i=!1){const a=e.dims.at(-3)??1,l=e.dims.at(-2),u=e.dims.at(-1);let c=(0,r.interpolate_data)(e.data,[a,l,u],[t,n],s,i);return new o(e.type,c,[a,t,n])}async function c(e,{size:t=null,mode:n="bilinear"}={}){if(4!==e.dims.length)throw new Error("`interpolate_4d` currently only supports 4D input.");if(!t)throw new Error("`interpolate_4d` requires a `size` argument.");let r,s;if(2===t.length)r=[...e.dims.slice(0,2),...t];else if(3===t.length)r=[e.dims[0],...t];else{if(4!==t.length)throw new Error("`size` must be of length 2, 3, or 4.");r=t}if("nearest"===n)s=await i.TensorOpRegistry.nearest_interpolate_4d;else if("bilinear"===n)s=await i.TensorOpRegistry.bilinear_interpolate_4d;else{if("bicubic"!==n)throw new Error(`Unsupported mode: ${n}`);s=await i.TensorOpRegistry.bicubic_interpolate_4d}const a=new o("int64",new BigInt64Array(r.map(BigInt)),[r.length]);return await s({x:e,s:a})}async function d(e,t){const n=await i.TensorOpRegistry.matmul;return await n({a:e,b:t})}async function p(e,t){const n=await i.TensorOpRegistry.rfft;return await n({x:e,a:t})}async function h(e,t){const n=await i.TensorOpRegistry.top_k;return t=null==t?e.dims.at(-1):Math.min(t,e.dims.at(-1)),await n({x:e,k:new o("int64",[BigInt(t)],[1])})}const m=e=>new o("int64",e,[e.length]);async function f(e,t,n,r,s){const a=await i.TensorOpRegistry.slice;return await a({x:e,s:m(t),e:m(n),a:m(r),t:m(s??new Array(r.length).fill(1))})}function _(e,t){const n=e.data,r=t.data,s=[e.dims[0],e.dims[2]],i=new n.constructor(s[0]*s[1]),[a,l,u]=e.dims;let c=0;for(let e=0;e<a;++e){const t=e*u*l;for(let s=0;s<u;++s){let a=0,o=0;const d=e*l,p=t+s;for(let e=0;e<l;++e){const t=Number(r[d+e]);o+=t,a+=n[p+e*u]*t}const h=a/o;i[c++]=h}}return new o(e.type,i,s)}function g(e,t,{eps:n=1e-5}={}){if(2!==e.dims.length)throw new Error("`layer_norm` currently only supports 2D input.");const[r,s]=e.dims;if(1!==t.length&&t[0]!==s)throw new Error("`normalized_shape` must be a 1D array with shape `[input.dims[1]]`.");const[i,a]=k(e,1,0,!0),l=i.data,u=a.data,c=e.data,d=new c.constructor(c.length);for(let e=0;e<r;++e){const t=e*s;for(let r=0;r<s;++r){const s=t+r;d[s]=(c[s]-u[e])/(l[e]+n)}}return new o(e.type,d,e.dims)}function w(e,t){return e=e.slice(),null===t?e=e.filter(e=>1!==e):"number"==typeof t?1===e[t]&&e.splice(t,1):Array.isArray(t)&&(e=e.filter((e,n)=>1!==e||!t.includes(n))),e}function y(e,t){return t=b(t,e.length+1),(e=e.slice()).splice(t,0,1),e}function b(e,t,n=null,r=!0){if(e<-t||e>=t){if(r)throw new Error(`IndexError: index ${e} is out of bounds for dimension${null===n?"":" "+n} with size ${t}`);return e<-t?0:t}return e<0&&(e=(e%t+t)%t),e}function x(e,t=0){t=b(t,e[0].dims.length);const n=e[0].dims.slice();n[t]=e.reduce((e,n)=>e+n.dims[t],0);const r=n.reduce((e,t)=>e*t,1),s=new e[0].data.constructor(r),i=e[0].type;if(0===t){let t=0;for(const n of e){const e=n.data;s.set(e,t),t+=e.length}}else{let r=0;for(let i=0;i<e.length;++i){const{data:a,dims:o}=e[i];for(let e=0;e<a.length;++e){let i=0;for(let s=o.length-1,a=e,l=1;s>=0;--s){const e=o[s];let u=a%e;s===t&&(u+=r),i+=u*l,l*=n[s],a=Math.floor(a/e)}s[i]=a[e]}r+=o[t]}}return new o(i,s,n)}function v(e,t=0){return x(e.map(e=>e.unsqueeze(t)),t)}function M(e,t,n=null,r=!1,s=null){const i=t.data,a=t.dims;n=b(n,a.length);const o=a.slice();o[n]=1;const l=new i.constructor(i.length/a[n]);null!==s&&l.fill(s);for(let t=0;t<i.length;++t){let r=0;for(let e=a.length-1,s=t,i=1;e>=0;--e){const t=a[e];e!==n&&(r+=s%t*i,i*=o[e]),s=Math.floor(s/t)}l[r]=e(l[r],i[t],t,r)}return r||o.splice(n,1),[t.type,l,o]}function k(e,t=null,n=1,r=!1){const s=e.data,i=e.dims;if(null===t){const t=s.reduce((e,t)=>e+t,0)/s.length,r=Math.sqrt(s.reduce((e,n)=>e+(n-t)**2,0)/(s.length-n)),i=new o(e.type,[t],[]);return[new o(e.type,[r],[]),i]}const a=T(e,t=b(t,i.length),r),l=a.data,[u,c,d]=M((e,t,n,r)=>e+(t-l[r])**2,e,t,r);for(let e=0;e<c.length;++e)c[e]=Math.sqrt(c[e]/(i[t]-n));return[new o(u,c,d),a]}function T(e,t=null,n=!1){const r=e.dims,s=e.data;if(null===t){const t=s.reduce((e,t)=>e+t,0);return new o(e.type,[t/s.length],[])}t=b(t,r.length);const[i,a,l]=M((e,t)=>e+t,e,t,n);if(1!==r[t])for(let e=0;e<a.length;++e)a[e]/=r[t];return new o(i,a,l)}function $(e,t,n,r){const s=e.reduce((e,t)=>e*t,1);return new o(n,new r(s).fill(t),e)}function S(e,t){let n,r;if("number"==typeof t)n="float32",r=Float32Array;else if("bigint"==typeof t)n="int64",r=BigInt64Array;else{if("boolean"!=typeof t)throw new Error("Unsupported data type: "+typeof t);n="bool",r=Uint8Array}return $(e,t,n,r)}function C(e,t){return S(e.dims,t)}function E(e){return $(e,1n,"int64",BigInt64Array)}function P(e){return E(e.dims)}function A(e){return $(e,0n,"int64",BigInt64Array)}function I(e){return A(e.dims)}function F(e){const t=e.reduce((e,t)=>e*t,1);return new o("float32",Float32Array.from({length:t},()=>Math.random()),e)}function z(e,t){if(2!==e.dims.length)throw new Error("The tensor must have 2 dimensions");if(e.dims.at(-1)%8!=0)throw new Error("The last dimension of the tensor must be a multiple of 8");if(!["binary","ubinary"].includes(t))throw new Error("The precision must be either 'binary' or 'ubinary'");const n="binary"===t,r=n?"int8":"uint8",s=n?Int8Array:Uint8Array,i=e.data,a=new s(i.length/8);for(let e=0;e<i.length;++e){const t=i[e]>0?1:0,r=Math.floor(e/8),s=e%8;a[r]|=t<<7-s,n&&0===s&&(a[r]-=128)}return new o(r,a,[e.dims[0],e.dims[1]/8])}},"./src/utils/video.js":(e,t,n)=>{n.r(t),n.d(t,{RawVideo:()=>a,RawVideoFrame:()=>i,load_video:()=>o});var r=n("./src/utils/image.js"),s=n("./src/env.js");class i{constructor(e,t){this.image=e,this.timestamp=t}}class a{constructor(e,t){e.length>0&&e[0]instanceof r.RawImage&&(e=e.map((n,r)=>new i(n,(r+1)/(e.length+1)*t))),this.frames=e,this.duration=t}get width(){return this.frames[0].image.width}get height(){return this.frames[0].image.height}get fps(){return this.frames.length/this.duration}}async function o(e,{num_frames:t=null,fps:n=null}={}){if(!s.apis.IS_BROWSER_ENV)throw new Error("`load_video` is currently only supported in browser environments.");if(null==t&&null==n)throw new Error("Either num_frames or fps must be provided.");const o=[],l=document.createElement("video");if(l.crossOrigin="anonymous",l.muted=!0,"string"==typeof e)l.src=e;else if(e instanceof Blob)l.src=URL.createObjectURL(e);else{if(!(e instanceof HTMLVideoElement))throw new Error("Invalid URL or video element provided.");l.src=e.src}if(await new qd(e=>l.onloadedmetadata=e),l.seekable.start(0)===l.seekable.end(0)){const e=await fetch(l.src),t=await e.blob();l.src=URL.createObjectURL(t),await new qd(e=>l.onloadedmetadata=e)}const u=l.duration;let c,d;null!=t?(c=t,d=1===t?0:u/(t-1)):(d=1/n,c=Math.floor(u/d));let p=[];for(let e=0;e<c;++e)p.push(1===t?u/2:e*d);const h=document.createElement("canvas");h.width=l.videoWidth,h.height=l.videoHeight;const m=h.getContext("2d",{willReadFrequently:!0});for(const e of p){l.currentTime=e,await new qd(e=>{l.onseeked=e}),m.drawImage(l,0,0,h.width,h.height);const t=m.getImageData(0,0,h.width,h.height),n=new r.RawImage(t.data,h.width,h.height,4),s=new i(n,e);o.push(s)}return l.remove(),new a(o,u)}}},Hd={};function Kd(e){var t=Hd[e];if(void 0!==t)return t.exports;var n=Hd[e]={exports:{}};return Wd[e](n,n.exports,Kd),n.exports}Ud=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__,Kd.t=function(e,t){if(1&t&&(e=this(e)),8&t)return e;if("object"==typeof e&&e){if(4&t&&e.__esModule)return e;if(16&t&&"function"==typeof e.then)return e}var n=Object.create(null);Kd.r(n);var r={};Gd=Gd||[null,Ud({}),Ud([]),Ud(Ud)];for(var s=2&t&&e;"object"==typeof s&&!~Gd.indexOf(s);s=Ud(s))Object.getOwnPropertyNames(s).forEach(t=>r[t]=()=>e[t]);return r.default=()=>e,Kd.d(n,r),n},Kd.d=(e,t)=>{for(var n in t)Kd.o(t,n)&&!Kd.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},Kd.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),Kd.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var Qd={};(()=>{Kd.r(Qd),Kd.d(Qd,{ASTFeatureExtractor:()=>d.ASTFeatureExtractor,ASTForAudioClassification:()=>n.ASTForAudioClassification,ASTModel:()=>n.ASTModel,ASTPreTrainedModel:()=>n.ASTPreTrainedModel,AlbertForMaskedLM:()=>n.AlbertForMaskedLM,AlbertForQuestionAnswering:()=>n.AlbertForQuestionAnswering,AlbertForSequenceClassification:()=>n.AlbertForSequenceClassification,AlbertModel:()=>n.AlbertModel,AlbertPreTrainedModel:()=>n.AlbertPreTrainedModel,AlbertTokenizer:()=>r.AlbertTokenizer,ArceeForCausalLM:()=>n.ArceeForCausalLM,ArceeModel:()=>n.ArceeModel,ArceePreTrainedModel:()=>n.ArceePreTrainedModel,AudioClassificationPipeline:()=>t.AudioClassificationPipeline,AutoConfig:()=>s.AutoConfig,AutoFeatureExtractor:()=>p.AutoFeatureExtractor,AutoImageProcessor:()=>f.AutoImageProcessor,AutoModel:()=>n.AutoModel,AutoModelForAudioClassification:()=>n.AutoModelForAudioClassification,AutoModelForAudioFrameClassification:()=>n.AutoModelForAudioFrameClassification,AutoModelForAudioTextToText:()=>n.AutoModelForAudioTextToText,AutoModelForCTC:()=>n.AutoModelForCTC,AutoModelForCausalLM:()=>n.AutoModelForCausalLM,AutoModelForDepthEstimation:()=>n.AutoModelForDepthEstimation,AutoModelForDocumentQuestionAnswering:()=>n.AutoModelForDocumentQuestionAnswering,AutoModelForImageClassification:()=>n.AutoModelForImageClassification,AutoModelForImageFeatureExtraction:()=>n.AutoModelForImageFeatureExtraction,AutoModelForImageMatting:()=>n.AutoModelForImageMatting,AutoModelForImageSegmentation:()=>n.AutoModelForImageSegmentation,AutoModelForImageTextToText:()=>n.AutoModelForImageTextToText,AutoModelForImageToImage:()=>n.AutoModelForImageToImage,AutoModelForMaskGeneration:()=>n.AutoModelForMaskGeneration,AutoModelForMaskedLM:()=>n.AutoModelForMaskedLM,AutoModelForNormalEstimation:()=>n.AutoModelForNormalEstimation,AutoModelForObjectDetection:()=>n.AutoModelForObjectDetection,AutoModelForPoseEstimation:()=>n.AutoModelForPoseEstimation,AutoModelForQuestionAnswering:()=>n.AutoModelForQuestionAnswering,AutoModelForSemanticSegmentation:()=>n.AutoModelForSemanticSegmentation,AutoModelForSeq2SeqLM:()=>n.AutoModelForSeq2SeqLM,AutoModelForSequenceClassification:()=>n.AutoModelForSequenceClassification,AutoModelForSpeechSeq2Seq:()=>n.AutoModelForSpeechSeq2Seq,AutoModelForTextToSpectrogram:()=>n.AutoModelForTextToSpectrogram,AutoModelForTextToWaveform:()=>n.AutoModelForTextToWaveform,AutoModelForTokenClassification:()=>n.AutoModelForTokenClassification,AutoModelForUniversalSegmentation:()=>n.AutoModelForUniversalSegmentation,AutoModelForVision2Seq:()=>n.AutoModelForVision2Seq,AutoModelForXVector:()=>n.AutoModelForXVector,AutoModelForZeroShotObjectDetection:()=>n.AutoModelForZeroShotObjectDetection,AutoProcessor:()=>w.AutoProcessor,AutoTokenizer:()=>r.AutoTokenizer,AutomaticSpeechRecognitionPipeline:()=>t.AutomaticSpeechRecognitionPipeline,BackgroundRemovalPipeline:()=>t.BackgroundRemovalPipeline,BartForConditionalGeneration:()=>n.BartForConditionalGeneration,BartForSequenceClassification:()=>n.BartForSequenceClassification,BartModel:()=>n.BartModel,BartPretrainedModel:()=>n.BartPretrainedModel,BartTokenizer:()=>r.BartTokenizer,BaseModelOutput:()=>n.BaseModelOutput,BaseStreamer:()=>y.BaseStreamer,BeitFeatureExtractor:()=>m.BeitFeatureExtractor,BeitForImageClassification:()=>n.BeitForImageClassification,BeitModel:()=>n.BeitModel,BeitPreTrainedModel:()=>n.BeitPreTrainedModel,BertForMaskedLM:()=>n.BertForMaskedLM,BertForQuestionAnswering:()=>n.BertForQuestionAnswering,BertForSequenceClassification:()=>n.BertForSequenceClassification,BertForTokenClassification:()=>n.BertForTokenClassification,BertModel:()=>n.BertModel,BertPreTrainedModel:()=>n.BertPreTrainedModel,BertTokenizer:()=>r.BertTokenizer,BitImageProcessor:()=>m.BitImageProcessor,BlenderbotForConditionalGeneration:()=>n.BlenderbotForConditionalGeneration,BlenderbotModel:()=>n.BlenderbotModel,BlenderbotPreTrainedModel:()=>n.BlenderbotPreTrainedModel,BlenderbotSmallForConditionalGeneration:()=>n.BlenderbotSmallForConditionalGeneration,BlenderbotSmallModel:()=>n.BlenderbotSmallModel,BlenderbotSmallPreTrainedModel:()=>n.BlenderbotSmallPreTrainedModel,BlenderbotSmallTokenizer:()=>r.BlenderbotSmallTokenizer,BlenderbotTokenizer:()=>r.BlenderbotTokenizer,BloomForCausalLM:()=>n.BloomForCausalLM,BloomModel:()=>n.BloomModel,BloomPreTrainedModel:()=>n.BloomPreTrainedModel,BloomTokenizer:()=>r.BloomTokenizer,CLIPFeatureExtractor:()=>m.CLIPFeatureExtractor,CLIPImageProcessor:()=>m.CLIPImageProcessor,CLIPModel:()=>n.CLIPModel,CLIPPreTrainedModel:()=>n.CLIPPreTrainedModel,CLIPSegForImageSegmentation:()=>n.CLIPSegForImageSegmentation,CLIPSegModel:()=>n.CLIPSegModel,CLIPSegPreTrainedModel:()=>n.CLIPSegPreTrainedModel,CLIPTextModel:()=>n.CLIPTextModel,CLIPTextModelWithProjection:()=>n.CLIPTextModelWithProjection,CLIPTokenizer:()=>r.CLIPTokenizer,CLIPVisionModel:()=>n.CLIPVisionModel,CLIPVisionModelWithProjection:()=>n.CLIPVisionModelWithProjection,CamembertForMaskedLM:()=>n.CamembertForMaskedLM,CamembertForQuestionAnswering:()=>n.CamembertForQuestionAnswering,CamembertForSequenceClassification:()=>n.CamembertForSequenceClassification,CamembertForTokenClassification:()=>n.CamembertForTokenClassification,CamembertModel:()=>n.CamembertModel,CamembertPreTrainedModel:()=>n.CamembertPreTrainedModel,CamembertTokenizer:()=>r.CamembertTokenizer,CausalLMOutput:()=>n.CausalLMOutput,CausalLMOutputWithPast:()=>n.CausalLMOutputWithPast,ChineseCLIPFeatureExtractor:()=>m.ChineseCLIPFeatureExtractor,ChineseCLIPModel:()=>n.ChineseCLIPModel,ChineseCLIPPreTrainedModel:()=>n.ChineseCLIPPreTrainedModel,ClapAudioModelWithProjection:()=>n.ClapAudioModelWithProjection,ClapFeatureExtractor:()=>d.ClapFeatureExtractor,ClapModel:()=>n.ClapModel,ClapPreTrainedModel:()=>n.ClapPreTrainedModel,ClapTextModelWithProjection:()=>n.ClapTextModelWithProjection,ClassifierFreeGuidanceLogitsProcessor:()=>x.ClassifierFreeGuidanceLogitsProcessor,CodeGenForCausalLM:()=>n.CodeGenForCausalLM,CodeGenModel:()=>n.CodeGenModel,CodeGenPreTrainedModel:()=>n.CodeGenPreTrainedModel,CodeGenTokenizer:()=>r.CodeGenTokenizer,CodeLlamaTokenizer:()=>r.CodeLlamaTokenizer,CohereForCausalLM:()=>n.CohereForCausalLM,CohereModel:()=>n.CohereModel,CoherePreTrainedModel:()=>n.CoherePreTrainedModel,CohereTokenizer:()=>r.CohereTokenizer,ConvBertForMaskedLM:()=>n.ConvBertForMaskedLM,ConvBertForQuestionAnswering:()=>n.ConvBertForQuestionAnswering,ConvBertForSequenceClassification:()=>n.ConvBertForSequenceClassification,ConvBertForTokenClassification:()=>n.ConvBertForTokenClassification,ConvBertModel:()=>n.ConvBertModel,ConvBertPreTrainedModel:()=>n.ConvBertPreTrainedModel,ConvBertTokenizer:()=>r.ConvBertTokenizer,ConvNextFeatureExtractor:()=>m.ConvNextFeatureExtractor,ConvNextForImageClassification:()=>n.ConvNextForImageClassification,ConvNextImageProcessor:()=>m.ConvNextImageProcessor,ConvNextModel:()=>n.ConvNextModel,ConvNextPreTrainedModel:()=>n.ConvNextPreTrainedModel,ConvNextV2ForImageClassification:()=>n.ConvNextV2ForImageClassification,ConvNextV2Model:()=>n.ConvNextV2Model,ConvNextV2PreTrainedModel:()=>n.ConvNextV2PreTrainedModel,DFineForObjectDetection:()=>n.DFineForObjectDetection,DFineModel:()=>n.DFineModel,DFinePreTrainedModel:()=>n.DFinePreTrainedModel,DINOv3ConvNextModel:()=>n.DINOv3ConvNextModel,DINOv3ConvNextPreTrainedModel:()=>n.DINOv3ConvNextPreTrainedModel,DINOv3ViTImageProcessor:()=>m.DINOv3ViTImageProcessor,DINOv3ViTModel:()=>n.DINOv3ViTModel,DINOv3ViTPreTrainedModel:()=>n.DINOv3ViTPreTrainedModel,DPTFeatureExtractor:()=>m.DPTFeatureExtractor,DPTForDepthEstimation:()=>n.DPTForDepthEstimation,DPTImageProcessor:()=>m.DPTImageProcessor,DPTModel:()=>n.DPTModel,DPTPreTrainedModel:()=>n.DPTPreTrainedModel,DacDecoderModel:()=>n.DacDecoderModel,DacDecoderOutput:()=>n.DacDecoderOutput,DacEncoderModel:()=>n.DacEncoderModel,DacEncoderOutput:()=>n.DacEncoderOutput,DacFeatureExtractor:()=>d.DacFeatureExtractor,DacModel:()=>n.DacModel,DacPreTrainedModel:()=>n.DacPreTrainedModel,DataTypeMap:()=>l.DataTypeMap,DebertaForMaskedLM:()=>n.DebertaForMaskedLM,DebertaForQuestionAnswering:()=>n.DebertaForQuestionAnswering,DebertaForSequenceClassification:()=>n.DebertaForSequenceClassification,DebertaForTokenClassification:()=>n.DebertaForTokenClassification,DebertaModel:()=>n.DebertaModel,DebertaPreTrainedModel:()=>n.DebertaPreTrainedModel,DebertaTokenizer:()=>r.DebertaTokenizer,DebertaV2ForMaskedLM:()=>n.DebertaV2ForMaskedLM,DebertaV2ForQuestionAnswering:()=>n.DebertaV2ForQuestionAnswering,DebertaV2ForSequenceClassification:()=>n.DebertaV2ForSequenceClassification,DebertaV2ForTokenClassification:()=>n.DebertaV2ForTokenClassification,DebertaV2Model:()=>n.DebertaV2Model,DebertaV2PreTrainedModel:()=>n.DebertaV2PreTrainedModel,DebertaV2Tokenizer:()=>r.DebertaV2Tokenizer,DecisionTransformerModel:()=>n.DecisionTransformerModel,DecisionTransformerPreTrainedModel:()=>n.DecisionTransformerPreTrainedModel,DeiTFeatureExtractor:()=>m.DeiTFeatureExtractor,DeiTForImageClassification:()=>n.DeiTForImageClassification,DeiTImageProcessor:()=>m.DeiTImageProcessor,DeiTModel:()=>n.DeiTModel,DeiTPreTrainedModel:()=>n.DeiTPreTrainedModel,DepthAnythingForDepthEstimation:()=>n.DepthAnythingForDepthEstimation,DepthAnythingPreTrainedModel:()=>n.DepthAnythingPreTrainedModel,DepthEstimationPipeline:()=>t.DepthEstimationPipeline,DepthProForDepthEstimation:()=>n.DepthProForDepthEstimation,DepthProPreTrainedModel:()=>n.DepthProPreTrainedModel,DetrFeatureExtractor:()=>m.DetrFeatureExtractor,DetrForObjectDetection:()=>n.DetrForObjectDetection,DetrForSegmentation:()=>n.DetrForSegmentation,DetrImageProcessor:()=>m.DetrImageProcessor,DetrModel:()=>n.DetrModel,DetrObjectDetectionOutput:()=>n.DetrObjectDetectionOutput,DetrPreTrainedModel:()=>n.DetrPreTrainedModel,DetrSegmentationOutput:()=>n.DetrSegmentationOutput,Dinov2ForImageClassification:()=>n.Dinov2ForImageClassification,Dinov2Model:()=>n.Dinov2Model,Dinov2PreTrainedModel:()=>n.Dinov2PreTrainedModel,Dinov2WithRegistersForImageClassification:()=>n.Dinov2WithRegistersForImageClassification,Dinov2WithRegistersModel:()=>n.Dinov2WithRegistersModel,Dinov2WithRegistersPreTrainedModel:()=>n.Dinov2WithRegistersPreTrainedModel,DistilBertForMaskedLM:()=>n.DistilBertForMaskedLM,DistilBertForQuestionAnswering:()=>n.DistilBertForQuestionAnswering,DistilBertForSequenceClassification:()=>n.DistilBertForSequenceClassification,DistilBertForTokenClassification:()=>n.DistilBertForTokenClassification,DistilBertModel:()=>n.DistilBertModel,DistilBertPreTrainedModel:()=>n.DistilBertPreTrainedModel,DistilBertTokenizer:()=>r.DistilBertTokenizer,DocumentQuestionAnsweringPipeline:()=>t.DocumentQuestionAnsweringPipeline,DonutFeatureExtractor:()=>m.DonutFeatureExtractor,DonutImageProcessor:()=>m.DonutImageProcessor,DonutSwinModel:()=>n.DonutSwinModel,DonutSwinPreTrainedModel:()=>n.DonutSwinPreTrainedModel,EfficientNetForImageClassification:()=>n.EfficientNetForImageClassification,EfficientNetImageProcessor:()=>m.EfficientNetImageProcessor,EfficientNetModel:()=>n.EfficientNetModel,EfficientNetPreTrainedModel:()=>n.EfficientNetPreTrainedModel,ElectraForMaskedLM:()=>n.ElectraForMaskedLM,ElectraForQuestionAnswering:()=>n.ElectraForQuestionAnswering,ElectraForSequenceClassification:()=>n.ElectraForSequenceClassification,ElectraForTokenClassification:()=>n.ElectraForTokenClassification,ElectraModel:()=>n.ElectraModel,ElectraPreTrainedModel:()=>n.ElectraPreTrainedModel,ElectraTokenizer:()=>r.ElectraTokenizer,EncodecFeatureExtractor:()=>d.EncodecFeatureExtractor,EosTokenCriteria:()=>b.EosTokenCriteria,Ernie4_5_ForCausalLM:()=>n.Ernie4_5_ForCausalLM,Ernie4_5_Model:()=>n.Ernie4_5_Model,Ernie4_5_PretrainedModel:()=>n.Ernie4_5_PretrainedModel,Ernie4_5_Tokenizer:()=>r.Ernie4_5_Tokenizer,EsmForMaskedLM:()=>n.EsmForMaskedLM,EsmForSequenceClassification:()=>n.EsmForSequenceClassification,EsmForTokenClassification:()=>n.EsmForTokenClassification,EsmModel:()=>n.EsmModel,EsmPreTrainedModel:()=>n.EsmPreTrainedModel,EsmTokenizer:()=>r.EsmTokenizer,ExaoneForCausalLM:()=>n.ExaoneForCausalLM,ExaoneModel:()=>n.ExaoneModel,ExaonePreTrainedModel:()=>n.ExaonePreTrainedModel,FFT:()=>u.FFT,FalconForCausalLM:()=>n.FalconForCausalLM,FalconModel:()=>n.FalconModel,FalconPreTrainedModel:()=>n.FalconPreTrainedModel,FalconTokenizer:()=>r.FalconTokenizer,FastViTForImageClassification:()=>n.FastViTForImageClassification,FastViTModel:()=>n.FastViTModel,FastViTPreTrainedModel:()=>n.FastViTPreTrainedModel,FeatureExtractionPipeline:()=>t.FeatureExtractionPipeline,FeatureExtractor:()=>c.FeatureExtractor,FillMaskPipeline:()=>t.FillMaskPipeline,Florence2ForConditionalGeneration:()=>n.Florence2ForConditionalGeneration,Florence2PreTrainedModel:()=>n.Florence2PreTrainedModel,Florence2Processor:()=>g.Florence2Processor,ForcedBOSTokenLogitsProcessor:()=>x.ForcedBOSTokenLogitsProcessor,ForcedEOSTokenLogitsProcessor:()=>x.ForcedEOSTokenLogitsProcessor,GLPNFeatureExtractor:()=>m.GLPNFeatureExtractor,GLPNForDepthEstimation:()=>n.GLPNForDepthEstimation,GLPNModel:()=>n.GLPNModel,GLPNPreTrainedModel:()=>n.GLPNPreTrainedModel,GPT2LMHeadModel:()=>n.GPT2LMHeadModel,GPT2Model:()=>n.GPT2Model,GPT2PreTrainedModel:()=>n.GPT2PreTrainedModel,GPT2Tokenizer:()=>r.GPT2Tokenizer,GPTBigCodeForCausalLM:()=>n.GPTBigCodeForCausalLM,GPTBigCodeModel:()=>n.GPTBigCodeModel,GPTBigCodePreTrainedModel:()=>n.GPTBigCodePreTrainedModel,GPTJForCausalLM:()=>n.GPTJForCausalLM,GPTJModel:()=>n.GPTJModel,GPTJPreTrainedModel:()=>n.GPTJPreTrainedModel,GPTNeoForCausalLM:()=>n.GPTNeoForCausalLM,GPTNeoModel:()=>n.GPTNeoModel,GPTNeoPreTrainedModel:()=>n.GPTNeoPreTrainedModel,GPTNeoXForCausalLM:()=>n.GPTNeoXForCausalLM,GPTNeoXModel:()=>n.GPTNeoXModel,GPTNeoXPreTrainedModel:()=>n.GPTNeoXPreTrainedModel,GPTNeoXTokenizer:()=>r.GPTNeoXTokenizer,Gemma2ForCausalLM:()=>n.Gemma2ForCausalLM,Gemma2Model:()=>n.Gemma2Model,Gemma2PreTrainedModel:()=>n.Gemma2PreTrainedModel,Gemma3ForCausalLM:()=>n.Gemma3ForCausalLM,Gemma3Model:()=>n.Gemma3Model,Gemma3PreTrainedModel:()=>n.Gemma3PreTrainedModel,Gemma3nAudioFeatureExtractor:()=>d.Gemma3nAudioFeatureExtractor,Gemma3nForConditionalGeneration:()=>n.Gemma3nForConditionalGeneration,Gemma3nPreTrainedModel:()=>n.Gemma3nPreTrainedModel,Gemma3nProcessor:()=>g.Gemma3nProcessor,GemmaForCausalLM:()=>n.GemmaForCausalLM,GemmaModel:()=>n.GemmaModel,GemmaPreTrainedModel:()=>n.GemmaPreTrainedModel,GemmaTokenizer:()=>r.GemmaTokenizer,GlmForCausalLM:()=>n.GlmForCausalLM,GlmModel:()=>n.GlmModel,GlmPreTrainedModel:()=>n.GlmPreTrainedModel,GraniteForCausalLM:()=>n.GraniteForCausalLM,GraniteModel:()=>n.GraniteModel,GraniteMoeHybridForCausalLM:()=>n.GraniteMoeHybridForCausalLM,GraniteMoeHybridModel:()=>n.GraniteMoeHybridModel,GraniteMoeHybridPreTrainedModel:()=>n.GraniteMoeHybridPreTrainedModel,GranitePreTrainedModel:()=>n.GranitePreTrainedModel,Grok1Tokenizer:()=>r.Grok1Tokenizer,GroundingDinoForObjectDetection:()=>n.GroundingDinoForObjectDetection,GroundingDinoImageProcessor:()=>m.GroundingDinoImageProcessor,GroundingDinoPreTrainedModel:()=>n.GroundingDinoPreTrainedModel,GroundingDinoProcessor:()=>g.GroundingDinoProcessor,GroupViTModel:()=>n.GroupViTModel,GroupViTPreTrainedModel:()=>n.GroupViTPreTrainedModel,HeliumForCausalLM:()=>n.HeliumForCausalLM,HeliumModel:()=>n.HeliumModel,HeliumPreTrainedModel:()=>n.HeliumPreTrainedModel,HerbertTokenizer:()=>r.HerbertTokenizer,HieraForImageClassification:()=>n.HieraForImageClassification,HieraModel:()=>n.HieraModel,HieraPreTrainedModel:()=>n.HieraPreTrainedModel,HubertForCTC:()=>n.HubertForCTC,HubertForSequenceClassification:()=>n.HubertForSequenceClassification,HubertModel:()=>n.HubertModel,HubertPreTrainedModel:()=>n.HubertPreTrainedModel,IJepaForImageClassification:()=>n.IJepaForImageClassification,IJepaModel:()=>n.IJepaModel,IJepaPreTrainedModel:()=>n.IJepaPreTrainedModel,Idefics3ForConditionalGeneration:()=>n.Idefics3ForConditionalGeneration,Idefics3ImageProcessor:()=>m.Idefics3ImageProcessor,Idefics3PreTrainedModel:()=>n.Idefics3PreTrainedModel,Idefics3Processor:()=>g.Idefics3Processor,ImageClassificationPipeline:()=>t.ImageClassificationPipeline,ImageFeatureExtractionPipeline:()=>t.ImageFeatureExtractionPipeline,ImageFeatureExtractor:()=>d.ImageFeatureExtractor,ImageMattingOutput:()=>n.ImageMattingOutput,ImageProcessor:()=>h.ImageProcessor,ImageSegmentationPipeline:()=>t.ImageSegmentationPipeline,ImageToImagePipeline:()=>t.ImageToImagePipeline,ImageToTextPipeline:()=>t.ImageToTextPipeline,InterruptableStoppingCriteria:()=>b.InterruptableStoppingCriteria,JAISLMHeadModel:()=>n.JAISLMHeadModel,JAISModel:()=>n.JAISModel,JAISPreTrainedModel:()=>n.JAISPreTrainedModel,JinaCLIPImageProcessor:()=>m.JinaCLIPImageProcessor,JinaCLIPModel:()=>n.JinaCLIPModel,JinaCLIPPreTrainedModel:()=>n.JinaCLIPPreTrainedModel,JinaCLIPProcessor:()=>g.JinaCLIPProcessor,JinaCLIPTextModel:()=>n.JinaCLIPTextModel,JinaCLIPVisionModel:()=>n.JinaCLIPVisionModel,Lfm2ForCausalLM:()=>n.Lfm2ForCausalLM,Lfm2Model:()=>n.Lfm2Model,Lfm2PreTrainedModel:()=>n.Lfm2PreTrainedModel,LiteWhisperForConditionalGeneration:()=>n.LiteWhisperForConditionalGeneration,Llama4ForCausalLM:()=>n.Llama4ForCausalLM,Llama4PreTrainedModel:()=>n.Llama4PreTrainedModel,LlamaForCausalLM:()=>n.LlamaForCausalLM,LlamaModel:()=>n.LlamaModel,LlamaPreTrainedModel:()=>n.LlamaPreTrainedModel,LlamaTokenizer:()=>r.LlamaTokenizer,LlavaForConditionalGeneration:()=>n.LlavaForConditionalGeneration,LlavaOnevisionForConditionalGeneration:()=>n.LlavaOnevisionForConditionalGeneration,LlavaOnevisionImageProcessor:()=>m.LlavaOnevisionImageProcessor,LlavaPreTrainedModel:()=>n.LlavaPreTrainedModel,LlavaProcessor:()=>g.LlavaProcessor,LlavaQwen2ForCausalLM:()=>n.LlavaQwen2ForCausalLM,LogitsProcessor:()=>x.LogitsProcessor,LogitsProcessorList:()=>x.LogitsProcessorList,LogitsWarper:()=>x.LogitsWarper,LongT5ForConditionalGeneration:()=>n.LongT5ForConditionalGeneration,LongT5Model:()=>n.LongT5Model,LongT5PreTrainedModel:()=>n.LongT5PreTrainedModel,M2M100ForConditionalGeneration:()=>n.M2M100ForConditionalGeneration,M2M100Model:()=>n.M2M100Model,M2M100PreTrainedModel:()=>n.M2M100PreTrainedModel,M2M100Tokenizer:()=>r.M2M100Tokenizer,MBart50Tokenizer:()=>r.MBart50Tokenizer,MBartForCausalLM:()=>n.MBartForCausalLM,MBartForConditionalGeneration:()=>n.MBartForConditionalGeneration,MBartForSequenceClassification:()=>n.MBartForSequenceClassification,MBartModel:()=>n.MBartModel,MBartPreTrainedModel:()=>n.MBartPreTrainedModel,MBartTokenizer:()=>r.MBartTokenizer,MPNetForMaskedLM:()=>n.MPNetForMaskedLM,MPNetForQuestionAnswering:()=>n.MPNetForQuestionAnswering,MPNetForSequenceClassification:()=>n.MPNetForSequenceClassification,MPNetForTokenClassification:()=>n.MPNetForTokenClassification,MPNetModel:()=>n.MPNetModel,MPNetPreTrainedModel:()=>n.MPNetPreTrainedModel,MPNetTokenizer:()=>r.MPNetTokenizer,MT5ForConditionalGeneration:()=>n.MT5ForConditionalGeneration,MT5Model:()=>n.MT5Model,MT5PreTrainedModel:()=>n.MT5PreTrainedModel,MarianMTModel:()=>n.MarianMTModel,MarianModel:()=>n.MarianModel,MarianPreTrainedModel:()=>n.MarianPreTrainedModel,MarianTokenizer:()=>r.MarianTokenizer,Mask2FormerImageProcessor:()=>m.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>m.MaskFormerFeatureExtractor,MaskFormerForInstanceSegmentation:()=>n.MaskFormerForInstanceSegmentation,MaskFormerImageProcessor:()=>m.MaskFormerImageProcessor,MaskFormerModel:()=>n.MaskFormerModel,MaskFormerPreTrainedModel:()=>n.MaskFormerPreTrainedModel,MaskedLMOutput:()=>n.MaskedLMOutput,MaxLengthCriteria:()=>b.MaxLengthCriteria,Metric3DForDepthEstimation:()=>n.Metric3DForDepthEstimation,Metric3DPreTrainedModel:()=>n.Metric3DPreTrainedModel,Metric3Dv2ForDepthEstimation:()=>n.Metric3Dv2ForDepthEstimation,Metric3Dv2PreTrainedModel:()=>n.Metric3Dv2PreTrainedModel,MgpstrForSceneTextRecognition:()=>n.MgpstrForSceneTextRecognition,MgpstrModelOutput:()=>n.MgpstrModelOutput,MgpstrPreTrainedModel:()=>n.MgpstrPreTrainedModel,MgpstrProcessor:()=>g.MgpstrProcessor,MgpstrTokenizer:()=>r.MgpstrTokenizer,MimiDecoderModel:()=>n.MimiDecoderModel,MimiDecoderOutput:()=>n.MimiDecoderOutput,MimiEncoderModel:()=>n.MimiEncoderModel,MimiEncoderOutput:()=>n.MimiEncoderOutput,MimiModel:()=>n.MimiModel,MimiPreTrainedModel:()=>n.MimiPreTrainedModel,MinLengthLogitsProcessor:()=>x.MinLengthLogitsProcessor,MinNewTokensLengthLogitsProcessor:()=>x.MinNewTokensLengthLogitsProcessor,MistralForCausalLM:()=>n.MistralForCausalLM,MistralModel:()=>n.MistralModel,MistralPreTrainedModel:()=>n.MistralPreTrainedModel,MobileBertForMaskedLM:()=>n.MobileBertForMaskedLM,MobileBertForQuestionAnswering:()=>n.MobileBertForQuestionAnswering,MobileBertForSequenceClassification:()=>n.MobileBertForSequenceClassification,MobileBertModel:()=>n.MobileBertModel,MobileBertPreTrainedModel:()=>n.MobileBertPreTrainedModel,MobileBertTokenizer:()=>r.MobileBertTokenizer,MobileLLMForCausalLM:()=>n.MobileLLMForCausalLM,MobileLLMModel:()=>n.MobileLLMModel,MobileLLMPreTrainedModel:()=>n.MobileLLMPreTrainedModel,MobileNetV1FeatureExtractor:()=>m.MobileNetV1FeatureExtractor,MobileNetV1ForImageClassification:()=>n.MobileNetV1ForImageClassification,MobileNetV1ForSemanticSegmentation:()=>n.MobileNetV1ForSemanticSegmentation,MobileNetV1ImageProcessor:()=>m.MobileNetV1ImageProcessor,MobileNetV1Model:()=>n.MobileNetV1Model,MobileNetV1PreTrainedModel:()=>n.MobileNetV1PreTrainedModel,MobileNetV2FeatureExtractor:()=>m.MobileNetV2FeatureExtractor,MobileNetV2ForImageClassification:()=>n.MobileNetV2ForImageClassification,MobileNetV2ForSemanticSegmentation:()=>n.MobileNetV2ForSemanticSegmentation,MobileNetV2ImageProcessor:()=>m.MobileNetV2ImageProcessor,MobileNetV2Model:()=>n.MobileNetV2Model,MobileNetV2PreTrainedModel:()=>n.MobileNetV2PreTrainedModel,MobileNetV3FeatureExtractor:()=>m.MobileNetV3FeatureExtractor,MobileNetV3ForImageClassification:()=>n.MobileNetV3ForImageClassification,MobileNetV3ForSemanticSegmentation:()=>n.MobileNetV3ForSemanticSegmentation,MobileNetV3ImageProcessor:()=>m.MobileNetV3ImageProcessor,MobileNetV3Model:()=>n.MobileNetV3Model,MobileNetV3PreTrainedModel:()=>n.MobileNetV3PreTrainedModel,MobileNetV4FeatureExtractor:()=>m.MobileNetV4FeatureExtractor,MobileNetV4ForImageClassification:()=>n.MobileNetV4ForImageClassification,MobileNetV4ForSemanticSegmentation:()=>n.MobileNetV4ForSemanticSegmentation,MobileNetV4ImageProcessor:()=>m.MobileNetV4ImageProcessor,MobileNetV4Model:()=>n.MobileNetV4Model,MobileNetV4PreTrainedModel:()=>n.MobileNetV4PreTrainedModel,MobileViTFeatureExtractor:()=>m.MobileViTFeatureExtractor,MobileViTForImageClassification:()=>n.MobileViTForImageClassification,MobileViTImageProcessor:()=>m.MobileViTImageProcessor,MobileViTModel:()=>n.MobileViTModel,MobileViTPreTrainedModel:()=>n.MobileViTPreTrainedModel,MobileViTV2ForImageClassification:()=>n.MobileViTV2ForImageClassification,MobileViTV2Model:()=>n.MobileViTV2Model,MobileViTV2PreTrainedModel:()=>n.MobileViTV2PreTrainedModel,ModelOutput:()=>n.ModelOutput,ModernBertDecoderForCausalLM:()=>n.ModernBertDecoderForCausalLM,ModernBertDecoderModel:()=>n.ModernBertDecoderModel,ModernBertDecoderPreTrainedModel:()=>n.ModernBertDecoderPreTrainedModel,ModernBertForMaskedLM:()=>n.ModernBertForMaskedLM,ModernBertForSequenceClassification:()=>n.ModernBertForSequenceClassification,ModernBertForTokenClassification:()=>n.ModernBertForTokenClassification,ModernBertModel:()=>n.ModernBertModel,ModernBertPreTrainedModel:()=>n.ModernBertPreTrainedModel,Moondream1ForConditionalGeneration:()=>n.Moondream1ForConditionalGeneration,MoonshineFeatureExtractor:()=>d.MoonshineFeatureExtractor,MoonshineForConditionalGeneration:()=>n.MoonshineForConditionalGeneration,MoonshineModel:()=>n.MoonshineModel,MoonshinePreTrainedModel:()=>n.MoonshinePreTrainedModel,MoonshineProcessor:()=>g.MoonshineProcessor,MptForCausalLM:()=>n.MptForCausalLM,MptModel:()=>n.MptModel,MptPreTrainedModel:()=>n.MptPreTrainedModel,MultiModalityCausalLM:()=>n.MultiModalityCausalLM,MultiModalityPreTrainedModel:()=>n.MultiModalityPreTrainedModel,MusicgenForCausalLM:()=>n.MusicgenForCausalLM,MusicgenForConditionalGeneration:()=>n.MusicgenForConditionalGeneration,MusicgenModel:()=>n.MusicgenModel,MusicgenPreTrainedModel:()=>n.MusicgenPreTrainedModel,NanoChatForCausalLM:()=>n.NanoChatForCausalLM,NanoChatModel:()=>n.NanoChatModel,NanoChatPreTrainedModel:()=>n.NanoChatPreTrainedModel,NeoBertForMaskedLM:()=>n.NeoBertForMaskedLM,NeoBertForQuestionAnswering:()=>n.NeoBertForQuestionAnswering,NeoBertForSequenceClassification:()=>n.NeoBertForSequenceClassification,NeoBertForTokenClassification:()=>n.NeoBertForTokenClassification,NeoBertModel:()=>n.NeoBertModel,NeoBertPreTrainedModel:()=>n.NeoBertPreTrainedModel,NllbTokenizer:()=>r.NllbTokenizer,NoBadWordsLogitsProcessor:()=>x.NoBadWordsLogitsProcessor,NoRepeatNGramLogitsProcessor:()=>x.NoRepeatNGramLogitsProcessor,NomicBertModel:()=>n.NomicBertModel,NomicBertPreTrainedModel:()=>n.NomicBertPreTrainedModel,NougatImageProcessor:()=>m.NougatImageProcessor,NougatTokenizer:()=>r.NougatTokenizer,OPTForCausalLM:()=>n.OPTForCausalLM,OPTModel:()=>n.OPTModel,OPTPreTrainedModel:()=>n.OPTPreTrainedModel,ObjectDetectionPipeline:()=>t.ObjectDetectionPipeline,Olmo2ForCausalLM:()=>n.Olmo2ForCausalLM,Olmo2Model:()=>n.Olmo2Model,Olmo2PreTrainedModel:()=>n.Olmo2PreTrainedModel,OlmoForCausalLM:()=>n.OlmoForCausalLM,OlmoModel:()=>n.OlmoModel,OlmoPreTrainedModel:()=>n.OlmoPreTrainedModel,OpenELMForCausalLM:()=>n.OpenELMForCausalLM,OpenELMModel:()=>n.OpenELMModel,OpenELMPreTrainedModel:()=>n.OpenELMPreTrainedModel,OwlViTFeatureExtractor:()=>m.OwlViTFeatureExtractor,OwlViTForObjectDetection:()=>n.OwlViTForObjectDetection,OwlViTImageProcessor:()=>m.OwlViTImageProcessor,OwlViTModel:()=>n.OwlViTModel,OwlViTPreTrainedModel:()=>n.OwlViTPreTrainedModel,OwlViTProcessor:()=>g.OwlViTProcessor,Owlv2ForObjectDetection:()=>n.Owlv2ForObjectDetection,Owlv2ImageProcessor:()=>m.Owlv2ImageProcessor,Owlv2Model:()=>n.Owlv2Model,Owlv2PreTrainedModel:()=>n.Owlv2PreTrainedModel,PaliGemmaForConditionalGeneration:()=>n.PaliGemmaForConditionalGeneration,PaliGemmaPreTrainedModel:()=>n.PaliGemmaPreTrainedModel,PaliGemmaProcessor:()=>g.PaliGemmaProcessor,ParakeetFeatureExtractor:()=>d.ParakeetFeatureExtractor,ParakeetForCTC:()=>n.ParakeetForCTC,ParakeetPreTrainedModel:()=>n.ParakeetPreTrainedModel,PatchTSMixerForPrediction:()=>n.PatchTSMixerForPrediction,PatchTSMixerModel:()=>n.PatchTSMixerModel,PatchTSMixerPreTrainedModel:()=>n.PatchTSMixerPreTrainedModel,PatchTSTForPrediction:()=>n.PatchTSTForPrediction,PatchTSTModel:()=>n.PatchTSTModel,PatchTSTPreTrainedModel:()=>n.PatchTSTPreTrainedModel,Phi3ForCausalLM:()=>n.Phi3ForCausalLM,Phi3Model:()=>n.Phi3Model,Phi3PreTrainedModel:()=>n.Phi3PreTrainedModel,Phi3VForCausalLM:()=>n.Phi3VForCausalLM,Phi3VImageProcessor:()=>m.Phi3VImageProcessor,Phi3VPreTrainedModel:()=>n.Phi3VPreTrainedModel,Phi3VProcessor:()=>g.Phi3VProcessor,PhiForCausalLM:()=>n.PhiForCausalLM,PhiModel:()=>n.PhiModel,PhiPreTrainedModel:()=>n.PhiPreTrainedModel,Pipeline:()=>t.Pipeline,PreTrainedModel:()=>n.PreTrainedModel,PreTrainedTokenizer:()=>r.PreTrainedTokenizer,PretrainedConfig:()=>s.PretrainedConfig,PretrainedMixin:()=>n.PretrainedMixin,Processor:()=>_.Processor,PvtForImageClassification:()=>n.PvtForImageClassification,PvtImageProcessor:()=>m.PvtImageProcessor,PvtModel:()=>n.PvtModel,PvtPreTrainedModel:()=>n.PvtPreTrainedModel,PyAnnoteFeatureExtractor:()=>d.PyAnnoteFeatureExtractor,PyAnnoteForAudioFrameClassification:()=>n.PyAnnoteForAudioFrameClassification,PyAnnoteModel:()=>n.PyAnnoteModel,PyAnnotePreTrainedModel:()=>n.PyAnnotePreTrainedModel,PyAnnoteProcessor:()=>g.PyAnnoteProcessor,QuestionAnsweringModelOutput:()=>n.QuestionAnsweringModelOutput,QuestionAnsweringPipeline:()=>t.QuestionAnsweringPipeline,Qwen2ForCausalLM:()=>n.Qwen2ForCausalLM,Qwen2Model:()=>n.Qwen2Model,Qwen2PreTrainedModel:()=>n.Qwen2PreTrainedModel,Qwen2Tokenizer:()=>r.Qwen2Tokenizer,Qwen2VLForConditionalGeneration:()=>n.Qwen2VLForConditionalGeneration,Qwen2VLImageProcessor:()=>m.Qwen2VLImageProcessor,Qwen2VLPreTrainedModel:()=>n.Qwen2VLPreTrainedModel,Qwen2VLProcessor:()=>g.Qwen2VLProcessor,Qwen3ForCausalLM:()=>n.Qwen3ForCausalLM,Qwen3Model:()=>n.Qwen3Model,Qwen3PreTrainedModel:()=>n.Qwen3PreTrainedModel,RFDetrForObjectDetection:()=>n.RFDetrForObjectDetection,RFDetrModel:()=>n.RFDetrModel,RFDetrObjectDetectionOutput:()=>n.RFDetrObjectDetectionOutput,RFDetrPreTrainedModel:()=>n.RFDetrPreTrainedModel,RTDetrForObjectDetection:()=>n.RTDetrForObjectDetection,RTDetrImageProcessor:()=>m.RTDetrImageProcessor,RTDetrModel:()=>n.RTDetrModel,RTDetrObjectDetectionOutput:()=>n.RTDetrObjectDetectionOutput,RTDetrPreTrainedModel:()=>n.RTDetrPreTrainedModel,RTDetrV2ForObjectDetection:()=>n.RTDetrV2ForObjectDetection,RTDetrV2Model:()=>n.RTDetrV2Model,RTDetrV2ObjectDetectionOutput:()=>n.RTDetrV2ObjectDetectionOutput,RTDetrV2PreTrainedModel:()=>n.RTDetrV2PreTrainedModel,RawAudio:()=>i.RawAudio,RawImage:()=>a.RawImage,RawVideo:()=>o.RawVideo,RawVideoFrame:()=>o.RawVideoFrame,RepetitionPenaltyLogitsProcessor:()=>x.RepetitionPenaltyLogitsProcessor,ResNetForImageClassification:()=>n.ResNetForImageClassification,ResNetModel:()=>n.ResNetModel,ResNetPreTrainedModel:()=>n.ResNetPreTrainedModel,RoFormerForMaskedLM:()=>n.RoFormerForMaskedLM,RoFormerForQuestionAnswering:()=>n.RoFormerForQuestionAnswering,RoFormerForSequenceClassification:()=>n.RoFormerForSequenceClassification,RoFormerForTokenClassification:()=>n.RoFormerForTokenClassification,RoFormerModel:()=>n.RoFormerModel,RoFormerPreTrainedModel:()=>n.RoFormerPreTrainedModel,RoFormerTokenizer:()=>r.RoFormerTokenizer,RobertaForMaskedLM:()=>n.RobertaForMaskedLM,RobertaForQuestionAnswering:()=>n.RobertaForQuestionAnswering,RobertaForSequenceClassification:()=>n.RobertaForSequenceClassification,RobertaForTokenClassification:()=>n.RobertaForTokenClassification,RobertaModel:()=>n.RobertaModel,RobertaPreTrainedModel:()=>n.RobertaPreTrainedModel,RobertaTokenizer:()=>r.RobertaTokenizer,SamImageProcessor:()=>m.SamImageProcessor,SamImageSegmentationOutput:()=>n.SamImageSegmentationOutput,SamModel:()=>n.SamModel,SamPreTrainedModel:()=>n.SamPreTrainedModel,SamProcessor:()=>g.SamProcessor,SapiensForDepthEstimation:()=>n.SapiensForDepthEstimation,SapiensForNormalEstimation:()=>n.SapiensForNormalEstimation,SapiensForSemanticSegmentation:()=>n.SapiensForSemanticSegmentation,SapiensPreTrainedModel:()=>n.SapiensPreTrainedModel,SeamlessM4TFeatureExtractor:()=>d.SeamlessM4TFeatureExtractor,SegformerFeatureExtractor:()=>m.SegformerFeatureExtractor,SegformerForImageClassification:()=>n.SegformerForImageClassification,SegformerForSemanticSegmentation:()=>n.SegformerForSemanticSegmentation,SegformerImageProcessor:()=>m.SegformerImageProcessor,SegformerModel:()=>n.SegformerModel,SegformerPreTrainedModel:()=>n.SegformerPreTrainedModel,Seq2SeqLMOutput:()=>n.Seq2SeqLMOutput,SequenceClassifierOutput:()=>n.SequenceClassifierOutput,SiglipImageProcessor:()=>m.SiglipImageProcessor,SiglipModel:()=>n.SiglipModel,SiglipPreTrainedModel:()=>n.SiglipPreTrainedModel,SiglipTextModel:()=>n.SiglipTextModel,SiglipTokenizer:()=>r.SiglipTokenizer,SiglipVisionModel:()=>n.SiglipVisionModel,SmolLM3ForCausalLM:()=>n.SmolLM3ForCausalLM,SmolLM3Model:()=>n.SmolLM3Model,SmolLM3PreTrainedModel:()=>n.SmolLM3PreTrainedModel,SmolVLMForConditionalGeneration:()=>n.SmolVLMForConditionalGeneration,SmolVLMImageProcessor:()=>m.SmolVLMImageProcessor,SmolVLMProcessor:()=>g.SmolVLMProcessor,SnacDecoderModel:()=>n.SnacDecoderModel,SnacEncoderModel:()=>n.SnacEncoderModel,SnacFeatureExtractor:()=>d.SnacFeatureExtractor,SnacModel:()=>n.SnacModel,SnacPreTrainedModel:()=>n.SnacPreTrainedModel,SpeechT5FeatureExtractor:()=>d.SpeechT5FeatureExtractor,SpeechT5ForSpeechToText:()=>n.SpeechT5ForSpeechToText,SpeechT5ForTextToSpeech:()=>n.SpeechT5ForTextToSpeech,SpeechT5HifiGan:()=>n.SpeechT5HifiGan,SpeechT5Model:()=>n.SpeechT5Model,SpeechT5PreTrainedModel:()=>n.SpeechT5PreTrainedModel,SpeechT5Processor:()=>g.SpeechT5Processor,SpeechT5Tokenizer:()=>r.SpeechT5Tokenizer,SqueezeBertForMaskedLM:()=>n.SqueezeBertForMaskedLM,SqueezeBertForQuestionAnswering:()=>n.SqueezeBertForQuestionAnswering,SqueezeBertForSequenceClassification:()=>n.SqueezeBertForSequenceClassification,SqueezeBertModel:()=>n.SqueezeBertModel,SqueezeBertPreTrainedModel:()=>n.SqueezeBertPreTrainedModel,SqueezeBertTokenizer:()=>r.SqueezeBertTokenizer,StableLmForCausalLM:()=>n.StableLmForCausalLM,StableLmModel:()=>n.StableLmModel,StableLmPreTrainedModel:()=>n.StableLmPreTrainedModel,Starcoder2ForCausalLM:()=>n.Starcoder2ForCausalLM,Starcoder2Model:()=>n.Starcoder2Model,Starcoder2PreTrainedModel:()=>n.Starcoder2PreTrainedModel,StoppingCriteria:()=>b.StoppingCriteria,StoppingCriteriaList:()=>b.StoppingCriteriaList,StyleTextToSpeech2Model:()=>n.StyleTextToSpeech2Model,StyleTextToSpeech2PreTrainedModel:()=>n.StyleTextToSpeech2PreTrainedModel,SummarizationPipeline:()=>t.SummarizationPipeline,SuppressTokensAtBeginLogitsProcessor:()=>x.SuppressTokensAtBeginLogitsProcessor,Swin2SRForImageSuperResolution:()=>n.Swin2SRForImageSuperResolution,Swin2SRImageProcessor:()=>m.Swin2SRImageProcessor,Swin2SRModel:()=>n.Swin2SRModel,Swin2SRPreTrainedModel:()=>n.Swin2SRPreTrainedModel,SwinForImageClassification:()=>n.SwinForImageClassification,SwinForSemanticSegmentation:()=>n.SwinForSemanticSegmentation,SwinModel:()=>n.SwinModel,SwinPreTrainedModel:()=>n.SwinPreTrainedModel,T5ForConditionalGeneration:()=>n.T5ForConditionalGeneration,T5Model:()=>n.T5Model,T5PreTrainedModel:()=>n.T5PreTrainedModel,T5Tokenizer:()=>r.T5Tokenizer,TableTransformerForObjectDetection:()=>n.TableTransformerForObjectDetection,TableTransformerModel:()=>n.TableTransformerModel,TableTransformerObjectDetectionOutput:()=>n.TableTransformerObjectDetectionOutput,TableTransformerPreTrainedModel:()=>n.TableTransformerPreTrainedModel,TemperatureLogitsWarper:()=>x.TemperatureLogitsWarper,Tensor:()=>l.Tensor,Text2TextGenerationPipeline:()=>t.Text2TextGenerationPipeline,TextClassificationPipeline:()=>t.TextClassificationPipeline,TextGenerationPipeline:()=>t.TextGenerationPipeline,TextStreamer:()=>y.TextStreamer,TextToAudioPipeline:()=>t.TextToAudioPipeline,TokenClassificationPipeline:()=>t.TokenClassificationPipeline,TokenClassifierOutput:()=>n.TokenClassifierOutput,TokenizerModel:()=>r.TokenizerModel,TopKLogitsWarper:()=>x.TopKLogitsWarper,TopPLogitsWarper:()=>x.TopPLogitsWarper,TrOCRForCausalLM:()=>n.TrOCRForCausalLM,TrOCRPreTrainedModel:()=>n.TrOCRPreTrainedModel,TranslationPipeline:()=>t.TranslationPipeline,UltravoxModel:()=>n.UltravoxModel,UltravoxPreTrainedModel:()=>n.UltravoxPreTrainedModel,UltravoxProcessor:()=>g.UltravoxProcessor,UniSpeechForCTC:()=>n.UniSpeechForCTC,UniSpeechForSequenceClassification:()=>n.UniSpeechForSequenceClassification,UniSpeechModel:()=>n.UniSpeechModel,UniSpeechPreTrainedModel:()=>n.UniSpeechPreTrainedModel,UniSpeechSatForAudioFrameClassification:()=>n.UniSpeechSatForAudioFrameClassification,UniSpeechSatForCTC:()=>n.UniSpeechSatForCTC,UniSpeechSatForSequenceClassification:()=>n.UniSpeechSatForSequenceClassification,UniSpeechSatModel:()=>n.UniSpeechSatModel,UniSpeechSatPreTrainedModel:()=>n.UniSpeechSatPreTrainedModel,VLChatProcessor:()=>g.VLChatProcessor,VLMImageProcessor:()=>m.VLMImageProcessor,VaultGemmaForCausalLM:()=>n.VaultGemmaForCausalLM,VaultGemmaModel:()=>n.VaultGemmaModel,VaultGemmaPreTrainedModel:()=>n.VaultGemmaPreTrainedModel,ViTFeatureExtractor:()=>m.ViTFeatureExtractor,ViTForImageClassification:()=>n.ViTForImageClassification,ViTImageProcessor:()=>m.ViTImageProcessor,ViTMAEModel:()=>n.ViTMAEModel,ViTMAEPreTrainedModel:()=>n.ViTMAEPreTrainedModel,ViTMSNForImageClassification:()=>n.ViTMSNForImageClassification,ViTMSNModel:()=>n.ViTMSNModel,ViTMSNPreTrainedModel:()=>n.ViTMSNPreTrainedModel,ViTModel:()=>n.ViTModel,ViTPreTrainedModel:()=>n.ViTPreTrainedModel,VisionEncoderDecoderModel:()=>n.VisionEncoderDecoderModel,VitMatteForImageMatting:()=>n.VitMatteForImageMatting,VitMatteImageProcessor:()=>m.VitMatteImageProcessor,VitMattePreTrainedModel:()=>n.VitMattePreTrainedModel,VitPoseForPoseEstimation:()=>n.VitPoseForPoseEstimation,VitPoseImageProcessor:()=>m.VitPoseImageProcessor,VitPosePreTrainedModel:()=>n.VitPosePreTrainedModel,VitsModel:()=>n.VitsModel,VitsModelOutput:()=>n.VitsModelOutput,VitsPreTrainedModel:()=>n.VitsPreTrainedModel,VitsTokenizer:()=>r.VitsTokenizer,VoxtralForConditionalGeneration:()=>n.VoxtralForConditionalGeneration,VoxtralProcessor:()=>g.VoxtralProcessor,Wav2Vec2BertForCTC:()=>n.Wav2Vec2BertForCTC,Wav2Vec2BertForSequenceClassification:()=>n.Wav2Vec2BertForSequenceClassification,Wav2Vec2BertModel:()=>n.Wav2Vec2BertModel,Wav2Vec2BertPreTrainedModel:()=>n.Wav2Vec2BertPreTrainedModel,Wav2Vec2CTCTokenizer:()=>r.Wav2Vec2CTCTokenizer,Wav2Vec2FeatureExtractor:()=>d.Wav2Vec2FeatureExtractor,Wav2Vec2ForAudioFrameClassification:()=>n.Wav2Vec2ForAudioFrameClassification,Wav2Vec2ForCTC:()=>n.Wav2Vec2ForCTC,Wav2Vec2ForSequenceClassification:()=>n.Wav2Vec2ForSequenceClassification,Wav2Vec2Model:()=>n.Wav2Vec2Model,Wav2Vec2PreTrainedModel:()=>n.Wav2Vec2PreTrainedModel,Wav2Vec2Processor:()=>g.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>g.Wav2Vec2ProcessorWithLM,WavLMForAudioFrameClassification:()=>n.WavLMForAudioFrameClassification,WavLMForCTC:()=>n.WavLMForCTC,WavLMForSequenceClassification:()=>n.WavLMForSequenceClassification,WavLMForXVector:()=>n.WavLMForXVector,WavLMModel:()=>n.WavLMModel,WavLMPreTrainedModel:()=>n.WavLMPreTrainedModel,WeSpeakerFeatureExtractor:()=>d.WeSpeakerFeatureExtractor,WeSpeakerResNetModel:()=>n.WeSpeakerResNetModel,WeSpeakerResNetPreTrainedModel:()=>n.WeSpeakerResNetPreTrainedModel,WhisperFeatureExtractor:()=>d.WhisperFeatureExtractor,WhisperForConditionalGeneration:()=>n.WhisperForConditionalGeneration,WhisperModel:()=>n.WhisperModel,WhisperPreTrainedModel:()=>n.WhisperPreTrainedModel,WhisperProcessor:()=>g.WhisperProcessor,WhisperTextStreamer:()=>y.WhisperTextStreamer,WhisperTimeStampLogitsProcessor:()=>x.WhisperTimeStampLogitsProcessor,WhisperTokenizer:()=>r.WhisperTokenizer,XLMForQuestionAnswering:()=>n.XLMForQuestionAnswering,XLMForSequenceClassification:()=>n.XLMForSequenceClassification,XLMForTokenClassification:()=>n.XLMForTokenClassification,XLMModel:()=>n.XLMModel,XLMPreTrainedModel:()=>n.XLMPreTrainedModel,XLMRobertaForMaskedLM:()=>n.XLMRobertaForMaskedLM,XLMRobertaForQuestionAnswering:()=>n.XLMRobertaForQuestionAnswering,XLMRobertaForSequenceClassification:()=>n.XLMRobertaForSequenceClassification,XLMRobertaForTokenClassification:()=>n.XLMRobertaForTokenClassification,XLMRobertaModel:()=>n.XLMRobertaModel,XLMRobertaPreTrainedModel:()=>n.XLMRobertaPreTrainedModel,XLMRobertaTokenizer:()=>r.XLMRobertaTokenizer,XLMTokenizer:()=>r.XLMTokenizer,XLMWithLMHeadModel:()=>n.XLMWithLMHeadModel,XVectorOutput:()=>n.XVectorOutput,YolosFeatureExtractor:()=>m.YolosFeatureExtractor,YolosForObjectDetection:()=>n.YolosForObjectDetection,YolosImageProcessor:()=>m.YolosImageProcessor,YolosModel:()=>n.YolosModel,YolosObjectDetectionOutput:()=>n.YolosObjectDetectionOutput,YolosPreTrainedModel:()=>n.YolosPreTrainedModel,ZeroShotAudioClassificationPipeline:()=>t.ZeroShotAudioClassificationPipeline,ZeroShotClassificationPipeline:()=>t.ZeroShotClassificationPipeline,ZeroShotImageClassificationPipeline:()=>t.ZeroShotImageClassificationPipeline,ZeroShotObjectDetectionPipeline:()=>t.ZeroShotObjectDetectionPipeline,bankers_round:()=>u.bankers_round,cat:()=>l.cat,cos_sim:()=>u.cos_sim,dot:()=>u.dot,dynamic_time_warping:()=>u.dynamic_time_warping,env:()=>e.env,full:()=>l.full,full_like:()=>l.full_like,getCacheShapes:()=>s.getCacheShapes,hamming:()=>i.hamming,hanning:()=>i.hanning,interpolate:()=>l.interpolate,interpolate_4d:()=>l.interpolate_4d,interpolate_data:()=>u.interpolate_data,is_chinese_char:()=>r.is_chinese_char,layer_norm:()=>l.layer_norm,load_image:()=>a.load_image,load_video:()=>o.load_video,log_softmax:()=>u.log_softmax,magnitude:()=>u.magnitude,matmul:()=>l.matmul,max:()=>u.max,mean:()=>l.mean,mean_pooling:()=>l.mean_pooling,medianFilter:()=>u.medianFilter,mel_filter_bank:()=>i.mel_filter_bank,min:()=>u.min,ones:()=>l.ones,ones_like:()=>l.ones_like,permute:()=>l.permute,permute_data:()=>u.permute_data,pipeline:()=>t.pipeline,quantize_embeddings:()=>l.quantize_embeddings,rand:()=>l.rand,read_audio:()=>i.read_audio,rfft:()=>l.rfft,round:()=>u.round,slice:()=>l.slice,softmax:()=>u.softmax,spectrogram:()=>i.spectrogram,stack:()=>l.stack,std_mean:()=>l.std_mean,topk:()=>l.topk,window_function:()=>i.window_function,zeros:()=>l.zeros,zeros_like:()=>l.zeros_like});var e=Kd("./src/env.js"),t=Kd("./src/pipelines.js"),n=Kd("./src/models.js"),r=Kd("./src/tokenizers.js"),s=Kd("./src/configs.js"),i=Kd("./src/utils/audio.js"),a=Kd("./src/utils/image.js"),o=Kd("./src/utils/video.js"),l=Kd("./src/utils/tensor.js"),u=Kd("./src/utils/maths.js"),c=Kd("./src/base/feature_extraction_utils.js"),d=Kd("./src/models/feature_extractors.js"),p=Kd("./src/models/auto/feature_extraction_auto.js"),h=Kd("./src/base/image_processors_utils.js"),m=Kd("./src/models/image_processors.js"),f=Kd("./src/models/auto/image_processing_auto.js"),_=Kd("./src/base/processing_utils.js"),g=Kd("./src/models/processors.js"),w=Kd("./src/models/auto/processing_auto.js"),y=Kd("./src/generation/streamers.js"),b=Kd("./src/generation/stopping_criteria.js"),x=Kd("./src/generation/logits_process.js")})();var Xd=Qd.TextStreamer,Jd=Qd.pipeline}}]);
//# sourceMappingURL=84.js.map